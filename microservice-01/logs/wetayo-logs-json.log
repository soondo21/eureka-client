{"@timestamp":"2021-07-27T08:27:00.193+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 19340 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:00.317+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:00.513+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:00.601+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:00.602+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:05.840+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:06.524+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:06.535+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:06.546+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:10.513+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:10.535+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:10.537+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:10.538+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:11.223+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:11.224+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 10620 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:13.901+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:27:32.150+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:27:39.443+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:39.695+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:46.226+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:27:53.437+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:03.184+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:28:03.761+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.146+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.515+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.546+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.719+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.720+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.720+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.721+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.721+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.723+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:04.724+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.291+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.306+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.316+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.379+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627342086339 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.507+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.521+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627342086521, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.554+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.572+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.862+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.865+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:06.907+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:15.535+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:22.979+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:28:23.086+09:00","@version":"1","message":"Started DemoApplication in 93.851 seconds (JVM running for 103.15)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:30:51.567+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:30:51.567+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:30:51.576+09:00","@version":"1","message":"Completed initialization in 7 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:30:51.788+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c15f91433bf9fbcf","spanId":"c15f91433bf9fbcf"}
{"@timestamp":"2021-07-27T08:30:51.790+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c15f91433bf9fbcf","spanId":"c15f91433bf9fbcf"}
{"@timestamp":"2021-07-27T08:30:51.792+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c15f91433bf9fbcf","spanId":"c15f91433bf9fbcf"}
{"@timestamp":"2021-07-27T08:30:51.792+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@51442cc2","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c15f91433bf9fbcf","spanId":"c15f91433bf9fbcf"}
{"@timestamp":"2021-07-27T08:30:52.285+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-9","level":"WARN","level_value":30000,"traceId":"c15f91433bf9fbcf","spanId":"c15f91433bf9fbcf"}
{"@timestamp":"2021-07-27T08:30:52.287+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-9","level":"WARN","level_value":30000,"traceId":"c15f91433bf9fbcf","spanId":"c15f91433bf9fbcf"}
{"@timestamp":"2021-07-27T08:30:52.566+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:30:52.600+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:30:54.377+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:30:54.379+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-27T08:32:49.465+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"310347e372ad4820","spanId":"310347e372ad4820"}
{"@timestamp":"2021-07-27T08:32:49.466+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"310347e372ad4820","spanId":"310347e372ad4820"}
{"@timestamp":"2021-07-27T08:32:49.469+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"310347e372ad4820","spanId":"310347e372ad4820"}
{"@timestamp":"2021-07-27T08:32:49.470+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@51442cc2","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"310347e372ad4820","spanId":"310347e372ad4820"}
{"@timestamp":"2021-07-27T08:32:49.476+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-8","level":"WARN","level_value":30000,"traceId":"310347e372ad4820","spanId":"310347e372ad4820"}
{"@timestamp":"2021-07-27T08:32:49.478+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-8","level":"WARN","level_value":30000,"traceId":"310347e372ad4820","spanId":"310347e372ad4820"}
{"@timestamp":"2021-07-27T08:32:49.503+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:32:49.524+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:32:53.265+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c4600caac9950626","spanId":"c4600caac9950626"}
{"@timestamp":"2021-07-27T08:32:54.493+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bb73acaf542bd6d3","spanId":"bb73acaf542bd6d3"}
{"@timestamp":"2021-07-27T08:32:56.520+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"43145fede8c54b5b","spanId":"43145fede8c54b5b"}
{"@timestamp":"2021-07-27T08:32:58.558+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"342b9bdb86a6c0a8","spanId":"342b9bdb86a6c0a8"}
{"@timestamp":"2021-07-27T08:33:00.606+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ed434280a077299f","spanId":"ed434280a077299f"}
{"@timestamp":"2021-07-27T08:33:02.643+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"47e2e6b50eb53fda","spanId":"47e2e6b50eb53fda"}
{"@timestamp":"2021-07-27T08:33:04.683+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"eb337e98c17127d3","spanId":"eb337e98c17127d3"}
{"@timestamp":"2021-07-27T08:33:04.741+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:06.322+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:06.323+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:06.324+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:06.324+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:06.325+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:06.326+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:06.326+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:06.351+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:33:08.756+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ae090cf409d08a12","spanId":"ae090cf409d08a12"}
{"@timestamp":"2021-07-27T08:33:10.779+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fe7b4e90e22a15c4","spanId":"fe7b4e90e22a15c4"}
{"@timestamp":"2021-07-27T08:33:12.818+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"67acdf001dcf6c56","spanId":"67acdf001dcf6c56"}
{"@timestamp":"2021-07-27T08:33:14.855+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5238d8052eb2fd9a","spanId":"5238d8052eb2fd9a"}
{"@timestamp":"2021-07-27T08:33:16.889+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"9f96aaa826390724","spanId":"9f96aaa826390724"}
{"@timestamp":"2021-07-27T08:33:18.905+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d8db3e315bd3388d","spanId":"d8db3e315bd3388d"}
{"@timestamp":"2021-07-27T08:33:20.933+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"78b377bbd8cf7f7b","spanId":"78b377bbd8cf7f7b"}
{"@timestamp":"2021-07-27T08:33:22.956+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"223e6b67c45448e3","spanId":"223e6b67c45448e3"}
{"@timestamp":"2021-07-27T08:33:24.979+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8ebef702fada80ad","spanId":"8ebef702fada80ad"}
{"@timestamp":"2021-07-27T08:33:27.006+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"13eb6ba29bb7bf37","spanId":"13eb6ba29bb7bf37"}
{"@timestamp":"2021-07-27T08:33:29.047+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"5e5ae41dc11e5f7e","spanId":"5e5ae41dc11e5f7e"}
{"@timestamp":"2021-07-27T08:33:31.070+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f9e26eae6fd0a6b7","spanId":"f9e26eae6fd0a6b7"}
{"@timestamp":"2021-07-27T08:33:52.323+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4b25cc14b2eadcc","spanId":"d4b25cc14b2eadcc"}
{"@timestamp":"2021-07-27T08:33:52.324+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4b25cc14b2eadcc","spanId":"d4b25cc14b2eadcc"}
{"@timestamp":"2021-07-27T08:33:52.325+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4b25cc14b2eadcc","spanId":"d4b25cc14b2eadcc"}
{"@timestamp":"2021-07-27T08:33:52.325+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@51442cc2","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4b25cc14b2eadcc","spanId":"d4b25cc14b2eadcc"}
{"@timestamp":"2021-07-27T08:33:52.340+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-4","level":"WARN","level_value":30000,"traceId":"d4b25cc14b2eadcc","spanId":"d4b25cc14b2eadcc"}
{"@timestamp":"2021-07-27T08:33:52.341+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-4","level":"WARN","level_value":30000,"traceId":"d4b25cc14b2eadcc","spanId":"d4b25cc14b2eadcc"}
{"@timestamp":"2021-07-27T08:33:52.351+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:33:52.366+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:33:54.355+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f59fab1475d69aa0","spanId":"f59fab1475d69aa0"}
{"@timestamp":"2021-07-27T08:33:56.375+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"5dc62c34ec4879b3","spanId":"5dc62c34ec4879b3"}
{"@timestamp":"2021-07-27T08:34:14.643+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f2353717cfffb3fd","spanId":"f2353717cfffb3fd"}
{"@timestamp":"2021-07-27T08:34:14.651+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"10b27e9fa089a4da","spanId":"10b27e9fa089a4da"}
{"@timestamp":"2021-07-27T08:34:16.685+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8a13f09528a1f9d2","spanId":"8a13f09528a1f9d2"}
{"@timestamp":"2021-07-27T08:34:18.705+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4f209da62e39ba8e","spanId":"4f209da62e39ba8e"}
{"@timestamp":"2021-07-27T08:34:20.737+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"679f85d5e6b67dd7","spanId":"679f85d5e6b67dd7"}
{"@timestamp":"2021-07-27T08:34:22.787+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"70a5b5eee976c353","spanId":"70a5b5eee976c353"}
{"@timestamp":"2021-07-27T08:34:24.802+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"744984a69c981a07","spanId":"744984a69c981a07"}
{"@timestamp":"2021-07-27T08:34:28.866+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"0ea8cc8f6a16e010","spanId":"0ea8cc8f6a16e010"}
{"@timestamp":"2021-07-27T08:34:30.896+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"f1eafeaeeee178b7","spanId":"f1eafeaeeee178b7"}
{"@timestamp":"2021-07-27T08:34:32.931+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"dcd08621925d52ba","spanId":"dcd08621925d52ba"}
{"@timestamp":"2021-07-27T08:34:34.953+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"59aa97484c73c942","spanId":"59aa97484c73c942"}
{"@timestamp":"2021-07-27T08:34:43.076+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f6a9b3b00e28769a","spanId":"f6a9b3b00e28769a"}
{"@timestamp":"2021-07-27T08:34:43.077+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"45cc0e8ca2f6b0b6","spanId":"45cc0e8ca2f6b0b6"}
{"@timestamp":"2021-07-27T08:34:45.105+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9aeb171669c30272","spanId":"9aeb171669c30272"}
{"@timestamp":"2021-07-27T08:34:51.852+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"340ad89bc1318a8f","spanId":"340ad89bc1318a8f"}
{"@timestamp":"2021-07-27T08:34:51.856+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1aec2812294fdab7","spanId":"1aec2812294fdab7"}
{"@timestamp":"2021-07-27T08:34:54.035+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"abcca1b5fbad7e15","spanId":"abcca1b5fbad7e15"}
{"@timestamp":"2021-07-27T08:34:54.037+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"59b840cb2848103a","spanId":"59b840cb2848103a"}
{"@timestamp":"2021-07-27T08:38:02.032+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"43682100b943de5d","spanId":"43682100b943de5d"}
{"@timestamp":"2021-07-27T08:38:02.034+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"43682100b943de5d","spanId":"43682100b943de5d"}
{"@timestamp":"2021-07-27T08:38:02.034+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"43682100b943de5d","spanId":"43682100b943de5d"}
{"@timestamp":"2021-07-27T08:38:02.034+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@51442cc2","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"43682100b943de5d","spanId":"43682100b943de5d"}
{"@timestamp":"2021-07-27T08:38:02.048+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-6","level":"WARN","level_value":30000,"traceId":"43682100b943de5d","spanId":"43682100b943de5d"}
{"@timestamp":"2021-07-27T08:38:02.049+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-6","level":"WARN","level_value":30000,"traceId":"43682100b943de5d","spanId":"43682100b943de5d"}
{"@timestamp":"2021-07-27T08:38:02.058+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:38:02.076+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:38:04.745+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:06.368+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:06.369+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:06.369+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:06.369+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:06.370+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:06.370+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:06.371+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:10.413+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8091/eureka/} exception=I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:10.414+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:38:10.467+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8091/eureka/} exception=I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 19 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 32 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:10.468+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:38:14.506+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8091/eureka/}, exception=I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:14.507+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:38:14.508+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 300 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:14.536+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8091/eureka/}, exception=I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:38:14.537+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:38:14.537+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:38:23.462+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e9f59a076fedc026","spanId":"e9f59a076fedc026"}
{"@timestamp":"2021-07-27T08:38:23.462+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"80422a775cc4f09e","spanId":"80422a775cc4f09e"}
{"@timestamp":"2021-07-27T08:38:23.463+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"7cd8de04aaf3afcc","spanId":"7cd8de04aaf3afcc"}
{"@timestamp":"2021-07-27T08:38:23.464+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cec7d80dc8b329ed","spanId":"cec7d80dc8b329ed"}
{"@timestamp":"2021-07-27T08:38:25.491+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"96ef654e55dff3f8","spanId":"96ef654e55dff3f8"}
{"@timestamp":"2021-07-27T08:38:29.558+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"01f08c994ecad067","spanId":"01f08c994ecad067"}
{"@timestamp":"2021-07-27T08:38:37.677+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"4458f6f3e63c0bb9","spanId":"4458f6f3e63c0bb9"}
{"@timestamp":"2021-07-27T08:38:39.702+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b2ed918637bbbb22","spanId":"b2ed918637bbbb22"}
{"@timestamp":"2021-07-27T08:38:41.719+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a31ae173f4d8eb8d","spanId":"a31ae173f4d8eb8d"}
{"@timestamp":"2021-07-27T08:38:41.719+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"71aa9d4292b0ddb4","spanId":"71aa9d4292b0ddb4"}
{"@timestamp":"2021-07-27T08:38:43.743+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"47fce96166fb8a29","spanId":"47fce96166fb8a29"}
{"@timestamp":"2021-07-27T08:38:49.842+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cf1ec15b40fabbba","spanId":"cf1ec15b40fabbba"}
{"@timestamp":"2021-07-27T08:38:49.843+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"deef97501a7c5a22","spanId":"deef97501a7c5a22"}
{"@timestamp":"2021-07-27T08:38:51.871+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"14dd45f4cd912d1d","spanId":"14dd45f4cd912d1d"}
{"@timestamp":"2021-07-27T08:38:53.895+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"207b94416f169185","spanId":"207b94416f169185"}
{"@timestamp":"2021-07-27T08:38:55.924+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"ca476bbbd7bc96c6","spanId":"ca476bbbd7bc96c6"}
{"@timestamp":"2021-07-27T08:38:57.961+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"82681e1a0b070424","spanId":"82681e1a0b070424"}
{"@timestamp":"2021-07-27T08:38:57.963+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"02a3a41760b09612","spanId":"02a3a41760b09612"}
{"@timestamp":"2021-07-27T08:39:01.995+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"96525002f8954de9","spanId":"96525002f8954de9"}
{"@timestamp":"2021-07-27T08:39:04.020+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e4dd41a67fbd73ac","spanId":"e4dd41a67fbd73ac"}
{"@timestamp":"2021-07-27T08:39:04.020+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f710ddaa7ee7c358","spanId":"f710ddaa7ee7c358"}
{"@timestamp":"2021-07-27T08:42:11.131+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c4676ce97e19273f","spanId":"c4676ce97e19273f"}
{"@timestamp":"2021-07-27T08:42:11.132+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c4676ce97e19273f","spanId":"c4676ce97e19273f"}
{"@timestamp":"2021-07-27T08:42:11.132+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c4676ce97e19273f","spanId":"c4676ce97e19273f"}
{"@timestamp":"2021-07-27T08:42:11.133+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@51442cc2","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c4676ce97e19273f","spanId":"c4676ce97e19273f"}
{"@timestamp":"2021-07-27T08:42:11.140+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-1","level":"WARN","level_value":30000,"traceId":"c4676ce97e19273f","spanId":"c4676ce97e19273f"}
{"@timestamp":"2021-07-27T08:42:11.141+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-1","level":"WARN","level_value":30000,"traceId":"c4676ce97e19273f","spanId":"c4676ce97e19273f"}
{"@timestamp":"2021-07-27T08:42:11.152+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:42:11.167+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:42:20.624+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7cd2f2a00708ba54","spanId":"7cd2f2a00708ba54"}
{"@timestamp":"2021-07-27T08:42:20.624+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2265291a83e3226e","spanId":"2265291a83e3226e"}
{"@timestamp":"2021-07-27T08:42:22.641+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"6659168716340072","spanId":"6659168716340072"}
{"@timestamp":"2021-07-27T08:42:24.674+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e19d2b2717caff39","spanId":"e19d2b2717caff39"}
{"@timestamp":"2021-07-27T08:42:26.711+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5e138eaed1809742","spanId":"5e138eaed1809742"}
{"@timestamp":"2021-07-27T08:42:30.765+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"096e90993b50f0fa","spanId":"096e90993b50f0fa"}
{"@timestamp":"2021-07-27T08:42:32.779+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"0ade991cc1fae3f6","spanId":"0ade991cc1fae3f6"}
{"@timestamp":"2021-07-27T08:42:32.779+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"575ef66ef2cb2316","spanId":"575ef66ef2cb2316"}
{"@timestamp":"2021-07-27T08:43:04.754+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:14.516+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:14.517+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:14.517+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:14.518+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:14.518+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:14.519+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:14.519+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:18.627+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8091/eureka/}, exception=I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:18.627+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8091/eureka/}, exception=I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:43:18.628+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8091/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:43:18.635+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8091/eureka/apps/\": Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8091 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:43:18.635+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:43:18.636+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 300 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:45:30.645+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6f6b87a7f7b4807e","spanId":"6f6b87a7f7b4807e"}
{"@timestamp":"2021-07-27T08:45:30.646+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6f6b87a7f7b4807e","spanId":"6f6b87a7f7b4807e"}
{"@timestamp":"2021-07-27T08:45:30.647+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6f6b87a7f7b4807e","spanId":"6f6b87a7f7b4807e"}
{"@timestamp":"2021-07-27T08:45:30.647+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@51442cc2","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6f6b87a7f7b4807e","spanId":"6f6b87a7f7b4807e"}
{"@timestamp":"2021-07-27T08:45:30.651+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-5","level":"WARN","level_value":30000,"traceId":"6f6b87a7f7b4807e","spanId":"6f6b87a7f7b4807e"}
{"@timestamp":"2021-07-27T08:45:30.652+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-5","level":"WARN","level_value":30000,"traceId":"6f6b87a7f7b4807e","spanId":"6f6b87a7f7b4807e"}
{"@timestamp":"2021-07-27T08:45:30.661+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:45:30.680+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:45:32.679+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3e642ef432561882","spanId":"3e642ef432561882"}
{"@timestamp":"2021-07-27T08:45:50.993+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"985d4c30bea27097","spanId":"985d4c30bea27097"}
{"@timestamp":"2021-07-27T08:45:50.997+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"d134249eab8c5c2f","spanId":"d134249eab8c5c2f"}
{"@timestamp":"2021-07-27T08:45:51.001+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"6b8f32aaed251b71","spanId":"6b8f32aaed251b71"}
{"@timestamp":"2021-07-27T08:45:51.001+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8e90f0b6fb73b861","spanId":"8e90f0b6fb73b861"}
{"@timestamp":"2021-07-27T08:46:10.346+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14f52f811ae8b010","spanId":"14f52f811ae8b010"}
{"@timestamp":"2021-07-27T08:46:10.346+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14f52f811ae8b010","spanId":"14f52f811ae8b010"}
{"@timestamp":"2021-07-27T08:46:10.347+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14f52f811ae8b010","spanId":"14f52f811ae8b010"}
{"@timestamp":"2021-07-27T08:46:10.347+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@51442cc2","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14f52f811ae8b010","spanId":"14f52f811ae8b010"}
{"@timestamp":"2021-07-27T08:46:10.351+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-4","level":"WARN","level_value":30000,"traceId":"14f52f811ae8b010","spanId":"14f52f811ae8b010"}
{"@timestamp":"2021-07-27T08:46:10.351+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-4","level":"WARN","level_value":30000,"traceId":"14f52f811ae8b010","spanId":"14f52f811ae8b010"}
{"@timestamp":"2021-07-27T08:46:10.358+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:46:10.371+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:46:26.612+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5c7e113b784d24af","spanId":"5c7e113b784d24af"}
{"@timestamp":"2021-07-27T08:46:26.613+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b5fc71e9bfd350b2","spanId":"b5fc71e9bfd350b2"}
{"@timestamp":"2021-07-27T08:46:26.614+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"08fe047559c25c73","spanId":"08fe047559c25c73"}
{"@timestamp":"2021-07-27T08:46:28.635+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"cffa596408b7401d","spanId":"cffa596408b7401d"}
{"@timestamp":"2021-07-27T08:46:30.651+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"57f741a006e4218d","spanId":"57f741a006e4218d"}
{"@timestamp":"2021-07-27T08:46:30.652+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"72f39c40ef481e34","spanId":"72f39c40ef481e34"}
{"@timestamp":"2021-07-27T08:47:49.047+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 25076 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:47:49.015+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:47:49.055+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:47:49.234+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:47:49.235+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:47:55.043+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:47:56.237+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:47:56.261+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:47:56.282+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:03.847+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:03.893+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:03.896+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:03.898+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:04.755+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:04.756+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 15515 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:08.119+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:48:23.531+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:48:27.508+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:27.669+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:31.485+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:35.209+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.401+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:48:38.571+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.683+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.860+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.865+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.901+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.901+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.902+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.903+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.903+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.903+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:38.904+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.207+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$5a643be8.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)\r\n\tat java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.example.demo.DemoApplication.main(DemoApplication.java:12)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 73 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 86 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.210+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:48:43.213+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$5a643be8.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)\r\n\tat java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.example.demo.DemoApplication.main(DemoApplication.java:12)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.220+09:00","@version":"1","message":"Initial registry fetch from primary servers failed","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.221+09:00","@version":"1","message":"Using default backup registry implementation which does not do anything.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:48:43.223+09:00","@version":"1","message":"Initial registry fetch from backup servers failed","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.227+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.233+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.249+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627343323246 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.280+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.281+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627343323281, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.285+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.288+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.326+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:43.327+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:46.997+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:47.377+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:47.378+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:48:47.382+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:48:47.384+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:48:50.564+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:48:50.651+09:00","@version":"1","message":"Started DemoApplication in 70.472 seconds (JVM running for 72.763)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:13.236+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:13.237+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:13.237+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:13.238+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:13.239+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:13.240+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:13.240+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:17.347+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:17.347+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:17.349+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:49:17.355+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:49:17.355+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:49:17.356+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:17.392+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:21.463+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:21.465+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:49:21.465+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:49:21.466+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:49:47.363+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:47.363+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:47.363+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:47.364+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:47.364+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:47.365+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:47.365+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:51.442+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:51.444+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:49:51.444+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:51.445+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:51.452+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:49:51.453+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:49:51.471+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:55.534+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:49:55.534+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:49:55.535+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:49:55.536+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:50:21.457+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:21.458+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:21.458+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:21.459+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:21.459+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:21.460+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:21.460+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:25.532+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:25.532+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:25.532+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:50:25.539+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:50:25.540+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:25.540+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:50:25.546+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:29.618+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:29.619+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:50:29.619+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:50:29.620+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:50:55.550+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:55.551+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:55.551+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:55.551+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:55.551+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:55.551+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:55.552+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:59.597+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:59.597+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:50:59.598+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:50:59.613+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:59.614+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:50:59.614+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:50:59.627+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:45.181+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 13192 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:45.171+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:45.191+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:45.285+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:45.286+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:47.771+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:48.407+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:48.417+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:48.426+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:51.922+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:51.937+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:51.939+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:51.939+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:52.275+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:52.276+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 6989 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:51:54.007+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:52:01.981+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:06.193+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:06.276+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:10.020+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:14.132+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:16.790+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:52:16.899+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.002+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.119+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.128+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.174+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.174+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.175+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.175+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.175+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.175+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:17.176+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.494+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$9d138858.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)\r\n\tat java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.example.demo.DemoApplication.main(DemoApplication.java:12)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 73 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 86 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.496+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:52:21.498+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$9d138858.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)\r\n\tat java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.example.demo.DemoApplication.main(DemoApplication.java:12)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.503+09:00","@version":"1","message":"Initial registry fetch from primary servers failed","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.503+09:00","@version":"1","message":"Using default backup registry implementation which does not do anything.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:52:21.504+09:00","@version":"1","message":"Initial registry fetch from backup servers failed","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.506+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.510+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.517+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627343541515 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.542+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.543+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627343541543, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.546+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.549+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.582+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:21.583+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:25.191+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:25.647+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:25.648+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:52:25.653+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:52:25.654+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:52:28.725+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:28.783+09:00","@version":"1","message":"Started DemoApplication in 48.398 seconds (JVM running for 50.321)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:51.554+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:51.554+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:51.554+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:51.559+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:51.560+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:51.561+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:51.561+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:55.648+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:55.648+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:55.649+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:52:55.651+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:52:55.651+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:55.652+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:52:55.662+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:59.720+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:52:59.721+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:52:59.722+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:52:59.722+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:53:25.660+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:25.661+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:25.661+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:25.661+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:25.661+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:25.662+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:25.663+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:29.738+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:29.740+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:29.741+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:53:29.741+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:53:29.754+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:29.756+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:53:29.756+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:33.811+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:33.812+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:53:33.813+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:53:33.814+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:53:59.760+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:59.761+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:59.762+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:59.763+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:59.763+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:59.764+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:53:59.764+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:03.828+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:03.830+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:03.832+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:54:03.832+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:54:03.845+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:03.847+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:54:03.847+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:07.895+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:07.895+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:54:07.896+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:54:07.897+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:54:33.859+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:33.860+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:33.860+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:33.862+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:33.862+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:33.863+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:33.863+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:37.901+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:37.932+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:37.933+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:54:37.933+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:54:37.948+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:37.949+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:54:37.950+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:41.950+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:54:41.951+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:54:41.951+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:54:41.953+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:55:07.958+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:07.959+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:07.960+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:07.960+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:07.961+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:07.961+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:07.961+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:11.964+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:12.011+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:12.011+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:55:12.011+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:55:12.043+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:12.045+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:55:12.046+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:16.028+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:16.030+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:55:16.031+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:55:16.032+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:55:42.054+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:42.054+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:42.055+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:42.055+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:42.055+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:42.056+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:42.056+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:46.045+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:46.092+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:46.093+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:55:46.094+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:55:46.123+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:46.124+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:55:46.124+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:50.083+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:55:50.084+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:55:50.085+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:55:50.086+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:56:16.131+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:16.132+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:16.133+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:16.133+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:16.133+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:16.134+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:16.134+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:20.092+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:20.169+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:20.170+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:56:20.171+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:56:20.200+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:20.200+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:56:20.200+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:24.153+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:24.154+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:56:24.154+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:56:24.155+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:56:50.207+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:50.207+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:50.207+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:50.207+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:50.207+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:50.209+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:50.209+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:54.169+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:54.245+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:54.246+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:56:54.247+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:56:54.276+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:54.277+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:56:54.277+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:58.239+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:56:58.240+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:56:58.240+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:56:58.241+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:57:17.187+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:24.283+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:24.284+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:24.284+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:24.285+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:24.285+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:24.285+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:24.286+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:28.255+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:28.333+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:28.334+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:57:28.335+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:57:28.364+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:28.365+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:57:28.366+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:32.304+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:32.305+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:57:32.305+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:57:32.306+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:57:58.369+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:58.373+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:58.373+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:58.373+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:58.374+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:58.374+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:57:58.374+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:02.320+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:02.402+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:02.403+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:58:02.404+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:58:02.445+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:02.446+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:58:02.447+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:06.377+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:06.378+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:58:06.379+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:58:06.379+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:58:32.449+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:32.450+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:32.450+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:32.451+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:32.451+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:32.452+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:32.452+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:36.394+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:36.488+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:36.488+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:58:36.489+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:58:36.519+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:36.519+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:58:36.519+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:40.455+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:58:40.456+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:58:40.457+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:58:40.457+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:59:06.532+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:06.532+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:06.533+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:06.533+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:06.534+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:06.534+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:06.535+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:10.463+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:10.570+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:10.572+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:59:10.572+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:59:10.601+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:10.602+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:59:10.603+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:14.516+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:14.516+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:59:14.517+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:59:14.517+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:59:40.604+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:40.604+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:40.605+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:40.605+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:40.605+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:40.605+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:40.605+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:44.524+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:44.647+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:44.648+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:59:44.649+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:59:44.667+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:44.668+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:59:44.670+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:48.583+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T08:59:48.583+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T08:59:48.584+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T08:59:48.585+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:00:14.678+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:14.679+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:14.679+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:14.679+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:14.680+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:14.680+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:14.680+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:18.597+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:18.738+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:18.738+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:00:18.739+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:00:18.752+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:18.753+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:00:18.753+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:22.655+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:22.656+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:00:22.656+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:00:22.656+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:00:48.758+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:48.759+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:48.759+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:48.760+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:48.760+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:48.760+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:48.760+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:52.669+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:52.808+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:52.808+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:00:52.809+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:00:52.824+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:52.824+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:00:52.825+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:56.738+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:00:56.739+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:00:56.740+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:00:56.740+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:01:22.832+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:22.832+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:22.836+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:22.836+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:22.837+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:22.837+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:22.837+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:26.744+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:26.883+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:26.883+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:01:26.884+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:01:26.898+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:26.898+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:01:26.900+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:30.807+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:30.808+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:01:30.808+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:01:30.809+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:01:56.915+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:56.915+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:56.916+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:56.916+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:56.916+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:56.916+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:01:56.916+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:00.813+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:00.966+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:00.967+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:02:00.967+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:02:00.997+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:00.997+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:02:00.997+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:04.858+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:04.858+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:02:04.859+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:02:04.859+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:02:17.199+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:31.012+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:31.012+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:31.013+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:31.013+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:31.013+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:31.013+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:31.013+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:34.863+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:35.046+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:35.046+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:02:35.047+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:02:35.076+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:35.076+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:02:35.077+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:38.911+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:02:38.911+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:02:38.911+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:02:38.912+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:03:05.083+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:05.084+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:05.084+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:05.084+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:05.084+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:05.085+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:05.085+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:08.925+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:09.110+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:09.110+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:03:09.111+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:03:09.139+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:09.141+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:03:09.141+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:12.982+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:12.983+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:03:12.983+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:03:12.984+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:03:39.148+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:39.148+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:39.149+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:39.149+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:39.149+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:39.149+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:39.149+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:42.994+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:43.211+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:43.211+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:03:43.212+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:03:43.228+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:43.229+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:03:43.230+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:47.053+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:03:47.054+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:03:47.054+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:03:47.054+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:04:13.243+09:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:13.243+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:13.244+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:13.244+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:13.244+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:13.244+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:13.244+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:17.060+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:17.273+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:17.273+09:00","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01/localhost:microservice-01:8081\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:04:17.274+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:04:17.304+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:17.305+09:00","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:04:17.305+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:21.109+09:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.net.DualStackPlainSocketImpl.connect0(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:04:21.110+09:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/MICROSERVICE-01\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:04:21.110+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:04:21.110+09:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:05:14.298+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 20520 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:14.291+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:14.313+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:14.439+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:14.440+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:16.863+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:17.345+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:17.356+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:17.363+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:20.637+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:20.657+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:20.658+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:20.659+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:20.995+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:20.996+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 6555 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:22.672+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:05:30.116+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:05:34.170+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:34.280+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:38.072+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:41.819+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:44.936+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:05:45.104+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.210+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.342+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.348+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.381+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.381+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.382+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.382+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.383+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.383+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.383+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.723+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.729+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.735+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.748+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627344345746 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.789+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.790+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627344345790, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.794+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.798+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.853+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.854+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:45.891+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:49.392+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:53.004+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:05:53.062+09:00","@version":"1","message":"Started DemoApplication in 43.558 seconds (JVM running for 45.288)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:06:42.054+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:06:42.056+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:06:42.065+09:00","@version":"1","message":"Completed initialization in 8 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:06:42.244+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"cd3896c8912dfe9d","spanId":"cd3896c8912dfe9d"}
{"@timestamp":"2021-07-27T09:06:42.246+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"cd3896c8912dfe9d","spanId":"cd3896c8912dfe9d"}
{"@timestamp":"2021-07-27T09:06:42.248+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"cd3896c8912dfe9d","spanId":"cd3896c8912dfe9d"}
{"@timestamp":"2021-07-27T09:06:42.249+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@7129161","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"cd3896c8912dfe9d","spanId":"cd3896c8912dfe9d"}
{"@timestamp":"2021-07-27T09:06:42.739+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-1","level":"WARN","level_value":30000,"traceId":"cd3896c8912dfe9d","spanId":"cd3896c8912dfe9d"}
{"@timestamp":"2021-07-27T09:06:42.743+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-1","level":"WARN","level_value":30000,"traceId":"cd3896c8912dfe9d","spanId":"cd3896c8912dfe9d"}
{"@timestamp":"2021-07-27T09:06:42.953+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:06:42.970+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:06:44.593+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:06:44.594+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-27T09:07:44.686+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"facdf9a09dcd591f","spanId":"facdf9a09dcd591f"}
{"@timestamp":"2021-07-27T09:07:44.687+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"facdf9a09dcd591f","spanId":"facdf9a09dcd591f"}
{"@timestamp":"2021-07-27T09:07:44.689+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"facdf9a09dcd591f","spanId":"facdf9a09dcd591f"}
{"@timestamp":"2021-07-27T09:07:44.690+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@7129161","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"facdf9a09dcd591f","spanId":"facdf9a09dcd591f"}
{"@timestamp":"2021-07-27T09:07:44.744+09:00","@version":"1","message":"No servers available for service: microservice-02","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8081-exec-2","level":"WARN","level_value":30000,"traceId":"facdf9a09dcd591f","spanId":"facdf9a09dcd591f"}
{"@timestamp":"2021-07-27T09:07:44.745+09:00","@version":"1","message":"LoadBalancer does not contain an instance for the service microservice-02","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-8081-exec-2","level":"WARN","level_value":30000,"traceId":"facdf9a09dcd591f","spanId":"facdf9a09dcd591f"}
{"@timestamp":"2021-07-27T09:07:44.770+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:07:44.786+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN ] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$ServiceUnavailable: 503 Service Unavailable from UNKNOWN \r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 503 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:224)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2399)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:421)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:686)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:250)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:284)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:187)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:232)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:88)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:338)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:71)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:131)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:186)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onComplete(FluxTake.java:152)\r\n\t\tat reactor.core.publisher.FluxTake$TakeSubscriber.onNext(FluxTake.java:132)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:179)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:147)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8235)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthFluxLift.subscribe(ReactorHooksHelper.java:263)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:81)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:136)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:62)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\t\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\t\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\t\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T09:09:38.890+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 26772 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:38.876+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:38.895+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:38.994+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:38.995+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:41.527+09:00","@version":"1","message":"BeanFactory id=586f1a74-bc2b-3f68-b79f-e4f9553c7d38","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:42.150+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:42.161+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:42.171+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:45.769+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:45.807+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:45.810+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:45.811+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:46.552+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:46.552+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7556 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:49.410+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:09:57.591+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthCheckController': Unsatisfied dependency expressed through field 'healthCheckService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthCheckService': Unsatisfied dependency expressed through field 'webClient'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.web.reactive.function.client.WebClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:09:58.605+09:00","@version":"1","message":"Timed out waiting for in-flight spans to send","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:09:58.612+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:58.662+09:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:09:58.693+09:00","@version":"1","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nField webClient in com.example.demo.service.HealthCheckService required a bean of type 'org.springframework.web.reactive.function.client.WebClient' that could not be found.\r\n\r\nThe injection point has the following annotations:\r\n\t- @org.springframework.beans.factory.annotation.Autowired(required=true)\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'org.springframework.web.reactive.function.client.WebClient' in your configuration.\r\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"restartedMain","level":"ERROR","level_value":40000}
{"@timestamp":"2021-07-27T09:11:03.726+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:03.738+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 2300 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:03.739+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:03.796+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:03.796+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:05.676+09:00","@version":"1","message":"BeanFactory id=f1b5dc1a-eecb-3fb5-b0c3-46fc7b8c0303","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:06.131+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:06.137+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:06.150+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:08.569+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:08.587+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:08.588+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:08.590+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:08.958+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:08.958+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 5161 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:10.458+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:11:15.241+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:11:18.120+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:18.230+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:22.595+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:27.163+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.332+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:11:31.497+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.644+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.762+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.768+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.807+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.808+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.808+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.808+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.809+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.809+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:31.810+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.165+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.170+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.176+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.184+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627344692183 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.208+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.209+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627344692209, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.211+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.214+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.253+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.254+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:32.276+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:35.870+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:39.462+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:39.496+09:00","@version":"1","message":"Started DemoApplication in 38.888 seconds (JVM running for 39.894)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:50.716+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:50.717+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:50.722+09:00","@version":"1","message":"Completed initialization in 4 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:11:52.340+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:11:52.344+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-27T09:11:52.735+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"6fc9ed741fd8ab04","spanId":"6fc9ed741fd8ab04"}
{"@timestamp":"2021-07-27T09:11:54.652+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2a47a56901150771","spanId":"2a47a56901150771"}
{"@timestamp":"2021-07-27T09:12:00.751+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e52ceeb0d5f96990","spanId":"e52ceeb0d5f96990"}
{"@timestamp":"2021-07-27T09:12:00.753+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"fe42f03bddc7fa3a","spanId":"fe42f03bddc7fa3a"}
{"@timestamp":"2021-07-27T09:12:02.799+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"cfa7148efd510a6e","spanId":"cfa7148efd510a6e"}
{"@timestamp":"2021-07-27T09:12:04.844+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"371e1a11cf4c3751","spanId":"371e1a11cf4c3751"}
{"@timestamp":"2021-07-27T09:12:06.870+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"40c2a531a93f1e33","spanId":"40c2a531a93f1e33"}
{"@timestamp":"2021-07-27T09:12:08.900+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"285b21085a97d850","spanId":"285b21085a97d850"}
{"@timestamp":"2021-07-27T09:12:10.913+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"36032ef9c3b84974","spanId":"36032ef9c3b84974"}
{"@timestamp":"2021-07-27T09:41:12.575+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 8260 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:12.567+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:12.581+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:12.643+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:12.644+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:15.274+09:00","@version":"1","message":"BeanFactory id=f1b5dc1a-eecb-3fb5-b0c3-46fc7b8c0303","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:15.869+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:15.882+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:15.896+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:19.512+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:19.536+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:19.538+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:19.539+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:19.966+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:19.967+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7322 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:22.043+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:41:29.917+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:41:34.575+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:34.730+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:38.519+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:42.061+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.522+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:41:44.642+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.747+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.838+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.845+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.870+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.871+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.871+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.871+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.871+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.871+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:44.872+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.179+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.181+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.184+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.192+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627346505189 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.219+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.220+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627346505220, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.223+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.228+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.263+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.264+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:45.291+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:48.679+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:52.633+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:41:52.668+09:00","@version":"1","message":"Started DemoApplication in 44.315 seconds (JVM running for 45.661)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:42:53.068+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:42:53.069+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:42:53.074+09:00","@version":"1","message":"Completed initialization in 5 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:42:54.697+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T09:42:54.701+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-27T09:45:18.405+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"7e418adfe69f3364","spanId":"7e418adfe69f3364"}
{"@timestamp":"2021-07-27T09:46:44.880+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:46:45.206+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:46:45.208+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:46:45.208+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:46:45.209+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:46:45.210+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:46:45.211+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:46:45.211+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:46:45.226+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:49:51.073+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c7520c100ec1c9b4","spanId":"c7520c100ec1c9b4"}
{"@timestamp":"2021-07-27T09:49:51.073+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"7ab735498bda5a14","spanId":"7ab735498bda5a14"}
{"@timestamp":"2021-07-27T09:49:57.005+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"ca98b56fc80255e6","spanId":"ca98b56fc80255e6"}
{"@timestamp":"2021-07-27T09:49:59.030+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"cf7172a51db280af","spanId":"cf7172a51db280af"}
{"@timestamp":"2021-07-27T09:50:01.053+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5424fd6fd818f879","spanId":"5424fd6fd818f879"}
{"@timestamp":"2021-07-27T09:50:01.053+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"36526e6ee3c43f5c","spanId":"36526e6ee3c43f5c"}
{"@timestamp":"2021-07-27T09:50:03.072+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8996f3dba55c3f68","spanId":"8996f3dba55c3f68"}
{"@timestamp":"2021-07-27T09:50:25.769+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"028b728be73a4f2f","spanId":"028b728be73a4f2f"}
{"@timestamp":"2021-07-27T09:50:27.807+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"be594e5cf4ae0e48","spanId":"be594e5cf4ae0e48"}
{"@timestamp":"2021-07-27T09:50:29.824+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"37a30e82981bf8ef","spanId":"37a30e82981bf8ef"}
{"@timestamp":"2021-07-27T09:50:31.852+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a86a4d4ac31e1c7f","spanId":"a86a4d4ac31e1c7f"}
{"@timestamp":"2021-07-27T09:50:33.880+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"ae9d97d57c6a7095","spanId":"ae9d97d57c6a7095"}
{"@timestamp":"2021-07-27T09:50:35.908+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c79caadf49e556d5","spanId":"c79caadf49e556d5"}
{"@timestamp":"2021-07-27T09:50:37.923+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"57c0259e05e50993","spanId":"57c0259e05e50993"}
{"@timestamp":"2021-07-27T09:50:39.957+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"af5f85e700de4eef","spanId":"af5f85e700de4eef"}
{"@timestamp":"2021-07-27T09:50:41.985+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"fe76507a278fed0f","spanId":"fe76507a278fed0f"}
{"@timestamp":"2021-07-27T09:51:23.973+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"eca60202967905ef","spanId":"eca60202967905ef"}
{"@timestamp":"2021-07-27T09:51:23.973+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f6d1da63e9b42dcf","spanId":"f6d1da63e9b42dcf"}
{"@timestamp":"2021-07-27T09:51:26.001+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e99a2b4a75e95ef3","spanId":"e99a2b4a75e95ef3"}
{"@timestamp":"2021-07-27T09:51:28.021+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"d7810ace160e43de","spanId":"d7810ace160e43de"}
{"@timestamp":"2021-07-27T09:51:30.046+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"03939566c8adc117","spanId":"03939566c8adc117"}
{"@timestamp":"2021-07-27T09:51:32.071+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3f7e8abc19eaa679","spanId":"3f7e8abc19eaa679"}
{"@timestamp":"2021-07-27T09:51:42.049+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"633879db7dca29bb","spanId":"633879db7dca29bb"}
{"@timestamp":"2021-07-27T09:51:44.071+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0c30a02e87639a7a","spanId":"0c30a02e87639a7a"}
{"@timestamp":"2021-07-27T09:51:44.890+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:45.231+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:45.231+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:45.232+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:45.232+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:45.232+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:45.232+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:45.232+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:45.238+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:51:46.107+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a1d8f33f588a9992","spanId":"a1d8f33f588a9992"}
{"@timestamp":"2021-07-27T09:51:48.133+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f4950cafaf6160d5","spanId":"f4950cafaf6160d5"}
{"@timestamp":"2021-07-27T09:51:50.159+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c2fea991a28315be","spanId":"c2fea991a28315be"}
{"@timestamp":"2021-07-27T09:51:52.189+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"d2f9e937efb64802","spanId":"d2f9e937efb64802"}
{"@timestamp":"2021-07-27T09:52:05.829+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"caed17ea99270a77","spanId":"caed17ea99270a77"}
{"@timestamp":"2021-07-27T09:52:05.831+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2db6e8b08b103d63","spanId":"2db6e8b08b103d63"}
{"@timestamp":"2021-07-27T09:52:07.869+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ca665df0f3188087","spanId":"ca665df0f3188087"}
{"@timestamp":"2021-07-27T09:52:09.892+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"2e73be9e117dfbc5","spanId":"2e73be9e117dfbc5"}
{"@timestamp":"2021-07-27T09:52:11.920+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"39a3a660d47a328e","spanId":"39a3a660d47a328e"}
{"@timestamp":"2021-07-27T09:52:13.962+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"dce6ebb481297739","spanId":"dce6ebb481297739"}
{"@timestamp":"2021-07-27T09:52:15.990+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ea347c3a312630b9","spanId":"ea347c3a312630b9"}
{"@timestamp":"2021-07-27T09:52:34.304+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b030e7b9e127e1cf","spanId":"b030e7b9e127e1cf"}
{"@timestamp":"2021-07-27T09:52:34.305+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"74b4ebdafd295a73","spanId":"74b4ebdafd295a73"}
{"@timestamp":"2021-07-27T09:52:36.319+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"7eef80049b19ca6c","spanId":"7eef80049b19ca6c"}
{"@timestamp":"2021-07-27T09:52:38.350+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"975f743bae440170","spanId":"975f743bae440170"}
{"@timestamp":"2021-07-27T09:52:40.366+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"27951e63c1306ba4","spanId":"27951e63c1306ba4"}
{"@timestamp":"2021-07-27T09:52:42.392+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e17cb5600e715e7b","spanId":"e17cb5600e715e7b"}
{"@timestamp":"2021-07-27T09:52:44.411+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"799698e4bb6e7c8f","spanId":"799698e4bb6e7c8f"}
{"@timestamp":"2021-07-27T09:53:13.803+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0ef89514ce0d1962","spanId":"0ef89514ce0d1962"}
{"@timestamp":"2021-07-27T09:53:13.804+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"59b96a79e8e1f19c","spanId":"59b96a79e8e1f19c"}
{"@timestamp":"2021-07-27T09:53:15.826+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"d9e0fa1a38a80667","spanId":"d9e0fa1a38a80667"}
{"@timestamp":"2021-07-27T09:53:17.845+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"7392dc9fbda9f9a7","spanId":"7392dc9fbda9f9a7"}
{"@timestamp":"2021-07-27T09:53:19.870+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"f336dfa0c80d4623","spanId":"f336dfa0c80d4623"}
{"@timestamp":"2021-07-27T09:53:21.898+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"be86c19af1b25d9d","spanId":"be86c19af1b25d9d"}
{"@timestamp":"2021-07-27T09:53:23.918+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"35bdc3a8dff9a141","spanId":"35bdc3a8dff9a141"}
{"@timestamp":"2021-07-27T09:53:59.710+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"0d858622c501d629","spanId":"0d858622c501d629"}
{"@timestamp":"2021-07-27T09:53:59.711+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9028c55f09142567","spanId":"9028c55f09142567"}
{"@timestamp":"2021-07-27T09:54:01.749+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cf5aa649cffe2222","spanId":"cf5aa649cffe2222"}
{"@timestamp":"2021-07-27T09:54:03.772+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"994d225053fffb03","spanId":"994d225053fffb03"}
{"@timestamp":"2021-07-27T09:54:05.790+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e351c8c5706a43d3","spanId":"e351c8c5706a43d3"}
{"@timestamp":"2021-07-27T09:54:07.819+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0a4ea42aaede7662","spanId":"0a4ea42aaede7662"}
{"@timestamp":"2021-07-27T09:54:09.836+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0fbfda5a0b99663c","spanId":"0fbfda5a0b99663c"}
{"@timestamp":"2021-07-27T09:54:46.557+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d62b3ae2d0ffad6a","spanId":"d62b3ae2d0ffad6a"}
{"@timestamp":"2021-07-27T09:54:46.557+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"b627c3fe314138be","spanId":"b627c3fe314138be"}
{"@timestamp":"2021-07-27T09:54:56.685+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9ba88dc948604005","spanId":"9ba88dc948604005"}
{"@timestamp":"2021-07-27T09:54:56.686+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"738614cd7ec177e1","spanId":"738614cd7ec177e1"}
{"@timestamp":"2021-07-27T09:54:58.718+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"eac7d7ad48d8a011","spanId":"eac7d7ad48d8a011"}
{"@timestamp":"2021-07-27T09:55:00.747+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"3152eeaf38eb63b2","spanId":"3152eeaf38eb63b2"}
{"@timestamp":"2021-07-27T09:55:02.775+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bdb94f3bb1a34723","spanId":"bdb94f3bb1a34723"}
{"@timestamp":"2021-07-27T09:55:04.808+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"5561699175d945cb","spanId":"5561699175d945cb"}
{"@timestamp":"2021-07-27T09:55:06.821+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"05502fa6641cd085","spanId":"05502fa6641cd085"}
{"@timestamp":"2021-07-27T09:55:08.856+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ae8e6261ad9b2a45","spanId":"ae8e6261ad9b2a45"}
{"@timestamp":"2021-07-27T09:55:10.878+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5568f9ec2072acfc","spanId":"5568f9ec2072acfc"}
{"@timestamp":"2021-07-27T09:55:12.920+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"ebe114a866f75249","spanId":"ebe114a866f75249"}
{"@timestamp":"2021-07-27T09:56:44.899+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:56:45.251+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:56:45.252+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:56:45.252+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:56:45.252+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:56:45.252+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:56:45.253+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:56:45.253+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:56:45.258+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T09:57:00.421+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"677b26ec945b273f","spanId":"677b26ec945b273f"}
{"@timestamp":"2021-07-27T09:57:02.442+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"792dc06296c2c54f","spanId":"792dc06296c2c54f"}
{"@timestamp":"2021-07-27T09:57:04.470+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"03370d00f19f30af","spanId":"03370d00f19f30af"}
{"@timestamp":"2021-07-27T09:57:06.498+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c03134a8f32e11b1","spanId":"c03134a8f32e11b1"}
{"@timestamp":"2021-07-27T09:57:08.518+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"87f6e56beddba08f","spanId":"87f6e56beddba08f"}
{"@timestamp":"2021-07-27T09:57:10.541+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"ca13269707494b3e","spanId":"ca13269707494b3e"}
{"@timestamp":"2021-07-27T09:57:12.577+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5393d6d381a74e37","spanId":"5393d6d381a74e37"}
{"@timestamp":"2021-07-27T09:57:44.502+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"8c0519ebb58f8516","spanId":"8c0519ebb58f8516"}
{"@timestamp":"2021-07-27T09:57:46.536+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bc417f2953fe9df3","spanId":"bc417f2953fe9df3"}
{"@timestamp":"2021-07-27T09:57:48.566+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"192acc7be901fadc","spanId":"192acc7be901fadc"}
{"@timestamp":"2021-07-27T09:57:50.595+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"3d6a6f494c339598","spanId":"3d6a6f494c339598"}
{"@timestamp":"2021-07-27T09:57:52.650+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e540b6e9921fdfaf","spanId":"e540b6e9921fdfaf"}
{"@timestamp":"2021-07-27T09:57:58.745+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"c7a1167085648e8c","spanId":"c7a1167085648e8c"}
{"@timestamp":"2021-07-27T09:57:58.745+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"db49623b70acde60","spanId":"db49623b70acde60"}
{"@timestamp":"2021-07-27T09:58:00.769+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"0ea2da6c79a7c958","spanId":"0ea2da6c79a7c958"}
{"@timestamp":"2021-07-27T09:58:02.803+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"85b0317831e74f25","spanId":"85b0317831e74f25"}
{"@timestamp":"2021-07-27T09:58:04.835+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5799be77359ffe9d","spanId":"5799be77359ffe9d"}
{"@timestamp":"2021-07-27T09:58:06.858+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"74b3e3d667d29b8d","spanId":"74b3e3d667d29b8d"}
{"@timestamp":"2021-07-27T09:58:08.874+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"fbd86f58f3546014","spanId":"fbd86f58f3546014"}
{"@timestamp":"2021-07-27T09:58:10.901+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"03ede2dd4b3d326f","spanId":"03ede2dd4b3d326f"}
{"@timestamp":"2021-07-27T09:58:38.786+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"6d980e9287ada250","spanId":"6d980e9287ada250"}
{"@timestamp":"2021-07-27T09:58:42.845+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"510e81b461f77939","spanId":"510e81b461f77939"}
{"@timestamp":"2021-07-27T09:58:44.861+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"48240aef183dd56c","spanId":"48240aef183dd56c"}
{"@timestamp":"2021-07-27T09:58:44.861+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"28f97f7dcd939f26","spanId":"28f97f7dcd939f26"}
{"@timestamp":"2021-07-27T09:58:46.887+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"4eb7a8a7521ba789","spanId":"4eb7a8a7521ba789"}
{"@timestamp":"2021-07-27T09:58:48.911+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"9cca3fd6551ec27a","spanId":"9cca3fd6551ec27a"}
{"@timestamp":"2021-07-27T10:00:24.716+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5af5e19cf9afaedf","spanId":"5af5e19cf9afaedf"}
{"@timestamp":"2021-07-27T10:00:26.521+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"fdecc4045df54029","spanId":"fdecc4045df54029"}
{"@timestamp":"2021-07-27T10:00:28.545+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"3dbc7cdeecf74720","spanId":"3dbc7cdeecf74720"}
{"@timestamp":"2021-07-27T10:00:30.584+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4e8cc752df00f2e7","spanId":"4e8cc752df00f2e7"}
{"@timestamp":"2021-07-27T10:00:32.605+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"44930a571ad12847","spanId":"44930a571ad12847"}
{"@timestamp":"2021-07-27T10:00:34.635+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"be3bda530cbb92a6","spanId":"be3bda530cbb92a6"}
{"@timestamp":"2021-07-27T10:01:44.907+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:01:45.260+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:01:45.260+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:01:45.260+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:01:45.260+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:01:45.260+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:01:45.260+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:01:45.261+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:01:45.304+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:02:45.282+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e4671edb875ef5c3","spanId":"e4671edb875ef5c3"}
{"@timestamp":"2021-07-27T10:02:47.094+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f7c23bdd45dde50f","spanId":"f7c23bdd45dde50f"}
{"@timestamp":"2021-07-27T10:02:49.126+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"dca4e224e5cd1531","spanId":"dca4e224e5cd1531"}
{"@timestamp":"2021-07-27T10:02:51.177+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b67dedfba2b180ac","spanId":"b67dedfba2b180ac"}
{"@timestamp":"2021-07-27T10:02:53.213+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cdf8d6843b608c36","spanId":"cdf8d6843b608c36"}
{"@timestamp":"2021-07-27T10:02:55.235+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"cc8d144b5b5a205c","spanId":"cc8d144b5b5a205c"}
{"@timestamp":"2021-07-27T10:03:03.150+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"eeace3f6f6d67c2b","spanId":"eeace3f6f6d67c2b"}
{"@timestamp":"2021-07-27T10:03:05.190+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c7978e8c6b0504f4","spanId":"c7978e8c6b0504f4"}
{"@timestamp":"2021-07-27T10:03:07.208+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8f2fe90d55da73ec","spanId":"8f2fe90d55da73ec"}
{"@timestamp":"2021-07-27T10:03:09.237+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"1fb1d9f8bb729f13","spanId":"1fb1d9f8bb729f13"}
{"@timestamp":"2021-07-27T10:03:11.256+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a13319c90221b3e4","spanId":"a13319c90221b3e4"}
{"@timestamp":"2021-07-27T10:03:13.274+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"385b0babe8763f73","spanId":"385b0babe8763f73"}
{"@timestamp":"2021-07-27T10:03:25.539+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"d33a3d073eb326c9","spanId":"d33a3d073eb326c9"}
{"@timestamp":"2021-07-27T10:03:25.540+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"00d53b3abc377f09","spanId":"00d53b3abc377f09"}
{"@timestamp":"2021-07-27T10:03:29.602+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"27596f7b1c306a0b","spanId":"27596f7b1c306a0b"}
{"@timestamp":"2021-07-27T10:03:31.624+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"72af70c630387ba3","spanId":"72af70c630387ba3"}
{"@timestamp":"2021-07-27T10:03:35.667+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"317b09faac41cb3e","spanId":"317b09faac41cb3e"}
{"@timestamp":"2021-07-27T10:03:37.703+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"52953a80eb5dc105","spanId":"52953a80eb5dc105"}
{"@timestamp":"2021-07-27T10:03:39.730+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"21806b2b2e4fd190","spanId":"21806b2b2e4fd190"}
{"@timestamp":"2021-07-27T10:03:41.751+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6a078ece7c50404c","spanId":"6a078ece7c50404c"}
{"@timestamp":"2021-07-27T10:03:43.769+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"ba0e9d8c9ef4c01f","spanId":"ba0e9d8c9ef4c01f"}
{"@timestamp":"2021-07-27T10:03:45.796+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"26c97535c8902c77","spanId":"26c97535c8902c77"}
{"@timestamp":"2021-07-27T10:03:47.835+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"11d2b2be2623a3a7","spanId":"11d2b2be2623a3a7"}
{"@timestamp":"2021-07-27T10:03:49.860+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"28ceefdb69e23cd9","spanId":"28ceefdb69e23cd9"}
{"@timestamp":"2021-07-27T10:03:51.885+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1256fd3df833550d","spanId":"1256fd3df833550d"}
{"@timestamp":"2021-07-27T10:04:18.644+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2f9a4f1ad7c80dc3","spanId":"2f9a4f1ad7c80dc3"}
{"@timestamp":"2021-07-27T10:04:20.675+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"33d8d95519c69442","spanId":"33d8d95519c69442"}
{"@timestamp":"2021-07-27T10:04:24.722+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f2a7448d560a19b4","spanId":"f2a7448d560a19b4"}
{"@timestamp":"2021-07-27T10:04:26.744+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f3fd26bb2a4f8262","spanId":"f3fd26bb2a4f8262"}
{"@timestamp":"2021-07-27T10:04:28.768+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"14fdd00d32ea8ec3","spanId":"14fdd00d32ea8ec3"}
{"@timestamp":"2021-07-27T10:04:30.791+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"125c936848d59706","spanId":"125c936848d59706"}
{"@timestamp":"2021-07-27T10:04:32.824+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"fdfa8f543152065c","spanId":"fdfa8f543152065c"}
{"@timestamp":"2021-07-27T10:04:34.848+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"6109faf65b0cbe61","spanId":"6109faf65b0cbe61"}
{"@timestamp":"2021-07-27T10:04:36.869+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3030805547d142ae","spanId":"3030805547d142ae"}
{"@timestamp":"2021-07-27T10:04:38.901+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"ec9d17b6d52e4634","spanId":"ec9d17b6d52e4634"}
{"@timestamp":"2021-07-27T10:04:40.923+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"548ffea848680a87","spanId":"548ffea848680a87"}
{"@timestamp":"2021-07-27T10:04:42.954+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"c96a504de7cf76bb","spanId":"c96a504de7cf76bb"}
{"@timestamp":"2021-07-27T10:04:44.975+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"30014bdbecac182c","spanId":"30014bdbecac182c"}
{"@timestamp":"2021-07-27T10:04:46.995+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"46ee0b50bda6971b","spanId":"46ee0b50bda6971b"}
{"@timestamp":"2021-07-27T10:05:09.462+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8f84c60b2a7ee5f1","spanId":"8f84c60b2a7ee5f1"}
{"@timestamp":"2021-07-27T10:05:09.465+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"245bcdc16dc9515e","spanId":"245bcdc16dc9515e"}
{"@timestamp":"2021-07-27T10:05:15.553+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3a6962ae7ee3ebcb","spanId":"3a6962ae7ee3ebcb"}
{"@timestamp":"2021-07-27T10:05:17.571+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"63894e9de8fcea14","spanId":"63894e9de8fcea14"}
{"@timestamp":"2021-07-27T10:05:17.571+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"f4cdafd038b90d60","spanId":"f4cdafd038b90d60"}
{"@timestamp":"2021-07-27T10:05:19.603+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"ed84c1f7f6ae56fd","spanId":"ed84c1f7f6ae56fd"}
{"@timestamp":"2021-07-27T10:05:21.627+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"26426065d0851df6","spanId":"26426065d0851df6"}
{"@timestamp":"2021-07-27T10:05:23.650+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"6f388485e8b90c45","spanId":"6f388485e8b90c45"}
{"@timestamp":"2021-07-27T10:05:25.680+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"6bbcfa21bfe22697","spanId":"6bbcfa21bfe22697"}
{"@timestamp":"2021-07-27T10:05:29.728+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d94ea158fc0ae651","spanId":"d94ea158fc0ae651"}
{"@timestamp":"2021-07-27T10:05:31.755+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a4722b09bf27fe38","spanId":"a4722b09bf27fe38"}
{"@timestamp":"2021-07-27T10:05:33.811+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"24035bb9c1d025e0","spanId":"24035bb9c1d025e0"}
{"@timestamp":"2021-07-27T10:05:35.837+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"54c2290edf9ed63f","spanId":"54c2290edf9ed63f"}
{"@timestamp":"2021-07-27T10:06:44.912+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:06:45.309+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:06:45.309+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:06:45.310+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:06:45.310+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:06:45.310+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:06:45.310+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:06:45.311+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:06:45.316+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:44.917+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:45.321+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:45.322+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:45.322+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:45.322+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:45.322+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:45.323+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:45.323+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:11:45.329+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:14:48.750+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"cc8b0adf03bb0b48","spanId":"cc8b0adf03bb0b48"}
{"@timestamp":"2021-07-27T10:14:50.787+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"486df92f965d3933","spanId":"486df92f965d3933"}
{"@timestamp":"2021-07-27T10:14:52.807+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"fddbcbb02b360d82","spanId":"fddbcbb02b360d82"}
{"@timestamp":"2021-07-27T10:14:54.835+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"81a0ba356482a32f","spanId":"81a0ba356482a32f"}
{"@timestamp":"2021-07-27T10:14:56.862+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"5be194b05aa2948b","spanId":"5be194b05aa2948b"}
{"@timestamp":"2021-07-27T10:14:58.885+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"114ad2c00e8febb1","spanId":"114ad2c00e8febb1"}
{"@timestamp":"2021-07-27T10:15:00.908+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"dc60dd64b8cc02b9","spanId":"dc60dd64b8cc02b9"}
{"@timestamp":"2021-07-27T10:15:10.963+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b53538f9ceced08d","spanId":"b53538f9ceced08d"}
{"@timestamp":"2021-07-27T10:15:12.983+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49ec17f404a0a5e0","spanId":"49ec17f404a0a5e0"}
{"@timestamp":"2021-07-27T10:15:27.170+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"47375758879455c3","spanId":"47375758879455c3"}
{"@timestamp":"2021-07-27T10:15:27.170+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d1102cc2639841a2","spanId":"d1102cc2639841a2"}
{"@timestamp":"2021-07-27T10:15:29.189+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"42b13f44f18dbcf3","spanId":"42b13f44f18dbcf3"}
{"@timestamp":"2021-07-27T10:15:31.212+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3f08415f44d1a799","spanId":"3f08415f44d1a799"}
{"@timestamp":"2021-07-27T10:15:33.242+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"69feaa23b7ccbf50","spanId":"69feaa23b7ccbf50"}
{"@timestamp":"2021-07-27T10:15:35.274+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"d4065c4d2b3cab08","spanId":"d4065c4d2b3cab08"}
{"@timestamp":"2021-07-27T10:15:37.297+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ada25dedd718da0f","spanId":"ada25dedd718da0f"}
{"@timestamp":"2021-07-27T10:15:39.322+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"1f9a2c626240aa6a","spanId":"1f9a2c626240aa6a"}
{"@timestamp":"2021-07-27T10:16:11.674+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"4599c0a5925e9491","spanId":"4599c0a5925e9491"}
{"@timestamp":"2021-07-27T10:16:15.731+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"febe7ccb4c654ee7","spanId":"febe7ccb4c654ee7"}
{"@timestamp":"2021-07-27T10:16:17.748+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0279fb1cd2100d0c","spanId":"0279fb1cd2100d0c"}
{"@timestamp":"2021-07-27T10:16:29.927+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"94447cafa3441060","spanId":"94447cafa3441060"}
{"@timestamp":"2021-07-27T10:16:29.928+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"dbbaa66acfed7460","spanId":"dbbaa66acfed7460"}
{"@timestamp":"2021-07-27T10:16:31.965+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"73e876fb7a8ff4ec","spanId":"73e876fb7a8ff4ec"}
{"@timestamp":"2021-07-27T10:16:34.003+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a9a87d168d9ca213","spanId":"a9a87d168d9ca213"}
{"@timestamp":"2021-07-27T10:16:36.029+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"d734f5cc9fb6a717","spanId":"d734f5cc9fb6a717"}
{"@timestamp":"2021-07-27T10:16:38.047+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"eaaff1b470c1f9e3","spanId":"eaaff1b470c1f9e3"}
{"@timestamp":"2021-07-27T10:16:40.069+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"168c5431f86bb263","spanId":"168c5431f86bb263"}
{"@timestamp":"2021-07-27T10:16:44.923+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:45.334+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:45.335+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:45.335+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:45.335+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:45.335+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:45.335+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:45.335+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:45.342+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:16:48.906+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"15fc5806bde2b6da","spanId":"15fc5806bde2b6da"}
{"@timestamp":"2021-07-27T10:16:50.937+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"02f53541a12dc77d","spanId":"02f53541a12dc77d"}
{"@timestamp":"2021-07-27T10:16:55.004+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"91e8473f576a73f2","spanId":"91e8473f576a73f2"}
{"@timestamp":"2021-07-27T10:16:57.016+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"bd88726ba8e62b7c","spanId":"bd88726ba8e62b7c"}
{"@timestamp":"2021-07-27T10:16:59.036+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"fa66ad047cb0130f","spanId":"fa66ad047cb0130f"}
{"@timestamp":"2021-07-27T10:17:09.163+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"70ab45c2f29dd96c","spanId":"70ab45c2f29dd96c"}
{"@timestamp":"2021-07-27T10:17:09.163+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"05cdd40ffecc346d","spanId":"05cdd40ffecc346d"}
{"@timestamp":"2021-07-27T10:17:11.188+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"354a4b235e02e8cb","spanId":"354a4b235e02e8cb"}
{"@timestamp":"2021-07-27T10:17:13.206+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"295c72bf20f2d950","spanId":"295c72bf20f2d950"}
{"@timestamp":"2021-07-27T10:17:15.224+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"175a44e37cb017de","spanId":"175a44e37cb017de"}
{"@timestamp":"2021-07-27T10:17:17.247+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0f7e6d623980b986","spanId":"0f7e6d623980b986"}
{"@timestamp":"2021-07-27T10:21:44.929+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:21:45.355+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:21:45.356+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:21:45.356+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:21:45.356+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:21:45.357+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:21:45.358+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:21:45.359+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:21:45.373+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:44.940+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:45.387+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:45.388+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:45.388+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:45.389+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:45.389+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:45.390+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:45.391+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:26:45.469+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:27:37.559+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"351398daea6a3786","spanId":"351398daea6a3786"}
{"@timestamp":"2021-07-27T10:27:39.578+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f43420c2f0a7759c","spanId":"f43420c2f0a7759c"}
{"@timestamp":"2021-07-27T10:27:43.642+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"0d44b4747d581aad","spanId":"0d44b4747d581aad"}
{"@timestamp":"2021-07-27T10:27:45.666+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"bf84c0a99df9c29e","spanId":"bf84c0a99df9c29e"}
{"@timestamp":"2021-07-27T10:27:47.689+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"608ad19a06b4bdf4","spanId":"608ad19a06b4bdf4"}
{"@timestamp":"2021-07-27T10:27:49.716+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e92f7418abf4d271","spanId":"e92f7418abf4d271"}
{"@timestamp":"2021-07-27T10:27:51.740+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7a62fe23bd90d33f","spanId":"7a62fe23bd90d33f"}
{"@timestamp":"2021-07-27T10:27:53.783+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f79664985809bd6d","spanId":"f79664985809bd6d"}
{"@timestamp":"2021-07-27T10:27:55.821+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"059f849a049d9092","spanId":"059f849a049d9092"}
{"@timestamp":"2021-07-27T10:27:57.839+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"11004f88570ed9f4","spanId":"11004f88570ed9f4"}
{"@timestamp":"2021-07-27T10:27:59.866+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b28a5c7e15f55f9e","spanId":"b28a5c7e15f55f9e"}
{"@timestamp":"2021-07-27T10:28:01.896+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8431323f7e88c0d0","spanId":"8431323f7e88c0d0"}
{"@timestamp":"2021-07-27T10:28:03.923+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"8a58edec0ab01c44","spanId":"8a58edec0ab01c44"}
{"@timestamp":"2021-07-27T10:28:05.952+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0235eef584a64cf9","spanId":"0235eef584a64cf9"}
{"@timestamp":"2021-07-27T10:31:44.948+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:45.481+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:45.482+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:45.483+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:45.483+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:45.484+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:45.485+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:45.486+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:45.497+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:31:47.047+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b3c0af49c72a7c80","spanId":"b3c0af49c72a7c80"}
{"@timestamp":"2021-07-27T10:31:47.050+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"02967ec2b08c51f3","spanId":"02967ec2b08c51f3"}
{"@timestamp":"2021-07-27T10:31:49.312+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"43dee482b92e37e8","spanId":"43dee482b92e37e8"}
{"@timestamp":"2021-07-27T10:31:51.557+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1664c9901caac460","spanId":"1664c9901caac460"}
{"@timestamp":"2021-07-27T10:31:53.766+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"9e026b2ccdc74954","spanId":"9e026b2ccdc74954"}
{"@timestamp":"2021-07-27T10:31:56.099+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"3a6f44da404a3d9f","spanId":"3a6f44da404a3d9f"}
{"@timestamp":"2021-07-27T10:31:58.267+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"141a989815a7791a","spanId":"141a989815a7791a"}
{"@timestamp":"2021-07-27T10:32:00.506+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"12ad491c50c048de","spanId":"12ad491c50c048de"}
{"@timestamp":"2021-07-27T10:32:02.699+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"55a833a22eee6d73","spanId":"55a833a22eee6d73"}
{"@timestamp":"2021-07-27T10:32:04.962+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"78f60fde88e7f0fb","spanId":"78f60fde88e7f0fb"}
{"@timestamp":"2021-07-27T10:32:07.056+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"675fbed7c8a899d8","spanId":"675fbed7c8a899d8"}
{"@timestamp":"2021-07-27T10:32:09.259+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a2446d3cbd508431","spanId":"a2446d3cbd508431"}
{"@timestamp":"2021-07-27T10:32:11.269+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ec1a1aa708d49be0","spanId":"ec1a1aa708d49be0"}
{"@timestamp":"2021-07-27T10:32:13.298+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"eab0071e8db2ad89","spanId":"eab0071e8db2ad89"}
{"@timestamp":"2021-07-27T10:32:47.787+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8810b59069e8a0e7","spanId":"8810b59069e8a0e7"}
{"@timestamp":"2021-07-27T10:32:47.794+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4eee63e81755fdab","spanId":"4eee63e81755fdab"}
{"@timestamp":"2021-07-27T10:32:48.016+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"80e3c65ebf1381c9","spanId":"80e3c65ebf1381c9"}
{"@timestamp":"2021-07-27T10:32:48.083+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"94856a0155d35e29","spanId":"94856a0155d35e29"}
{"@timestamp":"2021-07-27T10:33:05.536+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a7667c9ef7191f1f","spanId":"a7667c9ef7191f1f"}
{"@timestamp":"2021-07-27T10:33:05.609+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"364fd8817965167d","spanId":"364fd8817965167d"}
{"@timestamp":"2021-07-27T10:33:06.073+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"efa17e26ba314111","spanId":"efa17e26ba314111"}
{"@timestamp":"2021-07-27T10:33:06.138+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"4ca3000a18b3113f","spanId":"4ca3000a18b3113f"}
{"@timestamp":"2021-07-27T10:33:35.802+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"631d7801d62c3edc","spanId":"631d7801d62c3edc"}
{"@timestamp":"2021-07-27T10:33:35.866+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"3745982be9a0248b","spanId":"3745982be9a0248b"}
{"@timestamp":"2021-07-27T10:33:36.069+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"106eff94bfcf4827","spanId":"106eff94bfcf4827"}
{"@timestamp":"2021-07-27T10:33:36.131+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ed1c14ac76d6fcc0","spanId":"ed1c14ac76d6fcc0"}
{"@timestamp":"2021-07-27T10:33:48.040+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c59a56daba93f095","spanId":"c59a56daba93f095"}
{"@timestamp":"2021-07-27T10:33:48.111+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e352194552a7c387","spanId":"e352194552a7c387"}
{"@timestamp":"2021-07-27T10:34:00.786+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"65bd530b95f29116","spanId":"65bd530b95f29116"}
{"@timestamp":"2021-07-27T10:34:00.854+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d33220ff22fecec6","spanId":"d33220ff22fecec6"}
{"@timestamp":"2021-07-27T10:34:01.066+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a681f870ff7348b6","spanId":"a681f870ff7348b6"}
{"@timestamp":"2021-07-27T10:34:01.128+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"eb519781e05cae28","spanId":"eb519781e05cae28"}
{"@timestamp":"2021-07-27T10:35:46.892+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"84ddcba3950776dc","spanId":"84ddcba3950776dc"}
{"@timestamp":"2021-07-27T10:35:46.892+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"033978f3ee77554c","spanId":"033978f3ee77554c"}
{"@timestamp":"2021-07-27T10:35:46.894+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9dde6a5a85a25ab5","spanId":"9dde6a5a85a25ab5"}
{"@timestamp":"2021-07-27T10:35:46.896+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"4637bdb5656df8d1","spanId":"4637bdb5656df8d1"}
{"@timestamp":"2021-07-27T10:35:46.951+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f041d65993abc2b6","spanId":"f041d65993abc2b6"}
{"@timestamp":"2021-07-27T10:35:46.957+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"6f7ac43f71599b09","spanId":"6f7ac43f71599b09"}
{"@timestamp":"2021-07-27T10:36:02.754+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e73d5ac22becadf9","spanId":"e73d5ac22becadf9"}
{"@timestamp":"2021-07-27T10:36:02.819+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"446b3feb155bb092","spanId":"446b3feb155bb092"}
{"@timestamp":"2021-07-27T10:36:02.886+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ccbfc8a91e058b92","spanId":"ccbfc8a91e058b92"}
{"@timestamp":"2021-07-27T10:36:02.959+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a66a42a9ac2ff22f","spanId":"a66a42a9ac2ff22f"}
{"@timestamp":"2021-07-27T10:36:03.021+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d76bb0256f90caa6","spanId":"d76bb0256f90caa6"}
{"@timestamp":"2021-07-27T10:36:03.089+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"52dafa19abbf1fa6","spanId":"52dafa19abbf1fa6"}
{"@timestamp":"2021-07-27T10:36:17.304+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"84144045962d8690","spanId":"84144045962d8690"}
{"@timestamp":"2021-07-27T10:36:17.370+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f0bbf0be9982c696","spanId":"f0bbf0be9982c696"}
{"@timestamp":"2021-07-27T10:36:17.437+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5726d7d2f7939f53","spanId":"5726d7d2f7939f53"}
{"@timestamp":"2021-07-27T10:36:17.506+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"d5d2a04b89a9f5ee","spanId":"d5d2a04b89a9f5ee"}
{"@timestamp":"2021-07-27T10:36:18.042+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"27115857bc1e35a1","spanId":"27115857bc1e35a1"}
{"@timestamp":"2021-07-27T10:36:18.108+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"881f6e3587063a2a","spanId":"881f6e3587063a2a"}
{"@timestamp":"2021-07-27T10:36:28.052+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"07b13172ec66ce88","spanId":"07b13172ec66ce88"}
{"@timestamp":"2021-07-27T10:36:28.117+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"ad6176296673e6f2","spanId":"ad6176296673e6f2"}
{"@timestamp":"2021-07-27T10:36:28.186+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"d51b31e38e9c8903","spanId":"d51b31e38e9c8903"}
{"@timestamp":"2021-07-27T10:36:28.249+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"d63153ca0e86dbff","spanId":"d63153ca0e86dbff"}
{"@timestamp":"2021-07-27T10:36:34.905+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e356e2a060c8b77d","spanId":"e356e2a060c8b77d"}
{"@timestamp":"2021-07-27T10:36:34.971+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e2af05839216475b","spanId":"e2af05839216475b"}
{"@timestamp":"2021-07-27T10:36:35.040+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"a62bfbda187c8567","spanId":"a62bfbda187c8567"}
{"@timestamp":"2021-07-27T10:36:35.108+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5b4965063b14f9dd","spanId":"5b4965063b14f9dd"}
{"@timestamp":"2021-07-27T10:36:35.173+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"271772fd9fa69d79","spanId":"271772fd9fa69d79"}
{"@timestamp":"2021-07-27T10:36:35.242+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f5b95838092a1aca","spanId":"f5b95838092a1aca"}
{"@timestamp":"2021-07-27T10:36:44.958+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:45.511+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:45.511+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:45.511+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:45.512+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:45.512+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:45.512+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:45.512+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:45.520+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:36:46.150+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"11dd26e3c715e766","spanId":"11dd26e3c715e766"}
{"@timestamp":"2021-07-27T10:36:46.218+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"f22bf475c334f268","spanId":"f22bf475c334f268"}
{"@timestamp":"2021-07-27T10:36:46.287+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9f2665c37f68f0f3","spanId":"9f2665c37f68f0f3"}
{"@timestamp":"2021-07-27T10:36:46.353+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"6f1fa7e7297cdb32","spanId":"6f1fa7e7297cdb32"}
{"@timestamp":"2021-07-27T10:36:47.026+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b5695ebc94b02875","spanId":"b5695ebc94b02875"}
{"@timestamp":"2021-07-27T10:36:47.087+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"bd5188b408d50109","spanId":"bd5188b408d50109"}
{"@timestamp":"2021-07-27T10:39:11.960+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"ca4dd59f3a25d8f3","spanId":"ca4dd59f3a25d8f3"}
{"@timestamp":"2021-07-27T10:39:11.960+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c964968b3f14294d","spanId":"c964968b3f14294d"}
{"@timestamp":"2021-07-27T10:39:11.960+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"bb107fd9c5fafb57","spanId":"bb107fd9c5fafb57"}
{"@timestamp":"2021-07-27T10:39:11.962+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"9e8d83a4e34973a3","spanId":"9e8d83a4e34973a3"}
{"@timestamp":"2021-07-27T10:39:11.962+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"213717326046d45a","spanId":"213717326046d45a"}
{"@timestamp":"2021-07-27T10:39:11.965+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"d4867fa58ef210c2","spanId":"d4867fa58ef210c2"}
{"@timestamp":"2021-07-27T10:39:12.028+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"591011a2c894fbfd","spanId":"591011a2c894fbfd"}
{"@timestamp":"2021-07-27T10:39:12.028+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dd5bc3ad4a1b3d34","spanId":"dd5bc3ad4a1b3d34"}
{"@timestamp":"2021-07-27T10:39:26.571+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b5d7e8f98ed2418e","spanId":"b5d7e8f98ed2418e"}
{"@timestamp":"2021-07-27T10:39:26.633+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"872e7af54268f570","spanId":"872e7af54268f570"}
{"@timestamp":"2021-07-27T10:39:26.705+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c43afe14eec7b93","spanId":"1c43afe14eec7b93"}
{"@timestamp":"2021-07-27T10:39:26.770+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4fd9d2bba078f522","spanId":"4fd9d2bba078f522"}
{"@timestamp":"2021-07-27T10:39:26.833+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"3b3f054aee7572bb","spanId":"3b3f054aee7572bb"}
{"@timestamp":"2021-07-27T10:39:26.903+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2e72b37f91b1b69b","spanId":"2e72b37f91b1b69b"}
{"@timestamp":"2021-07-27T10:39:27.042+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2f0707ea6c5e4f01","spanId":"2f0707ea6c5e4f01"}
{"@timestamp":"2021-07-27T10:39:27.107+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"02938f571de595d5","spanId":"02938f571de595d5"}
{"@timestamp":"2021-07-27T10:39:38.925+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"d53cd980f7ab569a","spanId":"d53cd980f7ab569a"}
{"@timestamp":"2021-07-27T10:39:38.990+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8194fa5075205a05","spanId":"8194fa5075205a05"}
{"@timestamp":"2021-07-27T10:39:39.058+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1794f29134f78584","spanId":"1794f29134f78584"}
{"@timestamp":"2021-07-27T10:39:39.125+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"2a7e7dc258fcee6a","spanId":"2a7e7dc258fcee6a"}
{"@timestamp":"2021-07-27T10:39:39.194+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"021fa4846123f3a1","spanId":"021fa4846123f3a1"}
{"@timestamp":"2021-07-27T10:39:39.258+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c075e29c64a5685c","spanId":"c075e29c64a5685c"}
{"@timestamp":"2021-07-27T10:39:39.328+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7cf0ad6efc1810f3","spanId":"7cf0ad6efc1810f3"}
{"@timestamp":"2021-07-27T10:39:39.394+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"7f3ddecfecfce389","spanId":"7f3ddecfecfce389"}
{"@timestamp":"2021-07-27T10:39:54.944+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"01905e9594dca394","spanId":"01905e9594dca394"}
{"@timestamp":"2021-07-27T10:39:55.010+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"2a1faa77908d5e0f","spanId":"2a1faa77908d5e0f"}
{"@timestamp":"2021-07-27T10:39:55.077+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3ef285168f3b6473","spanId":"3ef285168f3b6473"}
{"@timestamp":"2021-07-27T10:39:55.144+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"46c4a622c01b24a7","spanId":"46c4a622c01b24a7"}
{"@timestamp":"2021-07-27T10:39:55.210+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a3206cab00b3ede5","spanId":"a3206cab00b3ede5"}
{"@timestamp":"2021-07-27T10:39:55.278+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"90b79dc69f8e6ca7","spanId":"90b79dc69f8e6ca7"}
{"@timestamp":"2021-07-27T10:39:55.345+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1b8ed9e5cff08832","spanId":"1b8ed9e5cff08832"}
{"@timestamp":"2021-07-27T10:40:18.791+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e5c7964b876f1b4a","spanId":"e5c7964b876f1b4a"}
{"@timestamp":"2021-07-27T10:40:18.823+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"6359c125a9e06b35","spanId":"6359c125a9e06b35"}
{"@timestamp":"2021-07-27T10:40:18.856+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"68cf78303754cedf","spanId":"68cf78303754cedf"}
{"@timestamp":"2021-07-27T10:40:18.889+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6286c16ecf74549c","spanId":"6286c16ecf74549c"}
{"@timestamp":"2021-07-27T10:40:18.926+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a830179fbeddcdcb","spanId":"a830179fbeddcdcb"}
{"@timestamp":"2021-07-27T10:40:18.956+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"4b848b9cb4398a02","spanId":"4b848b9cb4398a02"}
{"@timestamp":"2021-07-27T10:40:19.022+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c07ebd57f2e6814c","spanId":"c07ebd57f2e6814c"}
{"@timestamp":"2021-07-27T10:40:19.054+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2c348a60463fb523","spanId":"2c348a60463fb523"}
{"@timestamp":"2021-07-27T10:40:26.337+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9e9bf0028dffbaef","spanId":"9e9bf0028dffbaef"}
{"@timestamp":"2021-07-27T10:40:26.364+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8a58dc3832c8892d","spanId":"8a58dc3832c8892d"}
{"@timestamp":"2021-07-27T10:40:26.400+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"00327dda176f6f7b","spanId":"00327dda176f6f7b"}
{"@timestamp":"2021-07-27T10:40:26.433+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"699802ea54c5e013","spanId":"699802ea54c5e013"}
{"@timestamp":"2021-07-27T10:40:26.469+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8715d037ae04523c","spanId":"8715d037ae04523c"}
{"@timestamp":"2021-07-27T10:40:26.504+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b2b545ab8785b8c3","spanId":"b2b545ab8785b8c3"}
{"@timestamp":"2021-07-27T10:40:27.031+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6a57561ee33907a0","spanId":"6a57561ee33907a0"}
{"@timestamp":"2021-07-27T10:40:27.063+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"4b8780299bc1520a","spanId":"4b8780299bc1520a"}
{"@timestamp":"2021-07-27T10:41:44.959+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:41:45.522+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:41:45.523+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:41:45.523+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:41:45.523+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:41:45.524+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:41:45.524+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:41:45.524+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:41:45.531+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:42:31.994+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"88a80257c822c076","spanId":"88a80257c822c076"}
{"@timestamp":"2021-07-27T10:42:32.018+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b1151c05fa3fa205","spanId":"b1151c05fa3fa205"}
{"@timestamp":"2021-07-27T10:42:32.056+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d3d9c3da2c6e2fa8","spanId":"d3d9c3da2c6e2fa8"}
{"@timestamp":"2021-07-27T10:42:32.088+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4bcace677de931e4","spanId":"4bcace677de931e4"}
{"@timestamp":"2021-07-27T10:42:32.120+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"64b7b23d5e0d2dff","spanId":"64b7b23d5e0d2dff"}
{"@timestamp":"2021-07-27T10:42:32.153+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"01d2cad38f7c239d","spanId":"01d2cad38f7c239d"}
{"@timestamp":"2021-07-27T10:42:32.187+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"aab0639fd5b2e528","spanId":"aab0639fd5b2e528"}
{"@timestamp":"2021-07-27T10:42:36.136+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"494112d85bdee666","spanId":"494112d85bdee666"}
{"@timestamp":"2021-07-27T10:42:36.157+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5032eaae7a18fb1b","spanId":"5032eaae7a18fb1b"}
{"@timestamp":"2021-07-27T10:42:36.187+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"75462dd3512563a0","spanId":"75462dd3512563a0"}
{"@timestamp":"2021-07-27T10:42:36.222+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"35af8ab31c9addbd","spanId":"35af8ab31c9addbd"}
{"@timestamp":"2021-07-27T10:42:36.255+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"64b082fe4830b826","spanId":"64b082fe4830b826"}
{"@timestamp":"2021-07-27T10:42:36.316+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"12c313ed18a2a958","spanId":"12c313ed18a2a958"}
{"@timestamp":"2021-07-27T10:42:37.022+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"5798b8ff61ccd426","spanId":"5798b8ff61ccd426"}
{"@timestamp":"2021-07-27T10:42:37.067+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"cb2e2f2f511535a9","spanId":"cb2e2f2f511535a9"}
{"@timestamp":"2021-07-27T10:44:55.891+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6b03998aed5ea724","spanId":"6b03998aed5ea724"}
{"@timestamp":"2021-07-27T10:44:55.891+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"ad6c0c86b0118ca8","spanId":"ad6c0c86b0118ca8"}
{"@timestamp":"2021-07-27T10:44:55.892+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"015c2562c9736a51","spanId":"015c2562c9736a51"}
{"@timestamp":"2021-07-27T10:44:55.895+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"86ad95d9ba576a38","spanId":"86ad95d9ba576a38"}
{"@timestamp":"2021-07-27T10:44:55.895+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8a0dba87bce0500a","spanId":"8a0dba87bce0500a"}
{"@timestamp":"2021-07-27T10:44:55.898+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ccfa8235628ffc2e","spanId":"ccfa8235628ffc2e"}
{"@timestamp":"2021-07-27T10:44:55.970+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4a2d23cc07a29984","spanId":"4a2d23cc07a29984"}
{"@timestamp":"2021-07-27T10:44:55.970+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d6ecd573628fd0f9","spanId":"d6ecd573628fd0f9"}
{"@timestamp":"2021-07-27T10:44:55.970+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"9368fd5fdf912bb0","spanId":"9368fd5fdf912bb0"}
{"@timestamp":"2021-07-27T10:44:55.973+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"54df89211f7ef8dd","spanId":"54df89211f7ef8dd"}
{"@timestamp":"2021-07-27T10:44:55.975+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"6bf572c791b757c6","spanId":"6bf572c791b757c6"}
{"@timestamp":"2021-07-27T10:44:55.975+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c9f731809bc57dce","spanId":"c9f731809bc57dce"}
{"@timestamp":"2021-07-27T10:45:40.067+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a02b3b95f1e891de","spanId":"a02b3b95f1e891de"}
{"@timestamp":"2021-07-27T10:45:40.108+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4ac93d9d86cdc035","spanId":"4ac93d9d86cdc035"}
{"@timestamp":"2021-07-27T10:45:40.140+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"612d535fe10e75bb","spanId":"612d535fe10e75bb"}
{"@timestamp":"2021-07-27T10:45:40.177+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"4ab3bfb93e800b85","spanId":"4ab3bfb93e800b85"}
{"@timestamp":"2021-07-27T10:45:40.206+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"add415000e856125","spanId":"add415000e856125"}
{"@timestamp":"2021-07-27T10:45:40.241+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"54f9b97eb090b502","spanId":"54f9b97eb090b502"}
{"@timestamp":"2021-07-27T10:45:40.274+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d61de4e063e9dbee","spanId":"d61de4e063e9dbee"}
{"@timestamp":"2021-07-27T10:45:40.306+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b23d9dcfa76ba367","spanId":"b23d9dcfa76ba367"}
{"@timestamp":"2021-07-27T10:45:41.031+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"aeb4eab520484428","spanId":"aeb4eab520484428"}
{"@timestamp":"2021-07-27T10:45:56.913+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"9ee1cdecc702b9e0","spanId":"9ee1cdecc702b9e0"}
{"@timestamp":"2021-07-27T10:45:56.942+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0a1934fff376dfa9","spanId":"0a1934fff376dfa9"}
{"@timestamp":"2021-07-27T10:45:56.976+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a073eba3bc4bf2e5","spanId":"a073eba3bc4bf2e5"}
{"@timestamp":"2021-07-27T10:45:57.009+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e2e98cb54598b23f","spanId":"e2e98cb54598b23f"}
{"@timestamp":"2021-07-27T10:45:57.042+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"3e334bb883742d21","spanId":"3e334bb883742d21"}
{"@timestamp":"2021-07-27T10:45:57.077+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"06a285d2f156d11f","spanId":"06a285d2f156d11f"}
{"@timestamp":"2021-07-27T10:45:57.111+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"6d32a9ad8d2c9d75","spanId":"6d32a9ad8d2c9d75"}
{"@timestamp":"2021-07-27T10:45:57.145+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"8ac1455a47afaab5","spanId":"8ac1455a47afaab5"}
{"@timestamp":"2021-07-27T10:45:57.177+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"290cebbef54f4393","spanId":"290cebbef54f4393"}
{"@timestamp":"2021-07-27T10:45:57.211+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ec897bf8b988ddfb","spanId":"ec897bf8b988ddfb"}
{"@timestamp":"2021-07-27T10:45:57.245+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cdee21b94849ab9e","spanId":"cdee21b94849ab9e"}
{"@timestamp":"2021-07-27T10:45:57.277+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"13c864071144e5b7","spanId":"13c864071144e5b7"}
{"@timestamp":"2021-07-27T10:46:16.880+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"5da40dfbf23df3f1","spanId":"5da40dfbf23df3f1"}
{"@timestamp":"2021-07-27T10:46:16.912+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"88d7a4cb5586eb1a","spanId":"88d7a4cb5586eb1a"}
{"@timestamp":"2021-07-27T10:46:16.943+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"3d08ec4c931e6193","spanId":"3d08ec4c931e6193"}
{"@timestamp":"2021-07-27T10:46:16.976+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f4547deffb034c7a","spanId":"f4547deffb034c7a"}
{"@timestamp":"2021-07-27T10:46:17.008+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dcfc826f3dc972f6","spanId":"dcfc826f3dc972f6"}
{"@timestamp":"2021-07-27T10:46:17.041+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"65ac89848e84ed63","spanId":"65ac89848e84ed63"}
{"@timestamp":"2021-07-27T10:46:17.074+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"6fd01f833f64089b","spanId":"6fd01f833f64089b"}
{"@timestamp":"2021-07-27T10:46:17.108+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6c985b06256c3598","spanId":"6c985b06256c3598"}
{"@timestamp":"2021-07-27T10:46:17.140+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6b2e857fa0a948fc","spanId":"6b2e857fa0a948fc"}
{"@timestamp":"2021-07-27T10:46:17.174+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b49cd57b2b2a3968","spanId":"b49cd57b2b2a3968"}
{"@timestamp":"2021-07-27T10:46:17.206+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2f233632ca5f29d0","spanId":"2f233632ca5f29d0"}
{"@timestamp":"2021-07-27T10:46:17.240+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"2f878e5f563fd138","spanId":"2f878e5f563fd138"}
{"@timestamp":"2021-07-27T10:46:39.350+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3e7a55abb3cbcede","spanId":"3e7a55abb3cbcede"}
{"@timestamp":"2021-07-27T10:46:39.379+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"a8ac02ef78e7c31c","spanId":"a8ac02ef78e7c31c"}
{"@timestamp":"2021-07-27T10:46:39.413+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4561b7240b186931","spanId":"4561b7240b186931"}
{"@timestamp":"2021-07-27T10:46:39.447+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"061af5d663a2c51a","spanId":"061af5d663a2c51a"}
{"@timestamp":"2021-07-27T10:46:39.482+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8edf390020fe92fc","spanId":"8edf390020fe92fc"}
{"@timestamp":"2021-07-27T10:46:39.514+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b6cc8cd0e1d579f8","spanId":"b6cc8cd0e1d579f8"}
{"@timestamp":"2021-07-27T10:46:39.548+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"635991123ef4bcab","spanId":"635991123ef4bcab"}
{"@timestamp":"2021-07-27T10:46:39.582+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"3a909689a9524198","spanId":"3a909689a9524198"}
{"@timestamp":"2021-07-27T10:46:40.018+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"5a4ab4520c2ad13d","spanId":"5a4ab4520c2ad13d"}
{"@timestamp":"2021-07-27T10:46:40.053+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c00c5b60b3cc2f76","spanId":"c00c5b60b3cc2f76"}
{"@timestamp":"2021-07-27T10:46:40.081+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f9ef08d806029085","spanId":"f9ef08d806029085"}
{"@timestamp":"2021-07-27T10:46:40.117+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"72563106f49a48dc","spanId":"72563106f49a48dc"}
{"@timestamp":"2021-07-27T10:46:44.970+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:46:45.535+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:46:45.535+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:46:45.535+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:46:45.535+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:46:45.536+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:46:45.536+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:46:45.536+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:46:45.546+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:47:22.087+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"4ebc3224ebb31ad1","spanId":"4ebc3224ebb31ad1"}
{"@timestamp":"2021-07-27T10:47:22.118+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2974e16536d4d6df","spanId":"2974e16536d4d6df"}
{"@timestamp":"2021-07-27T10:47:22.150+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f93c348d9dcd8eb2","spanId":"f93c348d9dcd8eb2"}
{"@timestamp":"2021-07-27T10:47:22.182+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"dbf07fbe58d0c5f4","spanId":"dbf07fbe58d0c5f4"}
{"@timestamp":"2021-07-27T10:47:22.215+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7944fb1cc2718668","spanId":"7944fb1cc2718668"}
{"@timestamp":"2021-07-27T10:47:22.249+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5001ae7ff6ba4838","spanId":"5001ae7ff6ba4838"}
{"@timestamp":"2021-07-27T10:47:22.285+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"68f78ba6858eae74","spanId":"68f78ba6858eae74"}
{"@timestamp":"2021-07-27T10:47:22.315+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"5846b03e8c7a61ea","spanId":"5846b03e8c7a61ea"}
{"@timestamp":"2021-07-27T10:47:23.043+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6e39776786f9bc68","spanId":"6e39776786f9bc68"}
{"@timestamp":"2021-07-27T10:47:34.731+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b6b8af6941bac9ae","spanId":"b6b8af6941bac9ae"}
{"@timestamp":"2021-07-27T10:47:34.764+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"aa7d8d9ef932cf60","spanId":"aa7d8d9ef932cf60"}
{"@timestamp":"2021-07-27T10:47:34.810+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e7d460317221d788","spanId":"e7d460317221d788"}
{"@timestamp":"2021-07-27T10:47:34.832+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"df4ff1cd297e7b36","spanId":"df4ff1cd297e7b36"}
{"@timestamp":"2021-07-27T10:47:34.866+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"42df089bbf5e468a","spanId":"42df089bbf5e468a"}
{"@timestamp":"2021-07-27T10:47:34.899+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"acb12894995ca85c","spanId":"acb12894995ca85c"}
{"@timestamp":"2021-07-27T10:47:34.931+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"606969b64897081b","spanId":"606969b64897081b"}
{"@timestamp":"2021-07-27T10:47:34.961+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"d2e69d9cd5dd74fc","spanId":"d2e69d9cd5dd74fc"}
{"@timestamp":"2021-07-27T10:47:35.028+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c995759e760cfa03","spanId":"c995759e760cfa03"}
{"@timestamp":"2021-07-27T10:47:35.064+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"742361476d0fe9a2","spanId":"742361476d0fe9a2"}
{"@timestamp":"2021-07-27T10:47:35.100+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"4c3472098746809b","spanId":"4c3472098746809b"}
{"@timestamp":"2021-07-27T10:47:35.129+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a2848113e1bc067c","spanId":"a2848113e1bc067c"}
{"@timestamp":"2021-07-27T10:51:44.985+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:51:45.560+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:51:45.561+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:51:45.562+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:51:45.563+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:51:45.565+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:51:45.567+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:51:45.567+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:51:45.573+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:44.988+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:45.586+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:45.587+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:45.587+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:45.587+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:45.587+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:45.587+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:45.587+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T10:56:45.639+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:44.998+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:45.655+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:45.655+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:45.656+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:45.656+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:45.656+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:45.656+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:45.656+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:01:45.661+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.011+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.672+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.673+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.674+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.674+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.674+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.674+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.674+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:06:45.682+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:20.869+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 26876 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:20.892+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:20.938+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:21.027+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:21.028+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:29.099+09:00","@version":"1","message":"BeanFactory id=a574f0a6-6888-3ddb-97ad-a00ca2d9873a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:30.825+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:30.860+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:30.908+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:36.521+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:36.544+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:36.545+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:36.546+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:36.968+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:36.968+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 15938 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:38.889+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:10:51.489+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:10:55.524+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:10:55.694+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:00.252+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:04.654+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.498+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:11:07.618+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.702+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.805+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.813+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.841+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.841+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.843+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.843+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.843+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.845+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:07.845+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.155+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.161+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.165+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.171+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627351868170 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.196+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.196+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627351868196, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.198+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.201+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.233+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.234+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:08.256+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:14.484+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:20.000+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:20.078+09:00","@version":"1","message":"Started DemoApplication in 66.021 seconds (JVM running for 68.64)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:30.630+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:30.630+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:30.635+09:00","@version":"1","message":"Completed initialization in 5 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:11:30.710+09:00","@version":"1","message":"###health check","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b231d7c1a56ba50d","spanId":"b231d7c1a56ba50d"}
{"@timestamp":"2021-07-27T11:11:32.292+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:11:32.296+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-27T11:12:32.422+09:00","@version":"1","message":"### circuitTest Called, response : [MICROSERVICE-01, host : [192.168.237.1:8081], param : success => working","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"918c8203ee08682f","spanId":"918c8203ee08682f"}
{"@timestamp":"2021-07-27T11:13:28.446+09:00","@version":"1","message":"### circuitTest Called, response : [MICROSERVICE-01, host : [192.168.237.1:8081], param : success => working","logger_name":"com.example.demo.controller.HealthCheckController","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"54d3851a6f98e5bf","spanId":"54d3851a6f98e5bf"}
{"@timestamp":"2021-07-27T11:15:59.014+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 15856 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:15:59.018+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:15:59.042+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:15:59.192+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:15:59.193+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:02.207+09:00","@version":"1","message":"BeanFactory id=a574f0a6-6888-3ddb-97ad-a00ca2d9873a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:02.681+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:02.691+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:02.701+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:06.395+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:06.426+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:06.427+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:06.430+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:07.004+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:07.005+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7811 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:09.136+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:16:17.695+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:16:21.606+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:21.672+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:24.689+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:27.756+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.091+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:16:30.209+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.313+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.403+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.408+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.437+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.437+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.438+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.438+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.438+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.439+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.439+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.737+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.740+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.745+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.752+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627352190751 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.776+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.776+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627352190776, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.781+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.783+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.817+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.818+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:30.846+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:33.945+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:36.855+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:16:36.883+09:00","@version":"1","message":"Started DemoApplication in 43.432 seconds (JVM running for 45.188)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:17:09.088+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:17:09.089+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:17:09.095+09:00","@version":"1","message":"Completed initialization in 6 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:17:09.189+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [PostmanRuntime/7.20.1]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.191+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept, VALUE : [*/*]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.191+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : cache-control, VALUE : [no-cache]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.191+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : postman-token, VALUE : [ff53b476-fddc-4ae1-b86b-49e766be4796]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.192+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [192.168.237.1:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.192+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept-encoding, VALUE : [gzip, deflate]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.192+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.192+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@50d5768","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.501+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:09.502+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e47dadd1ace8cb1d","spanId":"e47dadd1ace8cb1d"}
{"@timestamp":"2021-07-27T11:17:12.112+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T11:17:12.115+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T11:17:13.700+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:17:13.701+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-27T11:17:36.973+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [PostmanRuntime/7.20.1]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.975+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept, VALUE : [*/*]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.976+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : cache-control, VALUE : [no-cache]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.977+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : postman-token, VALUE : [d48b5a20-1487-4235-8599-5d6d96829270]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.977+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [192.168.237.1:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.977+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept-encoding, VALUE : [gzip, deflate]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.982+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.982+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@50d5768","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.991+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:36.991+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ddb4dbbe9069ad23","spanId":"ddb4dbbe9069ad23"}
{"@timestamp":"2021-07-27T11:17:45.073+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T11:17:45.074+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T11:19:12.517+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [PostmanRuntime/7.20.1]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.517+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept, VALUE : [*/*]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.518+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : cache-control, VALUE : [no-cache]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.518+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : postman-token, VALUE : [aa5e5ecd-91fc-4e5a-aa63-a75490bacaa3]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.519+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [192.168.237.1:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.519+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept-encoding, VALUE : [gzip, deflate]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.519+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.519+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@50d5768","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.525+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.525+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:12.664+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"b87206d352082e77","spanId":"b87206d352082e77"}
{"@timestamp":"2021-07-27T11:19:15.252+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [PostmanRuntime/7.20.1]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.253+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept, VALUE : [*/*]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.254+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : cache-control, VALUE : [no-cache]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.255+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : postman-token, VALUE : [2ef5efdc-ab1b-405a-ab82-b7eaa9efecb6]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.255+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [192.168.237.1:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.255+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept-encoding, VALUE : [gzip, deflate]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.256+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.256+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@50d5768","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.260+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.261+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:19:15.272+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$652d2c95","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"672f66c3f7438a70","spanId":"672f66c3f7438a70"}
{"@timestamp":"2021-07-27T11:21:04.873+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 18572 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:04.862+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:04.876+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:04.934+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:04.934+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:07.148+09:00","@version":"1","message":"BeanFactory id=392831e0-59f9-3d61-ab84-d43e04b5d6b8","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:07.699+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:07.714+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:07.727+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:11.520+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:11.542+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:11.543+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:11.543+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:11.970+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:11.971+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7036 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:13.993+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:21:21.129+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:25.671+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:33.406+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:21:37.792+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:37.847+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:41.609+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:21:41.783+09:00","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:41.952+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.076+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.113+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.152+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.153+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.153+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.153+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.154+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.154+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.154+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.511+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.519+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.525+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.536+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627352502534 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.573+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.575+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627352502575, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.579+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.581+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.629+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.631+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:42.666+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:46.672+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:49.507+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:21:49.541+09:00","@version":"1","message":"Started DemoApplication in 48.525 seconds (JVM running for 49.968)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:22:08.159+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:22:08.160+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:22:08.162+09:00","@version":"1","message":"Completed initialization in 2 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:22:08.233+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [PostmanRuntime/7.20.1]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.234+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept, VALUE : [*/*]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.234+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : cache-control, VALUE : [no-cache]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.234+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : postman-token, VALUE : [134b2ad4-e103-4fb9-b969-337250877d2c]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.235+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [192.168.237.1:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.236+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept-encoding, VALUE : [gzip, deflate]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.236+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.236+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@11a26c1e","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.435+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$b0a96ded","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:08.435+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$b0a96ded","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d30be72f7367c66b","spanId":"d30be72f7367c66b"}
{"@timestamp":"2021-07-27T11:22:11.853+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-27T11:22:11.856+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-27T11:22:12.743+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T11:22:12.746+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-27T11:22:15.259+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [PostmanRuntime/7.20.1]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.259+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept, VALUE : [*/*]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.260+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : cache-control, VALUE : [no-cache]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.260+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : postman-token, VALUE : [ff46059f-31d3-4159-9dc4-4c83978084a9]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.260+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [192.168.237.1:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.261+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : accept-encoding, VALUE : [gzip, deflate]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.261+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.261+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@11a26c1e","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.267+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$b0a96ded","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.267+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$b0a96ded","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:22:15.351+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$b0a96ded","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"0a5dcd3661286f22","spanId":"0a5dcd3661286f22"}
{"@timestamp":"2021-07-27T11:26:42.161+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:26:42.529+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:26:42.529+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:26:42.529+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:26:42.530+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:26:42.530+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:26:42.530+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:26:42.530+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-27T11:26:42.542+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
