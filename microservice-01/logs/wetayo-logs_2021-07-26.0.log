{"@timestamp":"2021-07-26T08:29:06.530+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 13860 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:06.521+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:06.553+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:06.634+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:06.635+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:09.363+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:09.876+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:09.887+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:09.900+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:13.731+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:13.751+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:13.753+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:13.753+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:14.084+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:14.085+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7448 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:29:15.909+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:30:59.126+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:30:59.143+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 20396 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:30:59.145+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:30:59.254+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:30:59.255+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:02.127+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:02.736+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:02.744+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:02.751+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:06.045+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:06.072+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:06.074+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:06.075+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:06.481+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:06.481+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7224 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:08.342+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:31:22.657+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:31:30.235+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:30.539+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:38.006+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:45.462+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:52.638+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:31:53.078+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.350+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.663+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.678+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.760+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.761+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.762+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.762+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.763+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.764+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:53.765+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.543+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.555+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.565+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.583+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627255914577 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.648+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.651+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627255914651, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.658+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.663+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.785+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.788+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:31:54.830+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:32:02.131+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:32:09.450+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:32:09.563+09:00","@version":"1","message":"Started DemoApplication in 74.629 seconds (JVM running for 76.855)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:33:21.686+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:33:21.688+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:33:21.698+09:00","@version":"1","message":"Completed initialization in 9 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:33:21.919+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:21.922+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:21.924+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:21.925+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@65e312ea","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:22.375+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:22.376+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:22.378+09:00","@version":"1","message":"user-agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.3","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:22.378+09:00","@version":"1","message":"from : webclient","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:38.043+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:38.055+09:00","@version":"1","message":"Content-Type : application/json","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:38.066+09:00","@version":"1","message":"content-length : 11446","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"831c0dbd784bc2ec","spanId":"831c0dbd784bc2ec"}
{"@timestamp":"2021-07-26T08:33:38.405+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:33:38.410+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:33:39.802+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:33:39.803+09:00","@version":"1","message":"Dropped 2 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T08:35:19.066+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.066+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.067+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.067+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@65e312ea","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.072+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.072+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.073+09:00","@version":"1","message":"user-agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.3","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.074+09:00","@version":"1","message":"from : webclient","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.109+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.110+09:00","@version":"1","message":"Content-Type : application/json","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.110+09:00","@version":"1","message":"content-length : 11446","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$89cad353","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"9ff17d1b8c92a88f","spanId":"9ff17d1b8c92a88f"}
{"@timestamp":"2021-07-26T08:35:19.138+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:35:19.141+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:36:53.776+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:36:54.564+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:36:54.564+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:36:54.564+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:36:54.565+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:36:54.565+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:36:54.566+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:36:54.566+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:36:54.583+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:21.283+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 24072 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:21.267+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:21.307+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:21.479+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:21.480+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:27.035+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:28.175+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:28.200+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:28.218+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:33.523+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:33.544+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:33.546+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:33.548+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:34.035+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:34.035+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 12553 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:35.832+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:39:47.856+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:39:55.802+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:39:56.072+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:03.260+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:11.032+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:18.862+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:40:19.301+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:19.657+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:19.942+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:19.961+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.034+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.036+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.036+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.036+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.037+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.038+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.039+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.870+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.882+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.891+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.909+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627256420904 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.989+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.991+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627256420991, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:20.999+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:21.005+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:21.100+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:21.104+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:21.171+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:28.805+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:35.269+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:40:35.347+09:00","@version":"1","message":"Started DemoApplication in 82.142 seconds (JVM running for 84.13)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:41:54.050+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:41:54.051+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:41:54.061+09:00","@version":"1","message":"Completed initialization in 9 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:41:54.304+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ec53ab355084511c","spanId":"ec53ab355084511c"}
{"@timestamp":"2021-07-26T08:41:54.306+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ec53ab355084511c","spanId":"ec53ab355084511c"}
{"@timestamp":"2021-07-26T08:41:54.307+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ec53ab355084511c","spanId":"ec53ab355084511c"}
{"@timestamp":"2021-07-26T08:41:54.308+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@7f23754","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ec53ab355084511c","spanId":"ec53ab355084511c"}
{"@timestamp":"2021-07-26T08:41:54.789+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$943cda4f","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ec53ab355084511c","spanId":"ec53ab355084511c"}
{"@timestamp":"2021-07-26T08:41:54.790+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$943cda4f","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ec53ab355084511c","spanId":"ec53ab355084511c"}
{"@timestamp":"2021-07-26T08:42:04.830+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$943cda4f","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"ec53ab355084511c","spanId":"ec53ab355084511c"}
{"@timestamp":"2021-07-26T08:42:04.952+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:42:04.955+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:42:06.408+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:42:06.409+09:00","@version":"1","message":"Dropped 2 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T08:44:18.979+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 20728 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:18.962+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:18.994+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:19.104+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:19.105+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:21.934+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:22.534+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:22.547+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:22.559+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:25.312+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:25.325+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:25.326+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:25.327+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:25.779+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:25.779+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 6672 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:27.429+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:44:34.650+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:44:38.582+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:38.742+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:42.580+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:46.411+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:49.514+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:44:49.724+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:49.890+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.020+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.026+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.110+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.111+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.112+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.113+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.113+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.114+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.114+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.542+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.548+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.555+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.561+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627256690560 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.594+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.595+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627256690595, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.598+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.600+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.642+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.643+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:50.671+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:54.406+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:58.065+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:44:58.135+09:00","@version":"1","message":"Started DemoApplication in 43.431 seconds (JVM running for 45.864)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:45:19.063+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:45:19.063+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:45:19.071+09:00","@version":"1","message":"Completed initialization in 7 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:45:19.290+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"643fd57eef8fc345","spanId":"643fd57eef8fc345"}
{"@timestamp":"2021-07-26T08:45:19.293+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"643fd57eef8fc345","spanId":"643fd57eef8fc345"}
{"@timestamp":"2021-07-26T08:45:19.295+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"643fd57eef8fc345","spanId":"643fd57eef8fc345"}
{"@timestamp":"2021-07-26T08:45:19.295+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@45df99d4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"643fd57eef8fc345","spanId":"643fd57eef8fc345"}
{"@timestamp":"2021-07-26T08:45:19.873+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$8ef9084c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"643fd57eef8fc345","spanId":"643fd57eef8fc345"}
{"@timestamp":"2021-07-26T08:45:19.874+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$8ef9084c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"643fd57eef8fc345","spanId":"643fd57eef8fc345"}
{"@timestamp":"2021-07-26T08:45:27.421+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$8ef9084c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"643fd57eef8fc345","spanId":"643fd57eef8fc345"}
{"@timestamp":"2021-07-26T08:45:27.554+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:45:27.556+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:45:28.996+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:45:28.998+09:00","@version":"1","message":"Dropped 2 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T08:49:50.122+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:49:50.549+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:49:50.551+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:49:50.552+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:49:50.552+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:49:50.553+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:49:50.554+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:49:50.554+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:49:50.586+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:39.479+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 21284 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:39.472+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:39.492+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:39.645+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:39.646+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:42.525+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:43.110+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:43.121+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:43.129+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:46.717+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:46.739+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:46.741+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:46.741+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:47.154+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:47.154+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7506 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:50:49.067+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:50:56.535+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:51:00.017+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:00.183+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:03.939+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:07.572+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:10.598+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:51:10.790+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:10.935+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.025+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.030+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.056+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.057+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.057+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.057+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.057+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.058+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.058+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.433+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.440+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.444+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.455+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627257071452 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.499+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.500+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627257071500, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.505+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.507+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.558+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.560+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:11.588+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:15.331+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:19.055+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:19.114+09:00","@version":"1","message":"Started DemoApplication in 44.325 seconds (JVM running for 46.399)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:29.624+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:29.625+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:29.631+09:00","@version":"1","message":"Completed initialization in 5 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:51:29.866+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"db3d5d6420f13b71","spanId":"db3d5d6420f13b71"}
{"@timestamp":"2021-07-26T08:51:29.868+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"db3d5d6420f13b71","spanId":"db3d5d6420f13b71"}
{"@timestamp":"2021-07-26T08:51:29.870+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"db3d5d6420f13b71","spanId":"db3d5d6420f13b71"}
{"@timestamp":"2021-07-26T08:51:29.871+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@7ec5a646","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"db3d5d6420f13b71","spanId":"db3d5d6420f13b71"}
{"@timestamp":"2021-07-26T08:51:30.527+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$ef7d692c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"db3d5d6420f13b71","spanId":"db3d5d6420f13b71"}
{"@timestamp":"2021-07-26T08:51:30.530+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$ef7d692c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"db3d5d6420f13b71","spanId":"db3d5d6420f13b71"}
{"@timestamp":"2021-07-26T08:51:41.530+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$ef7d692c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"db3d5d6420f13b71","spanId":"db3d5d6420f13b71"}
{"@timestamp":"2021-07-26T08:51:41.679+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:51:41.681+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:51:43.116+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:51:43.118+09:00","@version":"1","message":"Dropped 2 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T08:52:12.495+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a4111b23b12e39ba","spanId":"a4111b23b12e39ba"}
{"@timestamp":"2021-07-26T08:52:12.496+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a4111b23b12e39ba","spanId":"a4111b23b12e39ba"}
{"@timestamp":"2021-07-26T08:52:12.497+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a4111b23b12e39ba","spanId":"a4111b23b12e39ba"}
{"@timestamp":"2021-07-26T08:52:12.498+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@7ec5a646","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a4111b23b12e39ba","spanId":"a4111b23b12e39ba"}
{"@timestamp":"2021-07-26T08:52:12.505+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$ef7d692c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a4111b23b12e39ba","spanId":"a4111b23b12e39ba"}
{"@timestamp":"2021-07-26T08:52:12.506+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$ef7d692c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a4111b23b12e39ba","spanId":"a4111b23b12e39ba"}
{"@timestamp":"2021-07-26T08:52:12.545+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$ef7d692c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"a4111b23b12e39ba","spanId":"a4111b23b12e39ba"}
{"@timestamp":"2021-07-26T08:52:12.569+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:52:12.573+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.web.reactive.function.client.WebClientResponseException$InternalServerError: 500 Internal Server Error from GET http://localhost:8082/microservice/server/test/fail\r\n\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nError has been observed at the following site(s):\n\t|_ checkpoint ⇢ 500 from GET http://microservice-02/microservice/server/test/fail [DefaultWebClient]\nStack trace:\r\n\t\tat org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:218)\r\n\t\tat org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:213)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)\r\n\t\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:102)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:401)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:416)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:470)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:685)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T08:53:25.601+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 8908 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:25.594+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:25.610+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:25.700+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:25.700+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:28.217+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:28.725+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:28.736+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:28.747+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:31.745+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:31.762+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:31.764+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:31.764+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:32.095+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:32.095+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 6394 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:34.063+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:53:41.746+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:53:45.429+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:45.561+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:49.063+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:53.572+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:56.649+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:53:56.806+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:56.926+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.065+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.076+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.110+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.111+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.111+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.111+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.111+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.111+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.112+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.533+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.537+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.541+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.548+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627257237546 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.591+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.592+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627257237592, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.598+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.600+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.651+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.652+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:53:57.682+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:54:01.592+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:54:05.344+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:54:05.454+09:00","@version":"1","message":"Started DemoApplication in 44.524 seconds (JVM running for 46.492)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:36.524+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 8748 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:36.517+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:36.532+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:36.621+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:36.623+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:39.055+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:39.558+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:39.571+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:39.582+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:43.242+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:43.257+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:43.259+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:43.260+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:43.642+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:43.643+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7015 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:45.210+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:55:53.083+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:55:56.997+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:55:57.177+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:00.979+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:04.770+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.162+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:56:08.298+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.480+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.616+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.625+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.662+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.662+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.663+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.663+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.664+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.664+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:08.665+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.064+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.070+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.076+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.084+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627257369082 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.104+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.104+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627257369104, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.109+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.111+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.162+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.163+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:09.187+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:12.809+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:16.595+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:16.655+09:00","@version":"1","message":"Started DemoApplication in 44.963 seconds (JVM running for 46.835)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:38.370+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:38.371+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:38.380+09:00","@version":"1","message":"Completed initialization in 9 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T08:56:38.600+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"86c60daa50a27c2e","spanId":"86c60daa50a27c2e"}
{"@timestamp":"2021-07-26T08:56:38.601+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"86c60daa50a27c2e","spanId":"86c60daa50a27c2e"}
{"@timestamp":"2021-07-26T08:56:38.602+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"86c60daa50a27c2e","spanId":"86c60daa50a27c2e"}
{"@timestamp":"2021-07-26T08:56:38.602+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@1abfe76d","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"86c60daa50a27c2e","spanId":"86c60daa50a27c2e"}
{"@timestamp":"2021-07-26T08:56:39.233+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"86c60daa50a27c2e","spanId":"86c60daa50a27c2e"}
{"@timestamp":"2021-07-26T08:56:39.234+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"86c60daa50a27c2e","spanId":"86c60daa50a27c2e"}
{"@timestamp":"2021-07-26T08:56:42.412+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"86c60daa50a27c2e","spanId":"86c60daa50a27c2e"}
{"@timestamp":"2021-07-26T08:56:42.412+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"86c60daa50a27c2e","spanId":"86c60daa50a27c2e"}
{"@timestamp":"2021-07-26T08:56:43.416+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T08:56:43.422+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T08:57:24.275+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"856013910f69081a","spanId":"856013910f69081a"}
{"@timestamp":"2021-07-26T08:57:24.277+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"856013910f69081a","spanId":"856013910f69081a"}
{"@timestamp":"2021-07-26T08:57:24.278+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"856013910f69081a","spanId":"856013910f69081a"}
{"@timestamp":"2021-07-26T08:57:24.279+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@1abfe76d","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"856013910f69081a","spanId":"856013910f69081a"}
{"@timestamp":"2021-07-26T08:57:24.289+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"856013910f69081a","spanId":"856013910f69081a"}
{"@timestamp":"2021-07-26T08:57:24.290+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"856013910f69081a","spanId":"856013910f69081a"}
{"@timestamp":"2021-07-26T08:57:27.820+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"856013910f69081a","spanId":"856013910f69081a"}
{"@timestamp":"2021-07-26T08:57:27.820+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"856013910f69081a","spanId":"856013910f69081a"}
{"@timestamp":"2021-07-26T08:58:08.010+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"aeba11b8de4aabd2","spanId":"aeba11b8de4aabd2"}
{"@timestamp":"2021-07-26T08:58:08.011+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"aeba11b8de4aabd2","spanId":"aeba11b8de4aabd2"}
{"@timestamp":"2021-07-26T08:58:08.012+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"aeba11b8de4aabd2","spanId":"aeba11b8de4aabd2"}
{"@timestamp":"2021-07-26T08:58:08.012+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@1abfe76d","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"aeba11b8de4aabd2","spanId":"aeba11b8de4aabd2"}
{"@timestamp":"2021-07-26T08:58:08.017+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"aeba11b8de4aabd2","spanId":"aeba11b8de4aabd2"}
{"@timestamp":"2021-07-26T08:58:08.017+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"aeba11b8de4aabd2","spanId":"aeba11b8de4aabd2"}
{"@timestamp":"2021-07-26T08:58:11.536+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"aeba11b8de4aabd2","spanId":"aeba11b8de4aabd2"}
{"@timestamp":"2021-07-26T08:58:11.537+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"aeba11b8de4aabd2","spanId":"aeba11b8de4aabd2"}
{"@timestamp":"2021-07-26T09:01:08.684+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:09.083+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:09.084+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:09.084+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:09.085+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:09.085+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:09.086+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:09.086+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:09.114+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:01:31.120+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c388ec3731625e66","spanId":"c388ec3731625e66"}
{"@timestamp":"2021-07-26T09:01:31.121+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c388ec3731625e66","spanId":"c388ec3731625e66"}
{"@timestamp":"2021-07-26T09:01:31.122+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c388ec3731625e66","spanId":"c388ec3731625e66"}
{"@timestamp":"2021-07-26T09:01:31.123+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@1abfe76d","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c388ec3731625e66","spanId":"c388ec3731625e66"}
{"@timestamp":"2021-07-26T09:01:31.129+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c388ec3731625e66","spanId":"c388ec3731625e66"}
{"@timestamp":"2021-07-26T09:01:31.130+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c388ec3731625e66","spanId":"c388ec3731625e66"}
{"@timestamp":"2021-07-26T09:01:34.653+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"c388ec3731625e66","spanId":"c388ec3731625e66"}
{"@timestamp":"2021-07-26T09:01:34.654+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"c388ec3731625e66","spanId":"c388ec3731625e66"}
{"@timestamp":"2021-07-26T09:02:19.802+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bc0481a2abbedd1f","spanId":"bc0481a2abbedd1f"}
{"@timestamp":"2021-07-26T09:02:19.803+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bc0481a2abbedd1f","spanId":"bc0481a2abbedd1f"}
{"@timestamp":"2021-07-26T09:02:19.804+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bc0481a2abbedd1f","spanId":"bc0481a2abbedd1f"}
{"@timestamp":"2021-07-26T09:02:19.804+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@1abfe76d","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bc0481a2abbedd1f","spanId":"bc0481a2abbedd1f"}
{"@timestamp":"2021-07-26T09:02:19.806+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bc0481a2abbedd1f","spanId":"bc0481a2abbedd1f"}
{"@timestamp":"2021-07-26T09:02:19.807+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bc0481a2abbedd1f","spanId":"bc0481a2abbedd1f"}
{"@timestamp":"2021-07-26T09:02:23.315+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"bc0481a2abbedd1f","spanId":"bc0481a2abbedd1f"}
{"@timestamp":"2021-07-26T09:02:23.316+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$59a47848","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"bc0481a2abbedd1f","spanId":"bc0481a2abbedd1f"}
{"@timestamp":"2021-07-26T09:04:12.171+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 21108 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:12.139+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:12.180+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:12.338+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:12.340+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:16.105+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:16.561+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:16.574+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:16.583+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:20.055+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:20.076+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:20.078+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:20.079+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:20.504+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:20.505+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 8164 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:22.131+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:04:29.744+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:04:33.269+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:33.441+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:37.484+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:41.487+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:44.844+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:04:44.998+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.107+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.248+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.255+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.300+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.301+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.301+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.301+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.302+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.302+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.302+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.712+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.719+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.724+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.736+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627257885733 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.774+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.775+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627257885775, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.780+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.786+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.845+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.847+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:45.883+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:49.517+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:53.046+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:04:53.107+09:00","@version":"1","message":"Started DemoApplication in 48.243 seconds (JVM running for 50.443)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:06:46.252+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:06:46.253+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:06:46.261+09:00","@version":"1","message":"Completed initialization in 7 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:06:46.498+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:46.501+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:46.503+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:46.504+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2b89bc6b","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:47.140+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:47.141+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:50.351+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:50.352+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:54.913+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:06:54.922+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T09:06:58.473+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:06:58.474+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"9c93e6d91675b105","spanId":"9c93e6d91675b105"}
{"@timestamp":"2021-07-26T09:07:01.543+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:07:01.546+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:07:15.019+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:15.020+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:15.021+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:15.021+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2b89bc6b","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:15.025+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:15.025+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:18.539+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:18.539+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:22.053+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:22.054+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$9ed10751","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"5563be8f9a7cf214","spanId":"5563be8f9a7cf214"}
{"@timestamp":"2021-07-26T09:07:25.080+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:07:25.082+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:09:10.776+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 24000 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:10.773+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:10.782+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:10.827+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:10.828+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:12.344+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:12.680+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:12.687+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:12.691+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:14.720+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:14.732+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:14.733+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:14.734+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:14.960+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:14.961+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 4132 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:16.186+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:09:20.687+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:09:23.320+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:23.392+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:26.032+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:28.706+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.605+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:09:30.696+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.768+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.844+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.849+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.875+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.875+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.875+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.875+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.876+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.876+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:30.876+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.078+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.081+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.085+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.090+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627258171090 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.105+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.106+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627258171106, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.108+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.110+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.131+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.132+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:31.154+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:33.752+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:36.318+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:36.344+09:00","@version":"1","message":"Started DemoApplication in 28.812 seconds (JVM running for 30.053)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:42.633+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:42.634+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:42.637+09:00","@version":"1","message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:09:42.715+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:42.716+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:42.716+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:42.717+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:42.934+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:42.935+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:46.363+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:46.363+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:47.356+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:09:47.360+09:00","@version":"1","message":"Dropped 1 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T09:09:49.870+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:49.870+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"8fc36ce431c1dcc4","spanId":"8fc36ce431c1dcc4"}
{"@timestamp":"2021-07-26T09:09:52.913+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:09:52.914+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:06.127+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:06.128+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:06.129+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:06.129+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:06.133+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:06.134+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:09.655+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:09.655+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:13.163+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:13.163+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"16163ffc878183e3","spanId":"16163ffc878183e3"}
{"@timestamp":"2021-07-26T09:10:16.178+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:16.179+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:42.319+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:42.320+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:42.320+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:42.320+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:42.323+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:42.323+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:42.410+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:42.410+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:42.411+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:42.411+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:42.413+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:42.413+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:42.503+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:42.503+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:42.503+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:42.504+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:42.506+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:42.506+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:42.592+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:42.592+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:42.593+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:42.593+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:42.595+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:42.595+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:42.682+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:42.682+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:42.682+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:42.682+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:42.683+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:42.683+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:42.773+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:42.773+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:42.773+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:42.773+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:42.775+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:42.775+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:42.866+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:42.866+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:42.866+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:42.867+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:42.868+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:42.868+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:42.956+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:42.956+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:42.956+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:42.956+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:42.957+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:42.958+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:43.048+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:43.048+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:43.049+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:43.049+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:43.052+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:43.052+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:43.138+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:43.138+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:43.139+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:43.139+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:43.140+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:43.141+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:43.229+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f07faaa49810055f","spanId":"f07faaa49810055f"}
{"@timestamp":"2021-07-26T09:10:43.229+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f07faaa49810055f","spanId":"f07faaa49810055f"}
{"@timestamp":"2021-07-26T09:10:43.229+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f07faaa49810055f","spanId":"f07faaa49810055f"}
{"@timestamp":"2021-07-26T09:10:43.230+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f07faaa49810055f","spanId":"f07faaa49810055f"}
{"@timestamp":"2021-07-26T09:10:44.246+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:44.247+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:45.845+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:45.848+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:45.921+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:45.921+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:46.012+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:46.012+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:46.105+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:46.105+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:46.196+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:46.197+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:46.288+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:46.289+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:46.379+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:46.380+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:46.470+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:46.470+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:46.561+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:46.561+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:46.668+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:46.668+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:49.361+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:49.361+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"c3bd3f2835534ffe","spanId":"c3bd3f2835534ffe"}
{"@timestamp":"2021-07-26T09:10:49.437+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:49.437+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"62cf4b9ca5bb6129","spanId":"62cf4b9ca5bb6129"}
{"@timestamp":"2021-07-26T09:10:49.527+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:49.528+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"4c4f98fe8664feda","spanId":"4c4f98fe8664feda"}
{"@timestamp":"2021-07-26T09:10:49.619+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:49.620+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"3a89f9e0371057d7","spanId":"3a89f9e0371057d7"}
{"@timestamp":"2021-07-26T09:10:49.710+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:49.711+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"cc3879743b3a93dd","spanId":"cc3879743b3a93dd"}
{"@timestamp":"2021-07-26T09:10:49.804+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:49.805+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"74416386ad4c9213","spanId":"74416386ad4c9213"}
{"@timestamp":"2021-07-26T09:10:49.893+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:49.894+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"31ea2e5b6ca0c0dc","spanId":"31ea2e5b6ca0c0dc"}
{"@timestamp":"2021-07-26T09:10:49.986+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:49.987+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"c575316086129efa","spanId":"c575316086129efa"}
{"@timestamp":"2021-07-26T09:10:50.076+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:50.076+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"93074de61986dec7","spanId":"93074de61986dec7"}
{"@timestamp":"2021-07-26T09:10:50.183+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:50.184+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"530e3cfeafdabc39","spanId":"530e3cfeafdabc39"}
{"@timestamp":"2021-07-26T09:10:52.374+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.376+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.445+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.446+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.537+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.538+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.628+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.630+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.719+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.720+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.810+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.811+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.902+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.903+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.992+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:52.993+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:53.084+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:53.085+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:53.190+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:10:53.191+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:17.471+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:17.471+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:17.472+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:17.472+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:17.474+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:17.474+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:17.561+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:17.561+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:17.561+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:17.562+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:17.564+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:17.564+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:17.657+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:17.657+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:17.657+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:17.658+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:17.659+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:17.659+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:17.744+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:17.744+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:17.745+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:17.745+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:17.747+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:17.747+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:17.835+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:17.836+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:17.836+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:17.836+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:17.838+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:17.838+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:17.925+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:17.926+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:17.927+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:17.927+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:17.928+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:17.928+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:18.018+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:18.019+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:18.019+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:18.019+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:18.021+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:18.021+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:18.111+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:18.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:18.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:18.112+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:18.114+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:18.115+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:18.197+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:18.198+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:18.198+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:18.198+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:18.200+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:18.202+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:18.290+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:18.291+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:18.291+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:18.291+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:18.292+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:18.292+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:18.381+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"1ce92421d272c020","spanId":"1ce92421d272c020"}
{"@timestamp":"2021-07-26T09:11:18.381+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"1ce92421d272c020","spanId":"1ce92421d272c020"}
{"@timestamp":"2021-07-26T09:11:18.382+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"1ce92421d272c020","spanId":"1ce92421d272c020"}
{"@timestamp":"2021-07-26T09:11:18.382+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"1ce92421d272c020","spanId":"1ce92421d272c020"}
{"@timestamp":"2021-07-26T09:11:19.392+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:19.392+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:20.980+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:20.981+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:21.071+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:21.071+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:21.179+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:21.179+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:21.256+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:21.256+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:21.348+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:21.348+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:21.439+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:21.439+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:21.530+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:21.530+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:21.621+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:21.622+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:21.714+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:21.714+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:21.805+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:21.805+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:24.493+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:24.493+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"885f90b21500af92","spanId":"885f90b21500af92"}
{"@timestamp":"2021-07-26T09:11:24.584+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:24.584+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"0bc2389cd027edd2","spanId":"0bc2389cd027edd2"}
{"@timestamp":"2021-07-26T09:11:24.690+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:24.690+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"242a93f2470c45ba","spanId":"242a93f2470c45ba"}
{"@timestamp":"2021-07-26T09:11:24.768+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:24.768+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"bc0bc798311053a5","spanId":"bc0bc798311053a5"}
{"@timestamp":"2021-07-26T09:11:24.860+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:24.860+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"2216d947125beda4","spanId":"2216d947125beda4"}
{"@timestamp":"2021-07-26T09:11:24.951+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:24.952+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"fb408e586e11ff66","spanId":"fb408e586e11ff66"}
{"@timestamp":"2021-07-26T09:11:25.042+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:25.042+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"22f00861c4f9e0a2","spanId":"22f00861c4f9e0a2"}
{"@timestamp":"2021-07-26T09:11:25.133+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:25.133+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"8d981dd7a3ddcfc5","spanId":"8d981dd7a3ddcfc5"}
{"@timestamp":"2021-07-26T09:11:25.225+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:25.225+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"4b234d255c210128","spanId":"4b234d255c210128"}
{"@timestamp":"2021-07-26T09:11:25.317+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:25.317+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"e86679436e7bca7b","spanId":"e86679436e7bca7b"}
{"@timestamp":"2021-07-26T09:11:27.509+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.510+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.601+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.602+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.710+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.711+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.784+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.785+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.877+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.877+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.969+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:27.970+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:28.044+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:28.045+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:28.137+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:28.138+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:28.242+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:28.243+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:28.335+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:11:28.336+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 3000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:13:42.985+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9989c3e8619d07bc","spanId":"9989c3e8619d07bc"}
{"@timestamp":"2021-07-26T09:13:42.986+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9989c3e8619d07bc","spanId":"9989c3e8619d07bc"}
{"@timestamp":"2021-07-26T09:13:42.986+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9989c3e8619d07bc","spanId":"9989c3e8619d07bc"}
{"@timestamp":"2021-07-26T09:13:42.986+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9989c3e8619d07bc","spanId":"9989c3e8619d07bc"}
{"@timestamp":"2021-07-26T09:13:42.988+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9989c3e8619d07bc","spanId":"9989c3e8619d07bc"}
{"@timestamp":"2021-07-26T09:13:42.989+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9989c3e8619d07bc","spanId":"9989c3e8619d07bc"}
{"@timestamp":"2021-07-26T09:13:43.077+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1dfae2fba4ec62d8","spanId":"1dfae2fba4ec62d8"}
{"@timestamp":"2021-07-26T09:13:43.077+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1dfae2fba4ec62d8","spanId":"1dfae2fba4ec62d8"}
{"@timestamp":"2021-07-26T09:13:43.078+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1dfae2fba4ec62d8","spanId":"1dfae2fba4ec62d8"}
{"@timestamp":"2021-07-26T09:13:43.078+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1dfae2fba4ec62d8","spanId":"1dfae2fba4ec62d8"}
{"@timestamp":"2021-07-26T09:13:43.080+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1dfae2fba4ec62d8","spanId":"1dfae2fba4ec62d8"}
{"@timestamp":"2021-07-26T09:13:43.080+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1dfae2fba4ec62d8","spanId":"1dfae2fba4ec62d8"}
{"@timestamp":"2021-07-26T09:13:43.168+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"0815e8fd306e5317","spanId":"0815e8fd306e5317"}
{"@timestamp":"2021-07-26T09:13:43.168+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"0815e8fd306e5317","spanId":"0815e8fd306e5317"}
{"@timestamp":"2021-07-26T09:13:43.169+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"0815e8fd306e5317","spanId":"0815e8fd306e5317"}
{"@timestamp":"2021-07-26T09:13:43.169+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"0815e8fd306e5317","spanId":"0815e8fd306e5317"}
{"@timestamp":"2021-07-26T09:13:43.171+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"0815e8fd306e5317","spanId":"0815e8fd306e5317"}
{"@timestamp":"2021-07-26T09:13:43.172+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"0815e8fd306e5317","spanId":"0815e8fd306e5317"}
{"@timestamp":"2021-07-26T09:13:43.260+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a9e84f261e2bcec9","spanId":"a9e84f261e2bcec9"}
{"@timestamp":"2021-07-26T09:13:43.261+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a9e84f261e2bcec9","spanId":"a9e84f261e2bcec9"}
{"@timestamp":"2021-07-26T09:13:43.261+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a9e84f261e2bcec9","spanId":"a9e84f261e2bcec9"}
{"@timestamp":"2021-07-26T09:13:43.261+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a9e84f261e2bcec9","spanId":"a9e84f261e2bcec9"}
{"@timestamp":"2021-07-26T09:13:43.263+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a9e84f261e2bcec9","spanId":"a9e84f261e2bcec9"}
{"@timestamp":"2021-07-26T09:13:43.263+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a9e84f261e2bcec9","spanId":"a9e84f261e2bcec9"}
{"@timestamp":"2021-07-26T09:13:43.351+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"4fa2a5bb78524e13","spanId":"4fa2a5bb78524e13"}
{"@timestamp":"2021-07-26T09:13:43.352+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"4fa2a5bb78524e13","spanId":"4fa2a5bb78524e13"}
{"@timestamp":"2021-07-26T09:13:43.352+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"4fa2a5bb78524e13","spanId":"4fa2a5bb78524e13"}
{"@timestamp":"2021-07-26T09:13:43.353+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"4fa2a5bb78524e13","spanId":"4fa2a5bb78524e13"}
{"@timestamp":"2021-07-26T09:13:43.355+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"4fa2a5bb78524e13","spanId":"4fa2a5bb78524e13"}
{"@timestamp":"2021-07-26T09:13:43.355+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"4fa2a5bb78524e13","spanId":"4fa2a5bb78524e13"}
{"@timestamp":"2021-07-26T09:13:43.443+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b5ddc977ce5fdf7","spanId":"4b5ddc977ce5fdf7"}
{"@timestamp":"2021-07-26T09:13:43.444+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b5ddc977ce5fdf7","spanId":"4b5ddc977ce5fdf7"}
{"@timestamp":"2021-07-26T09:13:43.444+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b5ddc977ce5fdf7","spanId":"4b5ddc977ce5fdf7"}
{"@timestamp":"2021-07-26T09:13:43.444+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b5ddc977ce5fdf7","spanId":"4b5ddc977ce5fdf7"}
{"@timestamp":"2021-07-26T09:13:43.446+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b5ddc977ce5fdf7","spanId":"4b5ddc977ce5fdf7"}
{"@timestamp":"2021-07-26T09:13:43.446+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b5ddc977ce5fdf7","spanId":"4b5ddc977ce5fdf7"}
{"@timestamp":"2021-07-26T09:13:43.485+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"4fa2a5bb78524e13","spanId":"4fa2a5bb78524e13"}
{"@timestamp":"2021-07-26T09:13:43.485+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"9989c3e8619d07bc","spanId":"9989c3e8619d07bc"}
{"@timestamp":"2021-07-26T09:13:43.485+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"1dfae2fba4ec62d8","spanId":"1dfae2fba4ec62d8"}
{"@timestamp":"2021-07-26T09:13:43.485+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"a9e84f261e2bcec9","spanId":"a9e84f261e2bcec9"}
{"@timestamp":"2021-07-26T09:13:43.485+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"4b5ddc977ce5fdf7","spanId":"4b5ddc977ce5fdf7"}
{"@timestamp":"2021-07-26T09:13:43.485+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"0815e8fd306e5317","spanId":"0815e8fd306e5317"}
{"@timestamp":"2021-07-26T09:13:43.534+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"176f33490788e118","spanId":"176f33490788e118"}
{"@timestamp":"2021-07-26T09:13:43.534+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"176f33490788e118","spanId":"176f33490788e118"}
{"@timestamp":"2021-07-26T09:13:43.534+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"176f33490788e118","spanId":"176f33490788e118"}
{"@timestamp":"2021-07-26T09:13:43.534+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"176f33490788e118","spanId":"176f33490788e118"}
{"@timestamp":"2021-07-26T09:13:43.537+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"176f33490788e118","spanId":"176f33490788e118"}
{"@timestamp":"2021-07-26T09:13:43.537+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"176f33490788e118","spanId":"176f33490788e118"}
{"@timestamp":"2021-07-26T09:13:43.655+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"838bf9dc31de2266","spanId":"838bf9dc31de2266"}
{"@timestamp":"2021-07-26T09:13:43.655+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"838bf9dc31de2266","spanId":"838bf9dc31de2266"}
{"@timestamp":"2021-07-26T09:13:43.655+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"838bf9dc31de2266","spanId":"838bf9dc31de2266"}
{"@timestamp":"2021-07-26T09:13:43.658+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"838bf9dc31de2266","spanId":"838bf9dc31de2266"}
{"@timestamp":"2021-07-26T09:13:43.662+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"838bf9dc31de2266","spanId":"838bf9dc31de2266"}
{"@timestamp":"2021-07-26T09:13:43.662+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"838bf9dc31de2266","spanId":"838bf9dc31de2266"}
{"@timestamp":"2021-07-26T09:13:43.681+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"838bf9dc31de2266","spanId":"838bf9dc31de2266"}
{"@timestamp":"2021-07-26T09:13:43.726+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b44f01a162352102","spanId":"b44f01a162352102"}
{"@timestamp":"2021-07-26T09:13:43.731+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b44f01a162352102","spanId":"b44f01a162352102"}
{"@timestamp":"2021-07-26T09:13:43.731+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b44f01a162352102","spanId":"b44f01a162352102"}
{"@timestamp":"2021-07-26T09:13:43.732+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b44f01a162352102","spanId":"b44f01a162352102"}
{"@timestamp":"2021-07-26T09:13:43.732+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"176f33490788e118","spanId":"176f33490788e118"}
{"@timestamp":"2021-07-26T09:13:43.738+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b44f01a162352102","spanId":"b44f01a162352102"}
{"@timestamp":"2021-07-26T09:13:43.739+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"b44f01a162352102","spanId":"b44f01a162352102"}
{"@timestamp":"2021-07-26T09:13:43.751+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"b44f01a162352102","spanId":"b44f01a162352102"}
{"@timestamp":"2021-07-26T09:13:43.809+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41c76836fd2d5563","spanId":"41c76836fd2d5563"}
{"@timestamp":"2021-07-26T09:13:43.809+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41c76836fd2d5563","spanId":"41c76836fd2d5563"}
{"@timestamp":"2021-07-26T09:13:43.809+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41c76836fd2d5563","spanId":"41c76836fd2d5563"}
{"@timestamp":"2021-07-26T09:13:43.809+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41c76836fd2d5563","spanId":"41c76836fd2d5563"}
{"@timestamp":"2021-07-26T09:13:43.811+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41c76836fd2d5563","spanId":"41c76836fd2d5563"}
{"@timestamp":"2021-07-26T09:13:43.812+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41c76836fd2d5563","spanId":"41c76836fd2d5563"}
{"@timestamp":"2021-07-26T09:13:43.824+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"41c76836fd2d5563","spanId":"41c76836fd2d5563"}
{"@timestamp":"2021-07-26T09:13:43.897+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"1361e1fec3acbf61","spanId":"1361e1fec3acbf61"}
{"@timestamp":"2021-07-26T09:13:43.897+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"1361e1fec3acbf61","spanId":"1361e1fec3acbf61"}
{"@timestamp":"2021-07-26T09:13:43.898+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"1361e1fec3acbf61","spanId":"1361e1fec3acbf61"}
{"@timestamp":"2021-07-26T09:13:43.898+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"1361e1fec3acbf61","spanId":"1361e1fec3acbf61"}
{"@timestamp":"2021-07-26T09:13:43.900+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"1361e1fec3acbf61","spanId":"1361e1fec3acbf61"}
{"@timestamp":"2021-07-26T09:13:43.901+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"1361e1fec3acbf61","spanId":"1361e1fec3acbf61"}
{"@timestamp":"2021-07-26T09:13:43.915+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"1361e1fec3acbf61","spanId":"1361e1fec3acbf61"}
{"@timestamp":"2021-07-26T09:13:54.084+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"30f0a6a498a7b0a1","spanId":"30f0a6a498a7b0a1"}
{"@timestamp":"2021-07-26T09:13:54.084+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"30f0a6a498a7b0a1","spanId":"30f0a6a498a7b0a1"}
{"@timestamp":"2021-07-26T09:13:54.084+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"30f0a6a498a7b0a1","spanId":"30f0a6a498a7b0a1"}
{"@timestamp":"2021-07-26T09:13:54.085+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"30f0a6a498a7b0a1","spanId":"30f0a6a498a7b0a1"}
{"@timestamp":"2021-07-26T09:13:54.086+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"30f0a6a498a7b0a1","spanId":"30f0a6a498a7b0a1"}
{"@timestamp":"2021-07-26T09:13:54.088+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"30f0a6a498a7b0a1","spanId":"30f0a6a498a7b0a1"}
{"@timestamp":"2021-07-26T09:13:54.097+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"30f0a6a498a7b0a1","spanId":"30f0a6a498a7b0a1"}
{"@timestamp":"2021-07-26T09:13:54.177+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"97713ce12d8adbb2","spanId":"97713ce12d8adbb2"}
{"@timestamp":"2021-07-26T09:13:54.177+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"97713ce12d8adbb2","spanId":"97713ce12d8adbb2"}
{"@timestamp":"2021-07-26T09:13:54.177+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"97713ce12d8adbb2","spanId":"97713ce12d8adbb2"}
{"@timestamp":"2021-07-26T09:13:54.177+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"97713ce12d8adbb2","spanId":"97713ce12d8adbb2"}
{"@timestamp":"2021-07-26T09:13:54.179+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"97713ce12d8adbb2","spanId":"97713ce12d8adbb2"}
{"@timestamp":"2021-07-26T09:13:54.179+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"97713ce12d8adbb2","spanId":"97713ce12d8adbb2"}
{"@timestamp":"2021-07-26T09:13:54.187+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"97713ce12d8adbb2","spanId":"97713ce12d8adbb2"}
{"@timestamp":"2021-07-26T09:13:54.267+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6368135b429d62bd","spanId":"6368135b429d62bd"}
{"@timestamp":"2021-07-26T09:13:54.267+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6368135b429d62bd","spanId":"6368135b429d62bd"}
{"@timestamp":"2021-07-26T09:13:54.267+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6368135b429d62bd","spanId":"6368135b429d62bd"}
{"@timestamp":"2021-07-26T09:13:54.267+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6368135b429d62bd","spanId":"6368135b429d62bd"}
{"@timestamp":"2021-07-26T09:13:54.268+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6368135b429d62bd","spanId":"6368135b429d62bd"}
{"@timestamp":"2021-07-26T09:13:54.268+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6368135b429d62bd","spanId":"6368135b429d62bd"}
{"@timestamp":"2021-07-26T09:13:54.277+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"6368135b429d62bd","spanId":"6368135b429d62bd"}
{"@timestamp":"2021-07-26T09:13:54.362+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"65c7f77bd6f2a2dc","spanId":"65c7f77bd6f2a2dc"}
{"@timestamp":"2021-07-26T09:13:54.362+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"65c7f77bd6f2a2dc","spanId":"65c7f77bd6f2a2dc"}
{"@timestamp":"2021-07-26T09:13:54.362+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"65c7f77bd6f2a2dc","spanId":"65c7f77bd6f2a2dc"}
{"@timestamp":"2021-07-26T09:13:54.363+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"65c7f77bd6f2a2dc","spanId":"65c7f77bd6f2a2dc"}
{"@timestamp":"2021-07-26T09:13:54.364+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"65c7f77bd6f2a2dc","spanId":"65c7f77bd6f2a2dc"}
{"@timestamp":"2021-07-26T09:13:54.365+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"65c7f77bd6f2a2dc","spanId":"65c7f77bd6f2a2dc"}
{"@timestamp":"2021-07-26T09:13:54.373+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"65c7f77bd6f2a2dc","spanId":"65c7f77bd6f2a2dc"}
{"@timestamp":"2021-07-26T09:13:54.449+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e632b8abd60c8374","spanId":"e632b8abd60c8374"}
{"@timestamp":"2021-07-26T09:13:54.449+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e632b8abd60c8374","spanId":"e632b8abd60c8374"}
{"@timestamp":"2021-07-26T09:13:54.450+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e632b8abd60c8374","spanId":"e632b8abd60c8374"}
{"@timestamp":"2021-07-26T09:13:54.450+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e632b8abd60c8374","spanId":"e632b8abd60c8374"}
{"@timestamp":"2021-07-26T09:13:54.452+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e632b8abd60c8374","spanId":"e632b8abd60c8374"}
{"@timestamp":"2021-07-26T09:13:54.453+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e632b8abd60c8374","spanId":"e632b8abd60c8374"}
{"@timestamp":"2021-07-26T09:13:54.464+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"e632b8abd60c8374","spanId":"e632b8abd60c8374"}
{"@timestamp":"2021-07-26T09:13:54.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"76ab38eb20d6e0b7","spanId":"76ab38eb20d6e0b7"}
{"@timestamp":"2021-07-26T09:13:54.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"76ab38eb20d6e0b7","spanId":"76ab38eb20d6e0b7"}
{"@timestamp":"2021-07-26T09:13:54.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"76ab38eb20d6e0b7","spanId":"76ab38eb20d6e0b7"}
{"@timestamp":"2021-07-26T09:13:54.541+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"76ab38eb20d6e0b7","spanId":"76ab38eb20d6e0b7"}
{"@timestamp":"2021-07-26T09:13:54.544+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"76ab38eb20d6e0b7","spanId":"76ab38eb20d6e0b7"}
{"@timestamp":"2021-07-26T09:13:54.544+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"76ab38eb20d6e0b7","spanId":"76ab38eb20d6e0b7"}
{"@timestamp":"2021-07-26T09:13:54.554+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"76ab38eb20d6e0b7","spanId":"76ab38eb20d6e0b7"}
{"@timestamp":"2021-07-26T09:13:54.631+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"58c84311ccd266b8","spanId":"58c84311ccd266b8"}
{"@timestamp":"2021-07-26T09:13:54.632+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"58c84311ccd266b8","spanId":"58c84311ccd266b8"}
{"@timestamp":"2021-07-26T09:13:54.632+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"58c84311ccd266b8","spanId":"58c84311ccd266b8"}
{"@timestamp":"2021-07-26T09:13:54.632+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"58c84311ccd266b8","spanId":"58c84311ccd266b8"}
{"@timestamp":"2021-07-26T09:13:54.634+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"58c84311ccd266b8","spanId":"58c84311ccd266b8"}
{"@timestamp":"2021-07-26T09:13:54.635+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"58c84311ccd266b8","spanId":"58c84311ccd266b8"}
{"@timestamp":"2021-07-26T09:13:54.648+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"58c84311ccd266b8","spanId":"58c84311ccd266b8"}
{"@timestamp":"2021-07-26T09:13:54.723+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4554f7baa8ec691d","spanId":"4554f7baa8ec691d"}
{"@timestamp":"2021-07-26T09:13:54.724+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4554f7baa8ec691d","spanId":"4554f7baa8ec691d"}
{"@timestamp":"2021-07-26T09:13:54.724+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4554f7baa8ec691d","spanId":"4554f7baa8ec691d"}
{"@timestamp":"2021-07-26T09:13:54.724+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4554f7baa8ec691d","spanId":"4554f7baa8ec691d"}
{"@timestamp":"2021-07-26T09:13:54.726+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4554f7baa8ec691d","spanId":"4554f7baa8ec691d"}
{"@timestamp":"2021-07-26T09:13:54.727+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4554f7baa8ec691d","spanId":"4554f7baa8ec691d"}
{"@timestamp":"2021-07-26T09:13:54.737+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"4554f7baa8ec691d","spanId":"4554f7baa8ec691d"}
{"@timestamp":"2021-07-26T09:13:54.814+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1af188d11920c9b8","spanId":"1af188d11920c9b8"}
{"@timestamp":"2021-07-26T09:13:54.815+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1af188d11920c9b8","spanId":"1af188d11920c9b8"}
{"@timestamp":"2021-07-26T09:13:54.815+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1af188d11920c9b8","spanId":"1af188d11920c9b8"}
{"@timestamp":"2021-07-26T09:13:54.816+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1af188d11920c9b8","spanId":"1af188d11920c9b8"}
{"@timestamp":"2021-07-26T09:13:54.818+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1af188d11920c9b8","spanId":"1af188d11920c9b8"}
{"@timestamp":"2021-07-26T09:13:54.818+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1af188d11920c9b8","spanId":"1af188d11920c9b8"}
{"@timestamp":"2021-07-26T09:13:54.829+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"1af188d11920c9b8","spanId":"1af188d11920c9b8"}
{"@timestamp":"2021-07-26T09:13:54.907+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"9193dadf17ec192d","spanId":"9193dadf17ec192d"}
{"@timestamp":"2021-07-26T09:13:54.907+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"9193dadf17ec192d","spanId":"9193dadf17ec192d"}
{"@timestamp":"2021-07-26T09:13:54.908+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"9193dadf17ec192d","spanId":"9193dadf17ec192d"}
{"@timestamp":"2021-07-26T09:13:54.908+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"9193dadf17ec192d","spanId":"9193dadf17ec192d"}
{"@timestamp":"2021-07-26T09:13:54.910+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"9193dadf17ec192d","spanId":"9193dadf17ec192d"}
{"@timestamp":"2021-07-26T09:13:54.911+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"9193dadf17ec192d","spanId":"9193dadf17ec192d"}
{"@timestamp":"2021-07-26T09:13:54.923+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"9193dadf17ec192d","spanId":"9193dadf17ec192d"}
{"@timestamp":"2021-07-26T09:13:54.996+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c47bf1c6283b6f61","spanId":"c47bf1c6283b6f61"}
{"@timestamp":"2021-07-26T09:13:54.997+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c47bf1c6283b6f61","spanId":"c47bf1c6283b6f61"}
{"@timestamp":"2021-07-26T09:13:54.997+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c47bf1c6283b6f61","spanId":"c47bf1c6283b6f61"}
{"@timestamp":"2021-07-26T09:13:54.997+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c47bf1c6283b6f61","spanId":"c47bf1c6283b6f61"}
{"@timestamp":"2021-07-26T09:13:55.001+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c47bf1c6283b6f61","spanId":"c47bf1c6283b6f61"}
{"@timestamp":"2021-07-26T09:13:55.002+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"c47bf1c6283b6f61","spanId":"c47bf1c6283b6f61"}
{"@timestamp":"2021-07-26T09:13:55.016+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"c47bf1c6283b6f61","spanId":"c47bf1c6283b6f61"}
{"@timestamp":"2021-07-26T09:14:08.868+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca7ca9689d4c6a3f","spanId":"ca7ca9689d4c6a3f"}
{"@timestamp":"2021-07-26T09:14:08.869+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca7ca9689d4c6a3f","spanId":"ca7ca9689d4c6a3f"}
{"@timestamp":"2021-07-26T09:14:08.869+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca7ca9689d4c6a3f","spanId":"ca7ca9689d4c6a3f"}
{"@timestamp":"2021-07-26T09:14:08.869+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca7ca9689d4c6a3f","spanId":"ca7ca9689d4c6a3f"}
{"@timestamp":"2021-07-26T09:14:08.871+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca7ca9689d4c6a3f","spanId":"ca7ca9689d4c6a3f"}
{"@timestamp":"2021-07-26T09:14:08.871+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca7ca9689d4c6a3f","spanId":"ca7ca9689d4c6a3f"}
{"@timestamp":"2021-07-26T09:14:08.877+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"ca7ca9689d4c6a3f","spanId":"ca7ca9689d4c6a3f"}
{"@timestamp":"2021-07-26T09:14:08.960+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6666b0229c5a9bdf","spanId":"6666b0229c5a9bdf"}
{"@timestamp":"2021-07-26T09:14:08.960+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6666b0229c5a9bdf","spanId":"6666b0229c5a9bdf"}
{"@timestamp":"2021-07-26T09:14:08.960+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6666b0229c5a9bdf","spanId":"6666b0229c5a9bdf"}
{"@timestamp":"2021-07-26T09:14:08.960+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6666b0229c5a9bdf","spanId":"6666b0229c5a9bdf"}
{"@timestamp":"2021-07-26T09:14:08.962+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6666b0229c5a9bdf","spanId":"6666b0229c5a9bdf"}
{"@timestamp":"2021-07-26T09:14:08.963+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6666b0229c5a9bdf","spanId":"6666b0229c5a9bdf"}
{"@timestamp":"2021-07-26T09:14:08.970+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"6666b0229c5a9bdf","spanId":"6666b0229c5a9bdf"}
{"@timestamp":"2021-07-26T09:14:09.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"494d1023484b867c","spanId":"494d1023484b867c"}
{"@timestamp":"2021-07-26T09:14:09.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"494d1023484b867c","spanId":"494d1023484b867c"}
{"@timestamp":"2021-07-26T09:14:09.052+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"494d1023484b867c","spanId":"494d1023484b867c"}
{"@timestamp":"2021-07-26T09:14:09.052+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"494d1023484b867c","spanId":"494d1023484b867c"}
{"@timestamp":"2021-07-26T09:14:09.055+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"494d1023484b867c","spanId":"494d1023484b867c"}
{"@timestamp":"2021-07-26T09:14:09.055+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"494d1023484b867c","spanId":"494d1023484b867c"}
{"@timestamp":"2021-07-26T09:14:09.063+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"494d1023484b867c","spanId":"494d1023484b867c"}
{"@timestamp":"2021-07-26T09:14:09.143+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b8aae257e417fff1","spanId":"b8aae257e417fff1"}
{"@timestamp":"2021-07-26T09:14:09.143+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b8aae257e417fff1","spanId":"b8aae257e417fff1"}
{"@timestamp":"2021-07-26T09:14:09.143+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b8aae257e417fff1","spanId":"b8aae257e417fff1"}
{"@timestamp":"2021-07-26T09:14:09.144+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b8aae257e417fff1","spanId":"b8aae257e417fff1"}
{"@timestamp":"2021-07-26T09:14:09.146+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b8aae257e417fff1","spanId":"b8aae257e417fff1"}
{"@timestamp":"2021-07-26T09:14:09.146+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b8aae257e417fff1","spanId":"b8aae257e417fff1"}
{"@timestamp":"2021-07-26T09:14:09.156+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"b8aae257e417fff1","spanId":"b8aae257e417fff1"}
{"@timestamp":"2021-07-26T09:14:09.233+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a83b6023652836ba","spanId":"a83b6023652836ba"}
{"@timestamp":"2021-07-26T09:14:09.233+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a83b6023652836ba","spanId":"a83b6023652836ba"}
{"@timestamp":"2021-07-26T09:14:09.235+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a83b6023652836ba","spanId":"a83b6023652836ba"}
{"@timestamp":"2021-07-26T09:14:09.235+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a83b6023652836ba","spanId":"a83b6023652836ba"}
{"@timestamp":"2021-07-26T09:14:09.238+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a83b6023652836ba","spanId":"a83b6023652836ba"}
{"@timestamp":"2021-07-26T09:14:09.238+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a83b6023652836ba","spanId":"a83b6023652836ba"}
{"@timestamp":"2021-07-26T09:14:09.247+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"a83b6023652836ba","spanId":"a83b6023652836ba"}
{"@timestamp":"2021-07-26T09:14:09.325+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9b254043446d5599","spanId":"9b254043446d5599"}
{"@timestamp":"2021-07-26T09:14:09.325+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9b254043446d5599","spanId":"9b254043446d5599"}
{"@timestamp":"2021-07-26T09:14:09.325+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9b254043446d5599","spanId":"9b254043446d5599"}
{"@timestamp":"2021-07-26T09:14:09.325+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9b254043446d5599","spanId":"9b254043446d5599"}
{"@timestamp":"2021-07-26T09:14:09.327+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9b254043446d5599","spanId":"9b254043446d5599"}
{"@timestamp":"2021-07-26T09:14:09.327+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9b254043446d5599","spanId":"9b254043446d5599"}
{"@timestamp":"2021-07-26T09:14:09.335+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"9b254043446d5599","spanId":"9b254043446d5599"}
{"@timestamp":"2021-07-26T09:14:09.415+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f00edd4b3a0cdcad","spanId":"f00edd4b3a0cdcad"}
{"@timestamp":"2021-07-26T09:14:09.416+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f00edd4b3a0cdcad","spanId":"f00edd4b3a0cdcad"}
{"@timestamp":"2021-07-26T09:14:09.416+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f00edd4b3a0cdcad","spanId":"f00edd4b3a0cdcad"}
{"@timestamp":"2021-07-26T09:14:09.416+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f00edd4b3a0cdcad","spanId":"f00edd4b3a0cdcad"}
{"@timestamp":"2021-07-26T09:14:09.418+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f00edd4b3a0cdcad","spanId":"f00edd4b3a0cdcad"}
{"@timestamp":"2021-07-26T09:14:09.418+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f00edd4b3a0cdcad","spanId":"f00edd4b3a0cdcad"}
{"@timestamp":"2021-07-26T09:14:09.426+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"f00edd4b3a0cdcad","spanId":"f00edd4b3a0cdcad"}
{"@timestamp":"2021-07-26T09:14:09.508+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"480e665e46f9a48c","spanId":"480e665e46f9a48c"}
{"@timestamp":"2021-07-26T09:14:09.509+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"480e665e46f9a48c","spanId":"480e665e46f9a48c"}
{"@timestamp":"2021-07-26T09:14:09.509+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"480e665e46f9a48c","spanId":"480e665e46f9a48c"}
{"@timestamp":"2021-07-26T09:14:09.509+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"480e665e46f9a48c","spanId":"480e665e46f9a48c"}
{"@timestamp":"2021-07-26T09:14:09.511+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"480e665e46f9a48c","spanId":"480e665e46f9a48c"}
{"@timestamp":"2021-07-26T09:14:09.511+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"480e665e46f9a48c","spanId":"480e665e46f9a48c"}
{"@timestamp":"2021-07-26T09:14:09.518+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"480e665e46f9a48c","spanId":"480e665e46f9a48c"}
{"@timestamp":"2021-07-26T09:14:09.598+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b912dfe1598cdb1a","spanId":"b912dfe1598cdb1a"}
{"@timestamp":"2021-07-26T09:14:09.599+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b912dfe1598cdb1a","spanId":"b912dfe1598cdb1a"}
{"@timestamp":"2021-07-26T09:14:09.599+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b912dfe1598cdb1a","spanId":"b912dfe1598cdb1a"}
{"@timestamp":"2021-07-26T09:14:09.599+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b912dfe1598cdb1a","spanId":"b912dfe1598cdb1a"}
{"@timestamp":"2021-07-26T09:14:09.601+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b912dfe1598cdb1a","spanId":"b912dfe1598cdb1a"}
{"@timestamp":"2021-07-26T09:14:09.601+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b912dfe1598cdb1a","spanId":"b912dfe1598cdb1a"}
{"@timestamp":"2021-07-26T09:14:09.611+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"b912dfe1598cdb1a","spanId":"b912dfe1598cdb1a"}
{"@timestamp":"2021-07-26T09:14:09.689+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"09318cb3659d1986","spanId":"09318cb3659d1986"}
{"@timestamp":"2021-07-26T09:14:09.690+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"09318cb3659d1986","spanId":"09318cb3659d1986"}
{"@timestamp":"2021-07-26T09:14:09.690+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"09318cb3659d1986","spanId":"09318cb3659d1986"}
{"@timestamp":"2021-07-26T09:14:09.690+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"09318cb3659d1986","spanId":"09318cb3659d1986"}
{"@timestamp":"2021-07-26T09:14:09.693+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"09318cb3659d1986","spanId":"09318cb3659d1986"}
{"@timestamp":"2021-07-26T09:14:09.693+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"09318cb3659d1986","spanId":"09318cb3659d1986"}
{"@timestamp":"2021-07-26T09:14:09.701+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"09318cb3659d1986","spanId":"09318cb3659d1986"}
{"@timestamp":"2021-07-26T09:14:09.780+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"335e4c2b1a90aa1b","spanId":"335e4c2b1a90aa1b"}
{"@timestamp":"2021-07-26T09:14:09.780+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"335e4c2b1a90aa1b","spanId":"335e4c2b1a90aa1b"}
{"@timestamp":"2021-07-26T09:14:09.780+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"335e4c2b1a90aa1b","spanId":"335e4c2b1a90aa1b"}
{"@timestamp":"2021-07-26T09:14:09.781+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"335e4c2b1a90aa1b","spanId":"335e4c2b1a90aa1b"}
{"@timestamp":"2021-07-26T09:14:09.783+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"335e4c2b1a90aa1b","spanId":"335e4c2b1a90aa1b"}
{"@timestamp":"2021-07-26T09:14:09.783+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail1","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"335e4c2b1a90aa1b","spanId":"335e4c2b1a90aa1b"}
{"@timestamp":"2021-07-26T09:14:09.793+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"335e4c2b1a90aa1b","spanId":"335e4c2b1a90aa1b"}
{"@timestamp":"2021-07-26T09:14:30.892+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:31.088+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:31.089+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:31.089+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:31.089+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:31.089+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:31.089+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:31.089+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:31.112+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:14:36.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a6e35fecc763b6de","spanId":"a6e35fecc763b6de"}
{"@timestamp":"2021-07-26T09:14:36.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a6e35fecc763b6de","spanId":"a6e35fecc763b6de"}
{"@timestamp":"2021-07-26T09:14:36.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a6e35fecc763b6de","spanId":"a6e35fecc763b6de"}
{"@timestamp":"2021-07-26T09:14:36.913+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a6e35fecc763b6de","spanId":"a6e35fecc763b6de"}
{"@timestamp":"2021-07-26T09:14:36.914+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a6e35fecc763b6de","spanId":"a6e35fecc763b6de"}
{"@timestamp":"2021-07-26T09:14:36.914+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a6e35fecc763b6de","spanId":"a6e35fecc763b6de"}
{"@timestamp":"2021-07-26T09:14:37.006+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48fe1a23f1780e3d","spanId":"48fe1a23f1780e3d"}
{"@timestamp":"2021-07-26T09:14:37.006+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48fe1a23f1780e3d","spanId":"48fe1a23f1780e3d"}
{"@timestamp":"2021-07-26T09:14:37.006+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48fe1a23f1780e3d","spanId":"48fe1a23f1780e3d"}
{"@timestamp":"2021-07-26T09:14:37.006+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48fe1a23f1780e3d","spanId":"48fe1a23f1780e3d"}
{"@timestamp":"2021-07-26T09:14:37.008+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48fe1a23f1780e3d","spanId":"48fe1a23f1780e3d"}
{"@timestamp":"2021-07-26T09:14:37.008+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48fe1a23f1780e3d","spanId":"48fe1a23f1780e3d"}
{"@timestamp":"2021-07-26T09:14:37.095+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4b826c67bcae8a58","spanId":"4b826c67bcae8a58"}
{"@timestamp":"2021-07-26T09:14:37.095+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4b826c67bcae8a58","spanId":"4b826c67bcae8a58"}
{"@timestamp":"2021-07-26T09:14:37.095+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4b826c67bcae8a58","spanId":"4b826c67bcae8a58"}
{"@timestamp":"2021-07-26T09:14:37.095+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4b826c67bcae8a58","spanId":"4b826c67bcae8a58"}
{"@timestamp":"2021-07-26T09:14:37.096+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4b826c67bcae8a58","spanId":"4b826c67bcae8a58"}
{"@timestamp":"2021-07-26T09:14:37.097+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4b826c67bcae8a58","spanId":"4b826c67bcae8a58"}
{"@timestamp":"2021-07-26T09:14:37.186+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8be84550b5bb2560","spanId":"8be84550b5bb2560"}
{"@timestamp":"2021-07-26T09:14:37.187+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8be84550b5bb2560","spanId":"8be84550b5bb2560"}
{"@timestamp":"2021-07-26T09:14:37.187+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8be84550b5bb2560","spanId":"8be84550b5bb2560"}
{"@timestamp":"2021-07-26T09:14:37.187+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8be84550b5bb2560","spanId":"8be84550b5bb2560"}
{"@timestamp":"2021-07-26T09:14:37.189+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8be84550b5bb2560","spanId":"8be84550b5bb2560"}
{"@timestamp":"2021-07-26T09:14:37.189+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8be84550b5bb2560","spanId":"8be84550b5bb2560"}
{"@timestamp":"2021-07-26T09:14:37.277+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9a7db76cb9d4f56e","spanId":"9a7db76cb9d4f56e"}
{"@timestamp":"2021-07-26T09:14:37.278+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9a7db76cb9d4f56e","spanId":"9a7db76cb9d4f56e"}
{"@timestamp":"2021-07-26T09:14:37.278+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9a7db76cb9d4f56e","spanId":"9a7db76cb9d4f56e"}
{"@timestamp":"2021-07-26T09:14:37.278+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9a7db76cb9d4f56e","spanId":"9a7db76cb9d4f56e"}
{"@timestamp":"2021-07-26T09:14:37.279+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9a7db76cb9d4f56e","spanId":"9a7db76cb9d4f56e"}
{"@timestamp":"2021-07-26T09:14:37.279+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"9a7db76cb9d4f56e","spanId":"9a7db76cb9d4f56e"}
{"@timestamp":"2021-07-26T09:14:37.370+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"05298dab4c961af6","spanId":"05298dab4c961af6"}
{"@timestamp":"2021-07-26T09:14:37.371+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"05298dab4c961af6","spanId":"05298dab4c961af6"}
{"@timestamp":"2021-07-26T09:14:37.371+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"05298dab4c961af6","spanId":"05298dab4c961af6"}
{"@timestamp":"2021-07-26T09:14:37.371+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"05298dab4c961af6","spanId":"05298dab4c961af6"}
{"@timestamp":"2021-07-26T09:14:37.373+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"05298dab4c961af6","spanId":"05298dab4c961af6"}
{"@timestamp":"2021-07-26T09:14:37.373+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"05298dab4c961af6","spanId":"05298dab4c961af6"}
{"@timestamp":"2021-07-26T09:14:37.460+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e5bf1f68eebb07e","spanId":"0e5bf1f68eebb07e"}
{"@timestamp":"2021-07-26T09:14:37.461+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e5bf1f68eebb07e","spanId":"0e5bf1f68eebb07e"}
{"@timestamp":"2021-07-26T09:14:37.461+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e5bf1f68eebb07e","spanId":"0e5bf1f68eebb07e"}
{"@timestamp":"2021-07-26T09:14:37.461+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e5bf1f68eebb07e","spanId":"0e5bf1f68eebb07e"}
{"@timestamp":"2021-07-26T09:14:37.462+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e5bf1f68eebb07e","spanId":"0e5bf1f68eebb07e"}
{"@timestamp":"2021-07-26T09:14:37.463+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e5bf1f68eebb07e","spanId":"0e5bf1f68eebb07e"}
{"@timestamp":"2021-07-26T09:14:37.551+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"68eb3a13744f2e1f","spanId":"68eb3a13744f2e1f"}
{"@timestamp":"2021-07-26T09:14:37.551+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"68eb3a13744f2e1f","spanId":"68eb3a13744f2e1f"}
{"@timestamp":"2021-07-26T09:14:37.551+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"68eb3a13744f2e1f","spanId":"68eb3a13744f2e1f"}
{"@timestamp":"2021-07-26T09:14:37.551+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"68eb3a13744f2e1f","spanId":"68eb3a13744f2e1f"}
{"@timestamp":"2021-07-26T09:14:37.552+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"68eb3a13744f2e1f","spanId":"68eb3a13744f2e1f"}
{"@timestamp":"2021-07-26T09:14:37.552+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"68eb3a13744f2e1f","spanId":"68eb3a13744f2e1f"}
{"@timestamp":"2021-07-26T09:14:37.641+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"1188c8e48ee4c4cd","spanId":"1188c8e48ee4c4cd"}
{"@timestamp":"2021-07-26T09:14:37.641+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"1188c8e48ee4c4cd","spanId":"1188c8e48ee4c4cd"}
{"@timestamp":"2021-07-26T09:14:37.642+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"1188c8e48ee4c4cd","spanId":"1188c8e48ee4c4cd"}
{"@timestamp":"2021-07-26T09:14:37.642+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"1188c8e48ee4c4cd","spanId":"1188c8e48ee4c4cd"}
{"@timestamp":"2021-07-26T09:14:37.643+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"1188c8e48ee4c4cd","spanId":"1188c8e48ee4c4cd"}
{"@timestamp":"2021-07-26T09:14:37.643+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"1188c8e48ee4c4cd","spanId":"1188c8e48ee4c4cd"}
{"@timestamp":"2021-07-26T09:14:37.732+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bed8ef3d0bf9dd78","spanId":"bed8ef3d0bf9dd78"}
{"@timestamp":"2021-07-26T09:14:37.732+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bed8ef3d0bf9dd78","spanId":"bed8ef3d0bf9dd78"}
{"@timestamp":"2021-07-26T09:14:37.733+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bed8ef3d0bf9dd78","spanId":"bed8ef3d0bf9dd78"}
{"@timestamp":"2021-07-26T09:14:37.733+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bed8ef3d0bf9dd78","spanId":"bed8ef3d0bf9dd78"}
{"@timestamp":"2021-07-26T09:14:37.734+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bed8ef3d0bf9dd78","spanId":"bed8ef3d0bf9dd78"}
{"@timestamp":"2021-07-26T09:14:37.735+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bed8ef3d0bf9dd78","spanId":"bed8ef3d0bf9dd78"}
{"@timestamp":"2021-07-26T09:14:37.822+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49db60263ed8b3ba","spanId":"49db60263ed8b3ba"}
{"@timestamp":"2021-07-26T09:14:37.822+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49db60263ed8b3ba","spanId":"49db60263ed8b3ba"}
{"@timestamp":"2021-07-26T09:14:37.823+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49db60263ed8b3ba","spanId":"49db60263ed8b3ba"}
{"@timestamp":"2021-07-26T09:14:37.823+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49db60263ed8b3ba","spanId":"49db60263ed8b3ba"}
{"@timestamp":"2021-07-26T09:14:37.919+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"a6e35fecc763b6de","spanId":"a6e35fecc763b6de"}
{"@timestamp":"2021-07-26T09:14:38.027+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"48fe1a23f1780e3d","spanId":"48fe1a23f1780e3d"}
{"@timestamp":"2021-07-26T09:14:38.106+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"4b826c67bcae8a58","spanId":"4b826c67bcae8a58"}
{"@timestamp":"2021-07-26T09:14:38.196+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"8be84550b5bb2560","spanId":"8be84550b5bb2560"}
{"@timestamp":"2021-07-26T09:14:38.287+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"9a7db76cb9d4f56e","spanId":"9a7db76cb9d4f56e"}
{"@timestamp":"2021-07-26T09:14:38.332+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"49db60263ed8b3ba","spanId":"49db60263ed8b3ba"}
{"@timestamp":"2021-07-26T09:14:38.332+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"49db60263ed8b3ba","spanId":"49db60263ed8b3ba"}
{"@timestamp":"2021-07-26T09:14:38.395+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"05298dab4c961af6","spanId":"05298dab4c961af6"}
{"@timestamp":"2021-07-26T09:14:38.471+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"0e5bf1f68eebb07e","spanId":"0e5bf1f68eebb07e"}
{"@timestamp":"2021-07-26T09:14:38.561+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"68eb3a13744f2e1f","spanId":"68eb3a13744f2e1f"}
{"@timestamp":"2021-07-26T09:14:39.340+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"49db60263ed8b3ba","spanId":"49db60263ed8b3ba"}
{"@timestamp":"2021-07-26T09:14:39.569+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"bed8ef3d0bf9dd78","spanId":"bed8ef3d0bf9dd78"}
{"@timestamp":"2021-07-26T09:14:40.360+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"1188c8e48ee4c4cd","spanId":"1188c8e48ee4c4cd"}
{"@timestamp":"2021-07-26T09:14:48.747+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"23e083813d27db99","spanId":"23e083813d27db99"}
{"@timestamp":"2021-07-26T09:14:48.747+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"23e083813d27db99","spanId":"23e083813d27db99"}
{"@timestamp":"2021-07-26T09:14:48.748+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"23e083813d27db99","spanId":"23e083813d27db99"}
{"@timestamp":"2021-07-26T09:14:48.748+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"23e083813d27db99","spanId":"23e083813d27db99"}
{"@timestamp":"2021-07-26T09:14:48.750+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"23e083813d27db99","spanId":"23e083813d27db99"}
{"@timestamp":"2021-07-26T09:14:48.750+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"23e083813d27db99","spanId":"23e083813d27db99"}
{"@timestamp":"2021-07-26T09:14:48.840+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4ba069e8350b7b78","spanId":"4ba069e8350b7b78"}
{"@timestamp":"2021-07-26T09:14:48.840+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4ba069e8350b7b78","spanId":"4ba069e8350b7b78"}
{"@timestamp":"2021-07-26T09:14:48.840+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4ba069e8350b7b78","spanId":"4ba069e8350b7b78"}
{"@timestamp":"2021-07-26T09:14:48.840+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4ba069e8350b7b78","spanId":"4ba069e8350b7b78"}
{"@timestamp":"2021-07-26T09:14:48.842+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4ba069e8350b7b78","spanId":"4ba069e8350b7b78"}
{"@timestamp":"2021-07-26T09:14:48.843+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4ba069e8350b7b78","spanId":"4ba069e8350b7b78"}
{"@timestamp":"2021-07-26T09:14:48.930+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"5aab5531cde8d289","spanId":"5aab5531cde8d289"}
{"@timestamp":"2021-07-26T09:14:48.930+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"5aab5531cde8d289","spanId":"5aab5531cde8d289"}
{"@timestamp":"2021-07-26T09:14:48.930+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"5aab5531cde8d289","spanId":"5aab5531cde8d289"}
{"@timestamp":"2021-07-26T09:14:48.930+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"5aab5531cde8d289","spanId":"5aab5531cde8d289"}
{"@timestamp":"2021-07-26T09:14:48.933+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"5aab5531cde8d289","spanId":"5aab5531cde8d289"}
{"@timestamp":"2021-07-26T09:14:48.933+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"5aab5531cde8d289","spanId":"5aab5531cde8d289"}
{"@timestamp":"2021-07-26T09:14:49.022+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"844cd81908f70177","spanId":"844cd81908f70177"}
{"@timestamp":"2021-07-26T09:14:49.022+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"844cd81908f70177","spanId":"844cd81908f70177"}
{"@timestamp":"2021-07-26T09:14:49.022+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"844cd81908f70177","spanId":"844cd81908f70177"}
{"@timestamp":"2021-07-26T09:14:49.023+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"844cd81908f70177","spanId":"844cd81908f70177"}
{"@timestamp":"2021-07-26T09:14:49.025+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"844cd81908f70177","spanId":"844cd81908f70177"}
{"@timestamp":"2021-07-26T09:14:49.025+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"844cd81908f70177","spanId":"844cd81908f70177"}
{"@timestamp":"2021-07-26T09:14:49.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"bec91312b8cfc08d","spanId":"bec91312b8cfc08d"}
{"@timestamp":"2021-07-26T09:14:49.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"bec91312b8cfc08d","spanId":"bec91312b8cfc08d"}
{"@timestamp":"2021-07-26T09:14:49.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"bec91312b8cfc08d","spanId":"bec91312b8cfc08d"}
{"@timestamp":"2021-07-26T09:14:49.113+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"bec91312b8cfc08d","spanId":"bec91312b8cfc08d"}
{"@timestamp":"2021-07-26T09:14:49.114+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"bec91312b8cfc08d","spanId":"bec91312b8cfc08d"}
{"@timestamp":"2021-07-26T09:14:49.115+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"bec91312b8cfc08d","spanId":"bec91312b8cfc08d"}
{"@timestamp":"2021-07-26T09:14:49.202+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9d1b02bf257f950d","spanId":"9d1b02bf257f950d"}
{"@timestamp":"2021-07-26T09:14:49.203+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9d1b02bf257f950d","spanId":"9d1b02bf257f950d"}
{"@timestamp":"2021-07-26T09:14:49.203+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9d1b02bf257f950d","spanId":"9d1b02bf257f950d"}
{"@timestamp":"2021-07-26T09:14:49.203+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9d1b02bf257f950d","spanId":"9d1b02bf257f950d"}
{"@timestamp":"2021-07-26T09:14:49.205+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9d1b02bf257f950d","spanId":"9d1b02bf257f950d"}
{"@timestamp":"2021-07-26T09:14:49.206+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9d1b02bf257f950d","spanId":"9d1b02bf257f950d"}
{"@timestamp":"2021-07-26T09:14:49.294+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"db588881a5da8fb7","spanId":"db588881a5da8fb7"}
{"@timestamp":"2021-07-26T09:14:49.294+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"db588881a5da8fb7","spanId":"db588881a5da8fb7"}
{"@timestamp":"2021-07-26T09:14:49.294+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"db588881a5da8fb7","spanId":"db588881a5da8fb7"}
{"@timestamp":"2021-07-26T09:14:49.294+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"db588881a5da8fb7","spanId":"db588881a5da8fb7"}
{"@timestamp":"2021-07-26T09:14:49.295+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"db588881a5da8fb7","spanId":"db588881a5da8fb7"}
{"@timestamp":"2021-07-26T09:14:49.295+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"db588881a5da8fb7","spanId":"db588881a5da8fb7"}
{"@timestamp":"2021-07-26T09:14:49.385+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dac3eb951cd25467","spanId":"dac3eb951cd25467"}
{"@timestamp":"2021-07-26T09:14:49.385+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dac3eb951cd25467","spanId":"dac3eb951cd25467"}
{"@timestamp":"2021-07-26T09:14:49.386+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dac3eb951cd25467","spanId":"dac3eb951cd25467"}
{"@timestamp":"2021-07-26T09:14:49.386+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dac3eb951cd25467","spanId":"dac3eb951cd25467"}
{"@timestamp":"2021-07-26T09:14:49.388+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dac3eb951cd25467","spanId":"dac3eb951cd25467"}
{"@timestamp":"2021-07-26T09:14:49.389+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dac3eb951cd25467","spanId":"dac3eb951cd25467"}
{"@timestamp":"2021-07-26T09:14:49.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"5c95a7474420118b","spanId":"5c95a7474420118b"}
{"@timestamp":"2021-07-26T09:14:49.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"5c95a7474420118b","spanId":"5c95a7474420118b"}
{"@timestamp":"2021-07-26T09:14:49.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"5c95a7474420118b","spanId":"5c95a7474420118b"}
{"@timestamp":"2021-07-26T09:14:49.477+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"5c95a7474420118b","spanId":"5c95a7474420118b"}
{"@timestamp":"2021-07-26T09:14:49.479+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"5c95a7474420118b","spanId":"5c95a7474420118b"}
{"@timestamp":"2021-07-26T09:14:49.479+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"5c95a7474420118b","spanId":"5c95a7474420118b"}
{"@timestamp":"2021-07-26T09:14:49.568+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"3499fd8cec0d1c0d","spanId":"3499fd8cec0d1c0d"}
{"@timestamp":"2021-07-26T09:14:49.568+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"3499fd8cec0d1c0d","spanId":"3499fd8cec0d1c0d"}
{"@timestamp":"2021-07-26T09:14:49.568+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"3499fd8cec0d1c0d","spanId":"3499fd8cec0d1c0d"}
{"@timestamp":"2021-07-26T09:14:49.568+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"3499fd8cec0d1c0d","spanId":"3499fd8cec0d1c0d"}
{"@timestamp":"2021-07-26T09:14:49.571+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"3499fd8cec0d1c0d","spanId":"3499fd8cec0d1c0d"}
{"@timestamp":"2021-07-26T09:14:49.572+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"3499fd8cec0d1c0d","spanId":"3499fd8cec0d1c0d"}
{"@timestamp":"2021-07-26T09:14:49.660+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a9592f3dc3594d8f","spanId":"a9592f3dc3594d8f"}
{"@timestamp":"2021-07-26T09:14:49.660+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a9592f3dc3594d8f","spanId":"a9592f3dc3594d8f"}
{"@timestamp":"2021-07-26T09:14:49.660+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a9592f3dc3594d8f","spanId":"a9592f3dc3594d8f"}
{"@timestamp":"2021-07-26T09:14:49.660+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a9592f3dc3594d8f","spanId":"a9592f3dc3594d8f"}
{"@timestamp":"2021-07-26T09:14:49.764+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"23e083813d27db99","spanId":"23e083813d27db99"}
{"@timestamp":"2021-07-26T09:14:49.858+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"4ba069e8350b7b78","spanId":"4ba069e8350b7b78"}
{"@timestamp":"2021-07-26T09:14:49.949+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"5aab5531cde8d289","spanId":"5aab5531cde8d289"}
{"@timestamp":"2021-07-26T09:14:50.041+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"844cd81908f70177","spanId":"844cd81908f70177"}
{"@timestamp":"2021-07-26T09:14:50.133+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"bec91312b8cfc08d","spanId":"bec91312b8cfc08d"}
{"@timestamp":"2021-07-26T09:14:50.177+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"a9592f3dc3594d8f","spanId":"a9592f3dc3594d8f"}
{"@timestamp":"2021-07-26T09:14:50.177+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"a9592f3dc3594d8f","spanId":"a9592f3dc3594d8f"}
{"@timestamp":"2021-07-26T09:14:50.226+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"9d1b02bf257f950d","spanId":"9d1b02bf257f950d"}
{"@timestamp":"2021-07-26T09:14:50.316+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"db588881a5da8fb7","spanId":"db588881a5da8fb7"}
{"@timestamp":"2021-07-26T09:14:50.410+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"dac3eb951cd25467","spanId":"dac3eb951cd25467"}
{"@timestamp":"2021-07-26T09:14:51.208+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"a9592f3dc3594d8f","spanId":"a9592f3dc3594d8f"}
{"@timestamp":"2021-07-26T09:14:51.235+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"5c95a7474420118b","spanId":"5c95a7474420118b"}
{"@timestamp":"2021-07-26T09:14:51.417+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"3499fd8cec0d1c0d","spanId":"3499fd8cec0d1c0d"}
{"@timestamp":"2021-07-26T09:14:59.085+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f8d28e3d7ed1ccf4","spanId":"f8d28e3d7ed1ccf4"}
{"@timestamp":"2021-07-26T09:14:59.086+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f8d28e3d7ed1ccf4","spanId":"f8d28e3d7ed1ccf4"}
{"@timestamp":"2021-07-26T09:14:59.086+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f8d28e3d7ed1ccf4","spanId":"f8d28e3d7ed1ccf4"}
{"@timestamp":"2021-07-26T09:14:59.086+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f8d28e3d7ed1ccf4","spanId":"f8d28e3d7ed1ccf4"}
{"@timestamp":"2021-07-26T09:14:59.088+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f8d28e3d7ed1ccf4","spanId":"f8d28e3d7ed1ccf4"}
{"@timestamp":"2021-07-26T09:14:59.089+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f8d28e3d7ed1ccf4","spanId":"f8d28e3d7ed1ccf4"}
{"@timestamp":"2021-07-26T09:14:59.175+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"abcb76191a0947ab","spanId":"abcb76191a0947ab"}
{"@timestamp":"2021-07-26T09:14:59.175+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"abcb76191a0947ab","spanId":"abcb76191a0947ab"}
{"@timestamp":"2021-07-26T09:14:59.175+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"abcb76191a0947ab","spanId":"abcb76191a0947ab"}
{"@timestamp":"2021-07-26T09:14:59.175+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"abcb76191a0947ab","spanId":"abcb76191a0947ab"}
{"@timestamp":"2021-07-26T09:14:59.177+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"abcb76191a0947ab","spanId":"abcb76191a0947ab"}
{"@timestamp":"2021-07-26T09:14:59.177+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"abcb76191a0947ab","spanId":"abcb76191a0947ab"}
{"@timestamp":"2021-07-26T09:14:59.266+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"66710a4eb946d57f","spanId":"66710a4eb946d57f"}
{"@timestamp":"2021-07-26T09:14:59.266+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"66710a4eb946d57f","spanId":"66710a4eb946d57f"}
{"@timestamp":"2021-07-26T09:14:59.267+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"66710a4eb946d57f","spanId":"66710a4eb946d57f"}
{"@timestamp":"2021-07-26T09:14:59.267+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"66710a4eb946d57f","spanId":"66710a4eb946d57f"}
{"@timestamp":"2021-07-26T09:14:59.269+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"66710a4eb946d57f","spanId":"66710a4eb946d57f"}
{"@timestamp":"2021-07-26T09:14:59.269+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"66710a4eb946d57f","spanId":"66710a4eb946d57f"}
{"@timestamp":"2021-07-26T09:14:59.358+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"bc3ac0257a0168f4","spanId":"bc3ac0257a0168f4"}
{"@timestamp":"2021-07-26T09:14:59.358+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"bc3ac0257a0168f4","spanId":"bc3ac0257a0168f4"}
{"@timestamp":"2021-07-26T09:14:59.358+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"bc3ac0257a0168f4","spanId":"bc3ac0257a0168f4"}
{"@timestamp":"2021-07-26T09:14:59.358+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"bc3ac0257a0168f4","spanId":"bc3ac0257a0168f4"}
{"@timestamp":"2021-07-26T09:14:59.360+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"bc3ac0257a0168f4","spanId":"bc3ac0257a0168f4"}
{"@timestamp":"2021-07-26T09:14:59.360+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"bc3ac0257a0168f4","spanId":"bc3ac0257a0168f4"}
{"@timestamp":"2021-07-26T09:14:59.447+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"91ae7709ac4de5d2","spanId":"91ae7709ac4de5d2"}
{"@timestamp":"2021-07-26T09:14:59.447+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"91ae7709ac4de5d2","spanId":"91ae7709ac4de5d2"}
{"@timestamp":"2021-07-26T09:14:59.447+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"91ae7709ac4de5d2","spanId":"91ae7709ac4de5d2"}
{"@timestamp":"2021-07-26T09:14:59.448+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"91ae7709ac4de5d2","spanId":"91ae7709ac4de5d2"}
{"@timestamp":"2021-07-26T09:14:59.449+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"91ae7709ac4de5d2","spanId":"91ae7709ac4de5d2"}
{"@timestamp":"2021-07-26T09:14:59.450+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"91ae7709ac4de5d2","spanId":"91ae7709ac4de5d2"}
{"@timestamp":"2021-07-26T09:14:59.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0612ac8ec451226b","spanId":"0612ac8ec451226b"}
{"@timestamp":"2021-07-26T09:14:59.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0612ac8ec451226b","spanId":"0612ac8ec451226b"}
{"@timestamp":"2021-07-26T09:14:59.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0612ac8ec451226b","spanId":"0612ac8ec451226b"}
{"@timestamp":"2021-07-26T09:14:59.542+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0612ac8ec451226b","spanId":"0612ac8ec451226b"}
{"@timestamp":"2021-07-26T09:14:59.543+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0612ac8ec451226b","spanId":"0612ac8ec451226b"}
{"@timestamp":"2021-07-26T09:14:59.543+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0612ac8ec451226b","spanId":"0612ac8ec451226b"}
{"@timestamp":"2021-07-26T09:14:59.630+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"72f6ca7329edcb70","spanId":"72f6ca7329edcb70"}
{"@timestamp":"2021-07-26T09:14:59.630+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"72f6ca7329edcb70","spanId":"72f6ca7329edcb70"}
{"@timestamp":"2021-07-26T09:14:59.630+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"72f6ca7329edcb70","spanId":"72f6ca7329edcb70"}
{"@timestamp":"2021-07-26T09:14:59.630+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"72f6ca7329edcb70","spanId":"72f6ca7329edcb70"}
{"@timestamp":"2021-07-26T09:14:59.634+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"72f6ca7329edcb70","spanId":"72f6ca7329edcb70"}
{"@timestamp":"2021-07-26T09:14:59.634+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"72f6ca7329edcb70","spanId":"72f6ca7329edcb70"}
{"@timestamp":"2021-07-26T09:14:59.723+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5cce5411eeac208f","spanId":"5cce5411eeac208f"}
{"@timestamp":"2021-07-26T09:14:59.723+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5cce5411eeac208f","spanId":"5cce5411eeac208f"}
{"@timestamp":"2021-07-26T09:14:59.723+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5cce5411eeac208f","spanId":"5cce5411eeac208f"}
{"@timestamp":"2021-07-26T09:14:59.723+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5cce5411eeac208f","spanId":"5cce5411eeac208f"}
{"@timestamp":"2021-07-26T09:14:59.725+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5cce5411eeac208f","spanId":"5cce5411eeac208f"}
{"@timestamp":"2021-07-26T09:14:59.725+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5cce5411eeac208f","spanId":"5cce5411eeac208f"}
{"@timestamp":"2021-07-26T09:14:59.812+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6a19eb369609b2a6","spanId":"6a19eb369609b2a6"}
{"@timestamp":"2021-07-26T09:14:59.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6a19eb369609b2a6","spanId":"6a19eb369609b2a6"}
{"@timestamp":"2021-07-26T09:14:59.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6a19eb369609b2a6","spanId":"6a19eb369609b2a6"}
{"@timestamp":"2021-07-26T09:14:59.813+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6a19eb369609b2a6","spanId":"6a19eb369609b2a6"}
{"@timestamp":"2021-07-26T09:14:59.814+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6a19eb369609b2a6","spanId":"6a19eb369609b2a6"}
{"@timestamp":"2021-07-26T09:14:59.815+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6a19eb369609b2a6","spanId":"6a19eb369609b2a6"}
{"@timestamp":"2021-07-26T09:14:59.904+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"add2fef2561817f8","spanId":"add2fef2561817f8"}
{"@timestamp":"2021-07-26T09:14:59.904+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"add2fef2561817f8","spanId":"add2fef2561817f8"}
{"@timestamp":"2021-07-26T09:14:59.905+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"add2fef2561817f8","spanId":"add2fef2561817f8"}
{"@timestamp":"2021-07-26T09:14:59.905+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"add2fef2561817f8","spanId":"add2fef2561817f8"}
{"@timestamp":"2021-07-26T09:14:59.906+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"add2fef2561817f8","spanId":"add2fef2561817f8"}
{"@timestamp":"2021-07-26T09:14:59.906+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"add2fef2561817f8","spanId":"add2fef2561817f8"}
{"@timestamp":"2021-07-26T09:14:59.994+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b9f5d33e4c9e3fa","spanId":"8b9f5d33e4c9e3fa"}
{"@timestamp":"2021-07-26T09:14:59.994+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b9f5d33e4c9e3fa","spanId":"8b9f5d33e4c9e3fa"}
{"@timestamp":"2021-07-26T09:14:59.994+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b9f5d33e4c9e3fa","spanId":"8b9f5d33e4c9e3fa"}
{"@timestamp":"2021-07-26T09:14:59.994+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b9f5d33e4c9e3fa","spanId":"8b9f5d33e4c9e3fa"}
{"@timestamp":"2021-07-26T09:15:00.099+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"f8d28e3d7ed1ccf4","spanId":"f8d28e3d7ed1ccf4"}
{"@timestamp":"2021-07-26T09:15:00.190+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"abcb76191a0947ab","spanId":"abcb76191a0947ab"}
{"@timestamp":"2021-07-26T09:15:00.282+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"66710a4eb946d57f","spanId":"66710a4eb946d57f"}
{"@timestamp":"2021-07-26T09:15:00.374+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"bc3ac0257a0168f4","spanId":"bc3ac0257a0168f4"}
{"@timestamp":"2021-07-26T09:15:00.466+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"91ae7709ac4de5d2","spanId":"91ae7709ac4de5d2"}
{"@timestamp":"2021-07-26T09:15:00.510+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"8b9f5d33e4c9e3fa","spanId":"8b9f5d33e4c9e3fa"}
{"@timestamp":"2021-07-26T09:15:00.510+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"8b9f5d33e4c9e3fa","spanId":"8b9f5d33e4c9e3fa"}
{"@timestamp":"2021-07-26T09:15:00.559+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"0612ac8ec451226b","spanId":"0612ac8ec451226b"}
{"@timestamp":"2021-07-26T09:15:00.651+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"72f6ca7329edcb70","spanId":"72f6ca7329edcb70"}
{"@timestamp":"2021-07-26T09:15:00.744+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"5cce5411eeac208f","spanId":"5cce5411eeac208f"}
{"@timestamp":"2021-07-26T09:15:01.480+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"6a19eb369609b2a6","spanId":"6a19eb369609b2a6"}
{"@timestamp":"2021-07-26T09:15:01.526+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"8b9f5d33e4c9e3fa","spanId":"8b9f5d33e4c9e3fa"}
{"@timestamp":"2021-07-26T09:15:01.663+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"add2fef2561817f8","spanId":"add2fef2561817f8"}
{"@timestamp":"2021-07-26T09:15:10.149+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"85a54bd5f7d73b3c","spanId":"85a54bd5f7d73b3c"}
{"@timestamp":"2021-07-26T09:15:10.149+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"85a54bd5f7d73b3c","spanId":"85a54bd5f7d73b3c"}
{"@timestamp":"2021-07-26T09:15:10.149+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"85a54bd5f7d73b3c","spanId":"85a54bd5f7d73b3c"}
{"@timestamp":"2021-07-26T09:15:10.150+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"85a54bd5f7d73b3c","spanId":"85a54bd5f7d73b3c"}
{"@timestamp":"2021-07-26T09:15:10.151+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"85a54bd5f7d73b3c","spanId":"85a54bd5f7d73b3c"}
{"@timestamp":"2021-07-26T09:15:10.152+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"85a54bd5f7d73b3c","spanId":"85a54bd5f7d73b3c"}
{"@timestamp":"2021-07-26T09:15:10.198+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"61fe99f8b4403b94","spanId":"61fe99f8b4403b94"}
{"@timestamp":"2021-07-26T09:15:10.198+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"61fe99f8b4403b94","spanId":"61fe99f8b4403b94"}
{"@timestamp":"2021-07-26T09:15:10.198+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"61fe99f8b4403b94","spanId":"61fe99f8b4403b94"}
{"@timestamp":"2021-07-26T09:15:10.198+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"61fe99f8b4403b94","spanId":"61fe99f8b4403b94"}
{"@timestamp":"2021-07-26T09:15:10.201+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"61fe99f8b4403b94","spanId":"61fe99f8b4403b94"}
{"@timestamp":"2021-07-26T09:15:10.202+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"61fe99f8b4403b94","spanId":"61fe99f8b4403b94"}
{"@timestamp":"2021-07-26T09:15:10.250+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e17e1df8b86707cb","spanId":"e17e1df8b86707cb"}
{"@timestamp":"2021-07-26T09:15:10.250+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e17e1df8b86707cb","spanId":"e17e1df8b86707cb"}
{"@timestamp":"2021-07-26T09:15:10.250+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e17e1df8b86707cb","spanId":"e17e1df8b86707cb"}
{"@timestamp":"2021-07-26T09:15:10.250+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e17e1df8b86707cb","spanId":"e17e1df8b86707cb"}
{"@timestamp":"2021-07-26T09:15:10.252+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e17e1df8b86707cb","spanId":"e17e1df8b86707cb"}
{"@timestamp":"2021-07-26T09:15:10.252+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e17e1df8b86707cb","spanId":"e17e1df8b86707cb"}
{"@timestamp":"2021-07-26T09:15:10.299+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"58c0716492989990","spanId":"58c0716492989990"}
{"@timestamp":"2021-07-26T09:15:10.299+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"58c0716492989990","spanId":"58c0716492989990"}
{"@timestamp":"2021-07-26T09:15:10.299+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"58c0716492989990","spanId":"58c0716492989990"}
{"@timestamp":"2021-07-26T09:15:10.299+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"58c0716492989990","spanId":"58c0716492989990"}
{"@timestamp":"2021-07-26T09:15:10.301+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"58c0716492989990","spanId":"58c0716492989990"}
{"@timestamp":"2021-07-26T09:15:10.301+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"58c0716492989990","spanId":"58c0716492989990"}
{"@timestamp":"2021-07-26T09:15:10.348+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e027f53819440a3a","spanId":"e027f53819440a3a"}
{"@timestamp":"2021-07-26T09:15:10.348+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e027f53819440a3a","spanId":"e027f53819440a3a"}
{"@timestamp":"2021-07-26T09:15:10.348+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e027f53819440a3a","spanId":"e027f53819440a3a"}
{"@timestamp":"2021-07-26T09:15:10.348+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e027f53819440a3a","spanId":"e027f53819440a3a"}
{"@timestamp":"2021-07-26T09:15:10.349+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e027f53819440a3a","spanId":"e027f53819440a3a"}
{"@timestamp":"2021-07-26T09:15:10.349+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"e027f53819440a3a","spanId":"e027f53819440a3a"}
{"@timestamp":"2021-07-26T09:15:10.400+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8dbb32a08d8e40b","spanId":"d8dbb32a08d8e40b"}
{"@timestamp":"2021-07-26T09:15:10.400+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8dbb32a08d8e40b","spanId":"d8dbb32a08d8e40b"}
{"@timestamp":"2021-07-26T09:15:10.400+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8dbb32a08d8e40b","spanId":"d8dbb32a08d8e40b"}
{"@timestamp":"2021-07-26T09:15:10.401+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8dbb32a08d8e40b","spanId":"d8dbb32a08d8e40b"}
{"@timestamp":"2021-07-26T09:15:10.402+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8dbb32a08d8e40b","spanId":"d8dbb32a08d8e40b"}
{"@timestamp":"2021-07-26T09:15:10.403+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8dbb32a08d8e40b","spanId":"d8dbb32a08d8e40b"}
{"@timestamp":"2021-07-26T09:15:10.450+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c26113eb6b1cfd5","spanId":"9c26113eb6b1cfd5"}
{"@timestamp":"2021-07-26T09:15:10.451+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c26113eb6b1cfd5","spanId":"9c26113eb6b1cfd5"}
{"@timestamp":"2021-07-26T09:15:10.451+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c26113eb6b1cfd5","spanId":"9c26113eb6b1cfd5"}
{"@timestamp":"2021-07-26T09:15:10.451+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c26113eb6b1cfd5","spanId":"9c26113eb6b1cfd5"}
{"@timestamp":"2021-07-26T09:15:10.453+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c26113eb6b1cfd5","spanId":"9c26113eb6b1cfd5"}
{"@timestamp":"2021-07-26T09:15:10.453+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c26113eb6b1cfd5","spanId":"9c26113eb6b1cfd5"}
{"@timestamp":"2021-07-26T09:15:10.498+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d2b2ddfd9685d4de","spanId":"d2b2ddfd9685d4de"}
{"@timestamp":"2021-07-26T09:15:10.498+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d2b2ddfd9685d4de","spanId":"d2b2ddfd9685d4de"}
{"@timestamp":"2021-07-26T09:15:10.498+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d2b2ddfd9685d4de","spanId":"d2b2ddfd9685d4de"}
{"@timestamp":"2021-07-26T09:15:10.498+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d2b2ddfd9685d4de","spanId":"d2b2ddfd9685d4de"}
{"@timestamp":"2021-07-26T09:15:10.500+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d2b2ddfd9685d4de","spanId":"d2b2ddfd9685d4de"}
{"@timestamp":"2021-07-26T09:15:10.500+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d2b2ddfd9685d4de","spanId":"d2b2ddfd9685d4de"}
{"@timestamp":"2021-07-26T09:15:10.548+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc01f1fd61c4089b","spanId":"cc01f1fd61c4089b"}
{"@timestamp":"2021-07-26T09:15:10.548+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc01f1fd61c4089b","spanId":"cc01f1fd61c4089b"}
{"@timestamp":"2021-07-26T09:15:10.548+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc01f1fd61c4089b","spanId":"cc01f1fd61c4089b"}
{"@timestamp":"2021-07-26T09:15:10.550+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc01f1fd61c4089b","spanId":"cc01f1fd61c4089b"}
{"@timestamp":"2021-07-26T09:15:10.551+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc01f1fd61c4089b","spanId":"cc01f1fd61c4089b"}
{"@timestamp":"2021-07-26T09:15:10.551+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc01f1fd61c4089b","spanId":"cc01f1fd61c4089b"}
{"@timestamp":"2021-07-26T09:15:10.600+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"386c7bf00aa66293","spanId":"386c7bf00aa66293"}
{"@timestamp":"2021-07-26T09:15:10.601+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"386c7bf00aa66293","spanId":"386c7bf00aa66293"}
{"@timestamp":"2021-07-26T09:15:10.601+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"386c7bf00aa66293","spanId":"386c7bf00aa66293"}
{"@timestamp":"2021-07-26T09:15:10.601+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"386c7bf00aa66293","spanId":"386c7bf00aa66293"}
{"@timestamp":"2021-07-26T09:15:10.603+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"386c7bf00aa66293","spanId":"386c7bf00aa66293"}
{"@timestamp":"2021-07-26T09:15:10.603+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"386c7bf00aa66293","spanId":"386c7bf00aa66293"}
{"@timestamp":"2021-07-26T09:15:10.651+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"078f632a2af30a0b","spanId":"078f632a2af30a0b"}
{"@timestamp":"2021-07-26T09:15:10.652+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"078f632a2af30a0b","spanId":"078f632a2af30a0b"}
{"@timestamp":"2021-07-26T09:15:10.652+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"078f632a2af30a0b","spanId":"078f632a2af30a0b"}
{"@timestamp":"2021-07-26T09:15:10.652+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"078f632a2af30a0b","spanId":"078f632a2af30a0b"}
{"@timestamp":"2021-07-26T09:15:10.700+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b2ddd9098d84fa83","spanId":"b2ddd9098d84fa83"}
{"@timestamp":"2021-07-26T09:15:10.700+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b2ddd9098d84fa83","spanId":"b2ddd9098d84fa83"}
{"@timestamp":"2021-07-26T09:15:10.700+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b2ddd9098d84fa83","spanId":"b2ddd9098d84fa83"}
{"@timestamp":"2021-07-26T09:15:10.701+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b2ddd9098d84fa83","spanId":"b2ddd9098d84fa83"}
{"@timestamp":"2021-07-26T09:15:10.750+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"df2cdfeb0f93e6c8","spanId":"df2cdfeb0f93e6c8"}
{"@timestamp":"2021-07-26T09:15:10.750+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"df2cdfeb0f93e6c8","spanId":"df2cdfeb0f93e6c8"}
{"@timestamp":"2021-07-26T09:15:10.751+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"df2cdfeb0f93e6c8","spanId":"df2cdfeb0f93e6c8"}
{"@timestamp":"2021-07-26T09:15:10.751+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"df2cdfeb0f93e6c8","spanId":"df2cdfeb0f93e6c8"}
{"@timestamp":"2021-07-26T09:15:10.801+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"f4c9701dc29a768a","spanId":"f4c9701dc29a768a"}
{"@timestamp":"2021-07-26T09:15:10.802+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"f4c9701dc29a768a","spanId":"f4c9701dc29a768a"}
{"@timestamp":"2021-07-26T09:15:10.802+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"f4c9701dc29a768a","spanId":"f4c9701dc29a768a"}
{"@timestamp":"2021-07-26T09:15:10.802+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"f4c9701dc29a768a","spanId":"f4c9701dc29a768a"}
{"@timestamp":"2021-07-26T09:15:10.852+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"863f8c718ae290df","spanId":"863f8c718ae290df"}
{"@timestamp":"2021-07-26T09:15:10.852+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"863f8c718ae290df","spanId":"863f8c718ae290df"}
{"@timestamp":"2021-07-26T09:15:10.852+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"863f8c718ae290df","spanId":"863f8c718ae290df"}
{"@timestamp":"2021-07-26T09:15:10.853+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"863f8c718ae290df","spanId":"863f8c718ae290df"}
{"@timestamp":"2021-07-26T09:15:10.900+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"7c96c599874813e7","spanId":"7c96c599874813e7"}
{"@timestamp":"2021-07-26T09:15:10.901+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"7c96c599874813e7","spanId":"7c96c599874813e7"}
{"@timestamp":"2021-07-26T09:15:10.901+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"7c96c599874813e7","spanId":"7c96c599874813e7"}
{"@timestamp":"2021-07-26T09:15:10.901+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"7c96c599874813e7","spanId":"7c96c599874813e7"}
{"@timestamp":"2021-07-26T09:15:10.951+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"33234b7a2d6aedfe","spanId":"33234b7a2d6aedfe"}
{"@timestamp":"2021-07-26T09:15:10.951+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"33234b7a2d6aedfe","spanId":"33234b7a2d6aedfe"}
{"@timestamp":"2021-07-26T09:15:10.951+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"33234b7a2d6aedfe","spanId":"33234b7a2d6aedfe"}
{"@timestamp":"2021-07-26T09:15:10.952+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"33234b7a2d6aedfe","spanId":"33234b7a2d6aedfe"}
{"@timestamp":"2021-07-26T09:15:11.003+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6fd2cbf139079392","spanId":"6fd2cbf139079392"}
{"@timestamp":"2021-07-26T09:15:11.003+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6fd2cbf139079392","spanId":"6fd2cbf139079392"}
{"@timestamp":"2021-07-26T09:15:11.004+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6fd2cbf139079392","spanId":"6fd2cbf139079392"}
{"@timestamp":"2021-07-26T09:15:11.004+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6fd2cbf139079392","spanId":"6fd2cbf139079392"}
{"@timestamp":"2021-07-26T09:15:11.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"6751bab59e60866b","spanId":"6751bab59e60866b"}
{"@timestamp":"2021-07-26T09:15:11.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"6751bab59e60866b","spanId":"6751bab59e60866b"}
{"@timestamp":"2021-07-26T09:15:11.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"6751bab59e60866b","spanId":"6751bab59e60866b"}
{"@timestamp":"2021-07-26T09:15:11.051+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"6751bab59e60866b","spanId":"6751bab59e60866b"}
{"@timestamp":"2021-07-26T09:15:11.102+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"fdcf6fa1e8b74786","spanId":"fdcf6fa1e8b74786"}
{"@timestamp":"2021-07-26T09:15:11.102+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"fdcf6fa1e8b74786","spanId":"fdcf6fa1e8b74786"}
{"@timestamp":"2021-07-26T09:15:11.103+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"fdcf6fa1e8b74786","spanId":"fdcf6fa1e8b74786"}
{"@timestamp":"2021-07-26T09:15:11.104+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"fdcf6fa1e8b74786","spanId":"fdcf6fa1e8b74786"}
{"@timestamp":"2021-07-26T09:15:11.170+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"85a54bd5f7d73b3c","spanId":"85a54bd5f7d73b3c"}
{"@timestamp":"2021-07-26T09:15:11.214+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"b2ddd9098d84fa83","spanId":"b2ddd9098d84fa83"}
{"@timestamp":"2021-07-26T09:15:11.214+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"b2ddd9098d84fa83","spanId":"b2ddd9098d84fa83"}
{"@timestamp":"2021-07-26T09:15:11.215+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"61fe99f8b4403b94","spanId":"61fe99f8b4403b94"}
{"@timestamp":"2021-07-26T09:15:11.260+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"df2cdfeb0f93e6c8","spanId":"df2cdfeb0f93e6c8"}
{"@timestamp":"2021-07-26T09:15:11.260+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"df2cdfeb0f93e6c8","spanId":"df2cdfeb0f93e6c8"}
{"@timestamp":"2021-07-26T09:15:11.262+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"e17e1df8b86707cb","spanId":"e17e1df8b86707cb"}
{"@timestamp":"2021-07-26T09:15:11.307+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"f4c9701dc29a768a","spanId":"f4c9701dc29a768a"}
{"@timestamp":"2021-07-26T09:15:11.308+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"f4c9701dc29a768a","spanId":"f4c9701dc29a768a"}
{"@timestamp":"2021-07-26T09:15:11.324+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"58c0716492989990","spanId":"58c0716492989990"}
{"@timestamp":"2021-07-26T09:15:11.367+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"863f8c718ae290df","spanId":"863f8c718ae290df"}
{"@timestamp":"2021-07-26T09:15:11.367+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"863f8c718ae290df","spanId":"863f8c718ae290df"}
{"@timestamp":"2021-07-26T09:15:11.369+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"e027f53819440a3a","spanId":"e027f53819440a3a"}
{"@timestamp":"2021-07-26T09:15:11.411+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"7c96c599874813e7","spanId":"7c96c599874813e7"}
{"@timestamp":"2021-07-26T09:15:11.412+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"7c96c599874813e7","spanId":"7c96c599874813e7"}
{"@timestamp":"2021-07-26T09:15:11.412+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"d8dbb32a08d8e40b","spanId":"d8dbb32a08d8e40b"}
{"@timestamp":"2021-07-26T09:15:11.457+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"33234b7a2d6aedfe","spanId":"33234b7a2d6aedfe"}
{"@timestamp":"2021-07-26T09:15:11.457+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"33234b7a2d6aedfe","spanId":"33234b7a2d6aedfe"}
{"@timestamp":"2021-07-26T09:15:11.474+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"9c26113eb6b1cfd5","spanId":"9c26113eb6b1cfd5"}
{"@timestamp":"2021-07-26T09:15:11.517+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"6fd2cbf139079392","spanId":"6fd2cbf139079392"}
{"@timestamp":"2021-07-26T09:15:11.517+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"6fd2cbf139079392","spanId":"6fd2cbf139079392"}
{"@timestamp":"2021-07-26T09:15:11.564+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"cc01f1fd61c4089b","spanId":"cc01f1fd61c4089b"}
{"@timestamp":"2021-07-26T09:15:11.609+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"fdcf6fa1e8b74786","spanId":"fdcf6fa1e8b74786"}
{"@timestamp":"2021-07-26T09:15:11.610+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"fdcf6fa1e8b74786","spanId":"fdcf6fa1e8b74786"}
{"@timestamp":"2021-07-26T09:15:11.689+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:15:11.690+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:15:12.072+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:15:12.073+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:15:12.225+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"b2ddd9098d84fa83","spanId":"b2ddd9098d84fa83"}
{"@timestamp":"2021-07-26T09:15:12.271+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"df2cdfeb0f93e6c8","spanId":"df2cdfeb0f93e6c8"}
{"@timestamp":"2021-07-26T09:15:12.317+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"f4c9701dc29a768a","spanId":"f4c9701dc29a768a"}
{"@timestamp":"2021-07-26T09:15:12.333+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"d2b2ddfd9685d4de","spanId":"d2b2ddfd9685d4de"}
{"@timestamp":"2021-07-26T09:15:12.424+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"7c96c599874813e7","spanId":"7c96c599874813e7"}
{"@timestamp":"2021-07-26T09:15:12.425+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"386c7bf00aa66293","spanId":"386c7bf00aa66293"}
{"@timestamp":"2021-07-26T09:15:12.531+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"6fd2cbf139079392","spanId":"6fd2cbf139079392"}
{"@timestamp":"2021-07-26T09:15:12.623+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"fdcf6fa1e8b74786","spanId":"fdcf6fa1e8b74786"}
{"@timestamp":"2021-07-26T09:15:13.341+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"863f8c718ae290df","spanId":"863f8c718ae290df"}
{"@timestamp":"2021-07-26T09:15:13.445+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"33234b7a2d6aedfe","spanId":"33234b7a2d6aedfe"}
{"@timestamp":"2021-07-26T09:15:26.764+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"163cdd819705266d","spanId":"163cdd819705266d"}
{"@timestamp":"2021-07-26T09:15:26.764+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"163cdd819705266d","spanId":"163cdd819705266d"}
{"@timestamp":"2021-07-26T09:15:26.764+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"163cdd819705266d","spanId":"163cdd819705266d"}
{"@timestamp":"2021-07-26T09:15:26.764+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"163cdd819705266d","spanId":"163cdd819705266d"}
{"@timestamp":"2021-07-26T09:15:26.767+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"163cdd819705266d","spanId":"163cdd819705266d"}
{"@timestamp":"2021-07-26T09:15:26.767+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"163cdd819705266d","spanId":"163cdd819705266d"}
{"@timestamp":"2021-07-26T09:15:26.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69fc99a20fc3cce2","spanId":"69fc99a20fc3cce2"}
{"@timestamp":"2021-07-26T09:15:26.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69fc99a20fc3cce2","spanId":"69fc99a20fc3cce2"}
{"@timestamp":"2021-07-26T09:15:26.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69fc99a20fc3cce2","spanId":"69fc99a20fc3cce2"}
{"@timestamp":"2021-07-26T09:15:26.813+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69fc99a20fc3cce2","spanId":"69fc99a20fc3cce2"}
{"@timestamp":"2021-07-26T09:15:26.816+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69fc99a20fc3cce2","spanId":"69fc99a20fc3cce2"}
{"@timestamp":"2021-07-26T09:15:26.816+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69fc99a20fc3cce2","spanId":"69fc99a20fc3cce2"}
{"@timestamp":"2021-07-26T09:15:26.864+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9708c0326e7d3a33","spanId":"9708c0326e7d3a33"}
{"@timestamp":"2021-07-26T09:15:26.864+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9708c0326e7d3a33","spanId":"9708c0326e7d3a33"}
{"@timestamp":"2021-07-26T09:15:26.864+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9708c0326e7d3a33","spanId":"9708c0326e7d3a33"}
{"@timestamp":"2021-07-26T09:15:26.864+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9708c0326e7d3a33","spanId":"9708c0326e7d3a33"}
{"@timestamp":"2021-07-26T09:15:26.867+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9708c0326e7d3a33","spanId":"9708c0326e7d3a33"}
{"@timestamp":"2021-07-26T09:15:26.867+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9708c0326e7d3a33","spanId":"9708c0326e7d3a33"}
{"@timestamp":"2021-07-26T09:15:26.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c95b252217f7db55","spanId":"c95b252217f7db55"}
{"@timestamp":"2021-07-26T09:15:26.914+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c95b252217f7db55","spanId":"c95b252217f7db55"}
{"@timestamp":"2021-07-26T09:15:26.914+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c95b252217f7db55","spanId":"c95b252217f7db55"}
{"@timestamp":"2021-07-26T09:15:26.914+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c95b252217f7db55","spanId":"c95b252217f7db55"}
{"@timestamp":"2021-07-26T09:15:26.914+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c95b252217f7db55","spanId":"c95b252217f7db55"}
{"@timestamp":"2021-07-26T09:15:26.916+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c95b252217f7db55","spanId":"c95b252217f7db55"}
{"@timestamp":"2021-07-26T09:15:26.964+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"17cd0e450fc184f0","spanId":"17cd0e450fc184f0"}
{"@timestamp":"2021-07-26T09:15:26.964+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"17cd0e450fc184f0","spanId":"17cd0e450fc184f0"}
{"@timestamp":"2021-07-26T09:15:26.964+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"17cd0e450fc184f0","spanId":"17cd0e450fc184f0"}
{"@timestamp":"2021-07-26T09:15:26.964+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"17cd0e450fc184f0","spanId":"17cd0e450fc184f0"}
{"@timestamp":"2021-07-26T09:15:26.965+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"17cd0e450fc184f0","spanId":"17cd0e450fc184f0"}
{"@timestamp":"2021-07-26T09:15:26.966+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"17cd0e450fc184f0","spanId":"17cd0e450fc184f0"}
{"@timestamp":"2021-07-26T09:15:27.016+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ed28a6913e212824","spanId":"ed28a6913e212824"}
{"@timestamp":"2021-07-26T09:15:27.017+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ed28a6913e212824","spanId":"ed28a6913e212824"}
{"@timestamp":"2021-07-26T09:15:27.017+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ed28a6913e212824","spanId":"ed28a6913e212824"}
{"@timestamp":"2021-07-26T09:15:27.017+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ed28a6913e212824","spanId":"ed28a6913e212824"}
{"@timestamp":"2021-07-26T09:15:27.019+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ed28a6913e212824","spanId":"ed28a6913e212824"}
{"@timestamp":"2021-07-26T09:15:27.019+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ed28a6913e212824","spanId":"ed28a6913e212824"}
{"@timestamp":"2021-07-26T09:15:27.065+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a2c2f27db59026fc","spanId":"a2c2f27db59026fc"}
{"@timestamp":"2021-07-26T09:15:27.065+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a2c2f27db59026fc","spanId":"a2c2f27db59026fc"}
{"@timestamp":"2021-07-26T09:15:27.065+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a2c2f27db59026fc","spanId":"a2c2f27db59026fc"}
{"@timestamp":"2021-07-26T09:15:27.065+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a2c2f27db59026fc","spanId":"a2c2f27db59026fc"}
{"@timestamp":"2021-07-26T09:15:27.067+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a2c2f27db59026fc","spanId":"a2c2f27db59026fc"}
{"@timestamp":"2021-07-26T09:15:27.068+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a2c2f27db59026fc","spanId":"a2c2f27db59026fc"}
{"@timestamp":"2021-07-26T09:15:27.113+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca5c72fb4d26d032","spanId":"ca5c72fb4d26d032"}
{"@timestamp":"2021-07-26T09:15:27.114+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca5c72fb4d26d032","spanId":"ca5c72fb4d26d032"}
{"@timestamp":"2021-07-26T09:15:27.114+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca5c72fb4d26d032","spanId":"ca5c72fb4d26d032"}
{"@timestamp":"2021-07-26T09:15:27.114+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca5c72fb4d26d032","spanId":"ca5c72fb4d26d032"}
{"@timestamp":"2021-07-26T09:15:27.116+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca5c72fb4d26d032","spanId":"ca5c72fb4d26d032"}
{"@timestamp":"2021-07-26T09:15:27.116+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ca5c72fb4d26d032","spanId":"ca5c72fb4d26d032"}
{"@timestamp":"2021-07-26T09:15:27.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"46c116238ea665d8","spanId":"46c116238ea665d8"}
{"@timestamp":"2021-07-26T09:15:27.166+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"46c116238ea665d8","spanId":"46c116238ea665d8"}
{"@timestamp":"2021-07-26T09:15:27.166+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"46c116238ea665d8","spanId":"46c116238ea665d8"}
{"@timestamp":"2021-07-26T09:15:27.167+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"46c116238ea665d8","spanId":"46c116238ea665d8"}
{"@timestamp":"2021-07-26T09:15:27.169+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"46c116238ea665d8","spanId":"46c116238ea665d8"}
{"@timestamp":"2021-07-26T09:15:27.169+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"46c116238ea665d8","spanId":"46c116238ea665d8"}
{"@timestamp":"2021-07-26T09:15:27.215+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"fccdd7358e845b85","spanId":"fccdd7358e845b85"}
{"@timestamp":"2021-07-26T09:15:27.216+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"fccdd7358e845b85","spanId":"fccdd7358e845b85"}
{"@timestamp":"2021-07-26T09:15:27.216+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"fccdd7358e845b85","spanId":"fccdd7358e845b85"}
{"@timestamp":"2021-07-26T09:15:27.216+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"fccdd7358e845b85","spanId":"fccdd7358e845b85"}
{"@timestamp":"2021-07-26T09:15:27.218+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"fccdd7358e845b85","spanId":"fccdd7358e845b85"}
{"@timestamp":"2021-07-26T09:15:27.218+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"fccdd7358e845b85","spanId":"fccdd7358e845b85"}
{"@timestamp":"2021-07-26T09:15:27.264+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7adf8e6d8a9c76ff","spanId":"7adf8e6d8a9c76ff"}
{"@timestamp":"2021-07-26T09:15:27.264+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7adf8e6d8a9c76ff","spanId":"7adf8e6d8a9c76ff"}
{"@timestamp":"2021-07-26T09:15:27.264+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7adf8e6d8a9c76ff","spanId":"7adf8e6d8a9c76ff"}
{"@timestamp":"2021-07-26T09:15:27.264+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7adf8e6d8a9c76ff","spanId":"7adf8e6d8a9c76ff"}
{"@timestamp":"2021-07-26T09:15:27.315+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"ef8d5125094bb05d","spanId":"ef8d5125094bb05d"}
{"@timestamp":"2021-07-26T09:15:27.315+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"ef8d5125094bb05d","spanId":"ef8d5125094bb05d"}
{"@timestamp":"2021-07-26T09:15:27.315+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"ef8d5125094bb05d","spanId":"ef8d5125094bb05d"}
{"@timestamp":"2021-07-26T09:15:27.315+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"ef8d5125094bb05d","spanId":"ef8d5125094bb05d"}
{"@timestamp":"2021-07-26T09:15:27.363+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"aea0572f0f8f0d13","spanId":"aea0572f0f8f0d13"}
{"@timestamp":"2021-07-26T09:15:27.364+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"aea0572f0f8f0d13","spanId":"aea0572f0f8f0d13"}
{"@timestamp":"2021-07-26T09:15:27.364+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"aea0572f0f8f0d13","spanId":"aea0572f0f8f0d13"}
{"@timestamp":"2021-07-26T09:15:27.364+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"aea0572f0f8f0d13","spanId":"aea0572f0f8f0d13"}
{"@timestamp":"2021-07-26T09:15:27.415+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"345f40fe2cd2794b","spanId":"345f40fe2cd2794b"}
{"@timestamp":"2021-07-26T09:15:27.415+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"345f40fe2cd2794b","spanId":"345f40fe2cd2794b"}
{"@timestamp":"2021-07-26T09:15:27.415+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"345f40fe2cd2794b","spanId":"345f40fe2cd2794b"}
{"@timestamp":"2021-07-26T09:15:27.415+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"345f40fe2cd2794b","spanId":"345f40fe2cd2794b"}
{"@timestamp":"2021-07-26T09:15:27.463+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"196e0ea28f548445","spanId":"196e0ea28f548445"}
{"@timestamp":"2021-07-26T09:15:27.464+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"196e0ea28f548445","spanId":"196e0ea28f548445"}
{"@timestamp":"2021-07-26T09:15:27.464+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"196e0ea28f548445","spanId":"196e0ea28f548445"}
{"@timestamp":"2021-07-26T09:15:27.464+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"196e0ea28f548445","spanId":"196e0ea28f548445"}
{"@timestamp":"2021-07-26T09:15:27.514+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bef58f886678b0be","spanId":"bef58f886678b0be"}
{"@timestamp":"2021-07-26T09:15:27.515+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bef58f886678b0be","spanId":"bef58f886678b0be"}
{"@timestamp":"2021-07-26T09:15:27.515+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bef58f886678b0be","spanId":"bef58f886678b0be"}
{"@timestamp":"2021-07-26T09:15:27.515+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bef58f886678b0be","spanId":"bef58f886678b0be"}
{"@timestamp":"2021-07-26T09:15:27.565+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"33651889ad491109","spanId":"33651889ad491109"}
{"@timestamp":"2021-07-26T09:15:27.565+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"33651889ad491109","spanId":"33651889ad491109"}
{"@timestamp":"2021-07-26T09:15:27.565+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"33651889ad491109","spanId":"33651889ad491109"}
{"@timestamp":"2021-07-26T09:15:27.566+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"33651889ad491109","spanId":"33651889ad491109"}
{"@timestamp":"2021-07-26T09:15:27.615+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"01ffd40bb79c1267","spanId":"01ffd40bb79c1267"}
{"@timestamp":"2021-07-26T09:15:27.616+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"01ffd40bb79c1267","spanId":"01ffd40bb79c1267"}
{"@timestamp":"2021-07-26T09:15:27.616+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"01ffd40bb79c1267","spanId":"01ffd40bb79c1267"}
{"@timestamp":"2021-07-26T09:15:27.616+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"01ffd40bb79c1267","spanId":"01ffd40bb79c1267"}
{"@timestamp":"2021-07-26T09:15:27.664+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"dc1b75cd013afdfa","spanId":"dc1b75cd013afdfa"}
{"@timestamp":"2021-07-26T09:15:27.664+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"dc1b75cd013afdfa","spanId":"dc1b75cd013afdfa"}
{"@timestamp":"2021-07-26T09:15:27.664+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"dc1b75cd013afdfa","spanId":"dc1b75cd013afdfa"}
{"@timestamp":"2021-07-26T09:15:27.664+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"dc1b75cd013afdfa","spanId":"dc1b75cd013afdfa"}
{"@timestamp":"2021-07-26T09:15:27.713+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c84fc8220f31d7f4","spanId":"c84fc8220f31d7f4"}
{"@timestamp":"2021-07-26T09:15:27.713+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c84fc8220f31d7f4","spanId":"c84fc8220f31d7f4"}
{"@timestamp":"2021-07-26T09:15:27.713+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c84fc8220f31d7f4","spanId":"c84fc8220f31d7f4"}
{"@timestamp":"2021-07-26T09:15:27.713+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"c84fc8220f31d7f4","spanId":"c84fc8220f31d7f4"}
{"@timestamp":"2021-07-26T09:15:27.783+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"163cdd819705266d","spanId":"163cdd819705266d"}
{"@timestamp":"2021-07-26T09:15:27.829+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"ef8d5125094bb05d","spanId":"ef8d5125094bb05d"}
{"@timestamp":"2021-07-26T09:15:27.829+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"69fc99a20fc3cce2","spanId":"69fc99a20fc3cce2"}
{"@timestamp":"2021-07-26T09:15:27.830+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"ef8d5125094bb05d","spanId":"ef8d5125094bb05d"}
{"@timestamp":"2021-07-26T09:15:27.873+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"aea0572f0f8f0d13","spanId":"aea0572f0f8f0d13"}
{"@timestamp":"2021-07-26T09:15:27.873+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"aea0572f0f8f0d13","spanId":"aea0572f0f8f0d13"}
{"@timestamp":"2021-07-26T09:15:27.890+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"9708c0326e7d3a33","spanId":"9708c0326e7d3a33"}
{"@timestamp":"2021-07-26T09:15:27.933+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"345f40fe2cd2794b","spanId":"345f40fe2cd2794b"}
{"@timestamp":"2021-07-26T09:15:27.934+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"345f40fe2cd2794b","spanId":"345f40fe2cd2794b"}
{"@timestamp":"2021-07-26T09:15:27.934+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"c95b252217f7db55","spanId":"c95b252217f7db55"}
{"@timestamp":"2021-07-26T09:15:27.978+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"196e0ea28f548445","spanId":"196e0ea28f548445"}
{"@timestamp":"2021-07-26T09:15:27.978+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"196e0ea28f548445","spanId":"196e0ea28f548445"}
{"@timestamp":"2021-07-26T09:15:27.979+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"17cd0e450fc184f0","spanId":"17cd0e450fc184f0"}
{"@timestamp":"2021-07-26T09:15:28.025+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"bef58f886678b0be","spanId":"bef58f886678b0be"}
{"@timestamp":"2021-07-26T09:15:28.025+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"bef58f886678b0be","spanId":"bef58f886678b0be"}
{"@timestamp":"2021-07-26T09:15:28.041+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"ed28a6913e212824","spanId":"ed28a6913e212824"}
{"@timestamp":"2021-07-26T09:15:28.074+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"33651889ad491109","spanId":"33651889ad491109"}
{"@timestamp":"2021-07-26T09:15:28.074+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"33651889ad491109","spanId":"33651889ad491109"}
{"@timestamp":"2021-07-26T09:15:28.089+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"a2c2f27db59026fc","spanId":"a2c2f27db59026fc"}
{"@timestamp":"2021-07-26T09:15:28.133+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"01ffd40bb79c1267","spanId":"01ffd40bb79c1267"}
{"@timestamp":"2021-07-26T09:15:28.133+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"01ffd40bb79c1267","spanId":"01ffd40bb79c1267"}
{"@timestamp":"2021-07-26T09:15:28.134+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"ca5c72fb4d26d032","spanId":"ca5c72fb4d26d032"}
{"@timestamp":"2021-07-26T09:15:28.179+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"dc1b75cd013afdfa","spanId":"dc1b75cd013afdfa"}
{"@timestamp":"2021-07-26T09:15:28.180+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"dc1b75cd013afdfa","spanId":"dc1b75cd013afdfa"}
{"@timestamp":"2021-07-26T09:15:28.291+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:15:28.293+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:15:28.735+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:15:28.736+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:15:28.857+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"ef8d5125094bb05d","spanId":"ef8d5125094bb05d"}
{"@timestamp":"2021-07-26T09:15:28.886+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"aea0572f0f8f0d13","spanId":"aea0572f0f8f0d13"}
{"@timestamp":"2021-07-26T09:15:28.948+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"46c116238ea665d8","spanId":"46c116238ea665d8"}
{"@timestamp":"2021-07-26T09:15:28.948+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"345f40fe2cd2794b","spanId":"345f40fe2cd2794b"}
{"@timestamp":"2021-07-26T09:15:29.041+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"bef58f886678b0be","spanId":"bef58f886678b0be"}
{"@timestamp":"2021-07-26T09:15:29.058+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"fccdd7358e845b85","spanId":"fccdd7358e845b85"}
{"@timestamp":"2021-07-26T09:15:29.148+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"01ffd40bb79c1267","spanId":"01ffd40bb79c1267"}
{"@timestamp":"2021-07-26T09:15:29.194+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"dc1b75cd013afdfa","spanId":"dc1b75cd013afdfa"}
{"@timestamp":"2021-07-26T09:15:29.959+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"196e0ea28f548445","spanId":"196e0ea28f548445"}
{"@timestamp":"2021-07-26T09:15:30.065+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"33651889ad491109","spanId":"33651889ad491109"}
{"@timestamp":"2021-07-26T09:16:03.823+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0f8400229744e442","spanId":"0f8400229744e442"}
{"@timestamp":"2021-07-26T09:16:03.823+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0f8400229744e442","spanId":"0f8400229744e442"}
{"@timestamp":"2021-07-26T09:16:03.823+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0f8400229744e442","spanId":"0f8400229744e442"}
{"@timestamp":"2021-07-26T09:16:03.823+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0f8400229744e442","spanId":"0f8400229744e442"}
{"@timestamp":"2021-07-26T09:16:03.826+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0f8400229744e442","spanId":"0f8400229744e442"}
{"@timestamp":"2021-07-26T09:16:03.826+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0f8400229744e442","spanId":"0f8400229744e442"}
{"@timestamp":"2021-07-26T09:16:03.869+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"513709b7c4a4a1c0","spanId":"513709b7c4a4a1c0"}
{"@timestamp":"2021-07-26T09:16:03.869+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"513709b7c4a4a1c0","spanId":"513709b7c4a4a1c0"}
{"@timestamp":"2021-07-26T09:16:03.869+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"513709b7c4a4a1c0","spanId":"513709b7c4a4a1c0"}
{"@timestamp":"2021-07-26T09:16:03.869+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"513709b7c4a4a1c0","spanId":"513709b7c4a4a1c0"}
{"@timestamp":"2021-07-26T09:16:03.870+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"513709b7c4a4a1c0","spanId":"513709b7c4a4a1c0"}
{"@timestamp":"2021-07-26T09:16:03.871+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"513709b7c4a4a1c0","spanId":"513709b7c4a4a1c0"}
{"@timestamp":"2021-07-26T09:16:03.922+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"723e88907a2a036e","spanId":"723e88907a2a036e"}
{"@timestamp":"2021-07-26T09:16:03.922+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"723e88907a2a036e","spanId":"723e88907a2a036e"}
{"@timestamp":"2021-07-26T09:16:03.922+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"723e88907a2a036e","spanId":"723e88907a2a036e"}
{"@timestamp":"2021-07-26T09:16:03.922+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"723e88907a2a036e","spanId":"723e88907a2a036e"}
{"@timestamp":"2021-07-26T09:16:03.924+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"723e88907a2a036e","spanId":"723e88907a2a036e"}
{"@timestamp":"2021-07-26T09:16:03.924+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"723e88907a2a036e","spanId":"723e88907a2a036e"}
{"@timestamp":"2021-07-26T09:16:03.972+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5c2018d18e03e31d","spanId":"5c2018d18e03e31d"}
{"@timestamp":"2021-07-26T09:16:03.972+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5c2018d18e03e31d","spanId":"5c2018d18e03e31d"}
{"@timestamp":"2021-07-26T09:16:03.973+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5c2018d18e03e31d","spanId":"5c2018d18e03e31d"}
{"@timestamp":"2021-07-26T09:16:03.973+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5c2018d18e03e31d","spanId":"5c2018d18e03e31d"}
{"@timestamp":"2021-07-26T09:16:03.974+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5c2018d18e03e31d","spanId":"5c2018d18e03e31d"}
{"@timestamp":"2021-07-26T09:16:03.974+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"5c2018d18e03e31d","spanId":"5c2018d18e03e31d"}
{"@timestamp":"2021-07-26T09:16:04.022+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"de911bca8f82552a","spanId":"de911bca8f82552a"}
{"@timestamp":"2021-07-26T09:16:04.022+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"de911bca8f82552a","spanId":"de911bca8f82552a"}
{"@timestamp":"2021-07-26T09:16:04.022+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"de911bca8f82552a","spanId":"de911bca8f82552a"}
{"@timestamp":"2021-07-26T09:16:04.022+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"de911bca8f82552a","spanId":"de911bca8f82552a"}
{"@timestamp":"2021-07-26T09:16:04.024+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"de911bca8f82552a","spanId":"de911bca8f82552a"}
{"@timestamp":"2021-07-26T09:16:04.024+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"de911bca8f82552a","spanId":"de911bca8f82552a"}
{"@timestamp":"2021-07-26T09:16:04.073+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f13956b99f144d08","spanId":"f13956b99f144d08"}
{"@timestamp":"2021-07-26T09:16:04.074+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f13956b99f144d08","spanId":"f13956b99f144d08"}
{"@timestamp":"2021-07-26T09:16:04.074+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f13956b99f144d08","spanId":"f13956b99f144d08"}
{"@timestamp":"2021-07-26T09:16:04.074+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f13956b99f144d08","spanId":"f13956b99f144d08"}
{"@timestamp":"2021-07-26T09:16:04.076+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f13956b99f144d08","spanId":"f13956b99f144d08"}
{"@timestamp":"2021-07-26T09:16:04.076+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"f13956b99f144d08","spanId":"f13956b99f144d08"}
{"@timestamp":"2021-07-26T09:16:04.120+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d5fdef1091e6bf3e","spanId":"d5fdef1091e6bf3e"}
{"@timestamp":"2021-07-26T09:16:04.120+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d5fdef1091e6bf3e","spanId":"d5fdef1091e6bf3e"}
{"@timestamp":"2021-07-26T09:16:04.122+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d5fdef1091e6bf3e","spanId":"d5fdef1091e6bf3e"}
{"@timestamp":"2021-07-26T09:16:04.122+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d5fdef1091e6bf3e","spanId":"d5fdef1091e6bf3e"}
{"@timestamp":"2021-07-26T09:16:04.124+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d5fdef1091e6bf3e","spanId":"d5fdef1091e6bf3e"}
{"@timestamp":"2021-07-26T09:16:04.124+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d5fdef1091e6bf3e","spanId":"d5fdef1091e6bf3e"}
{"@timestamp":"2021-07-26T09:16:04.173+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cccd83946c9af459","spanId":"cccd83946c9af459"}
{"@timestamp":"2021-07-26T09:16:04.173+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cccd83946c9af459","spanId":"cccd83946c9af459"}
{"@timestamp":"2021-07-26T09:16:04.174+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cccd83946c9af459","spanId":"cccd83946c9af459"}
{"@timestamp":"2021-07-26T09:16:04.174+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cccd83946c9af459","spanId":"cccd83946c9af459"}
{"@timestamp":"2021-07-26T09:16:04.177+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cccd83946c9af459","spanId":"cccd83946c9af459"}
{"@timestamp":"2021-07-26T09:16:04.178+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cccd83946c9af459","spanId":"cccd83946c9af459"}
{"@timestamp":"2021-07-26T09:16:04.223+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2b2aac34468a8546","spanId":"2b2aac34468a8546"}
{"@timestamp":"2021-07-26T09:16:04.223+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2b2aac34468a8546","spanId":"2b2aac34468a8546"}
{"@timestamp":"2021-07-26T09:16:04.224+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2b2aac34468a8546","spanId":"2b2aac34468a8546"}
{"@timestamp":"2021-07-26T09:16:04.224+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2b2aac34468a8546","spanId":"2b2aac34468a8546"}
{"@timestamp":"2021-07-26T09:16:04.225+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2b2aac34468a8546","spanId":"2b2aac34468a8546"}
{"@timestamp":"2021-07-26T09:16:04.226+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2b2aac34468a8546","spanId":"2b2aac34468a8546"}
{"@timestamp":"2021-07-26T09:16:04.274+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"d9d0175a842ea0d5","spanId":"d9d0175a842ea0d5"}
{"@timestamp":"2021-07-26T09:16:04.274+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"d9d0175a842ea0d5","spanId":"d9d0175a842ea0d5"}
{"@timestamp":"2021-07-26T09:16:04.274+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"d9d0175a842ea0d5","spanId":"d9d0175a842ea0d5"}
{"@timestamp":"2021-07-26T09:16:04.275+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"d9d0175a842ea0d5","spanId":"d9d0175a842ea0d5"}
{"@timestamp":"2021-07-26T09:16:04.277+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"d9d0175a842ea0d5","spanId":"d9d0175a842ea0d5"}
{"@timestamp":"2021-07-26T09:16:04.277+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"d9d0175a842ea0d5","spanId":"d9d0175a842ea0d5"}
{"@timestamp":"2021-07-26T09:16:04.322+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"02c3a5c0b0b17fe4","spanId":"02c3a5c0b0b17fe4"}
{"@timestamp":"2021-07-26T09:16:04.323+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"02c3a5c0b0b17fe4","spanId":"02c3a5c0b0b17fe4"}
{"@timestamp":"2021-07-26T09:16:04.323+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"02c3a5c0b0b17fe4","spanId":"02c3a5c0b0b17fe4"}
{"@timestamp":"2021-07-26T09:16:04.323+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"02c3a5c0b0b17fe4","spanId":"02c3a5c0b0b17fe4"}
{"@timestamp":"2021-07-26T09:16:04.373+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a2faf943ec097a90","spanId":"a2faf943ec097a90"}
{"@timestamp":"2021-07-26T09:16:04.374+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a2faf943ec097a90","spanId":"a2faf943ec097a90"}
{"@timestamp":"2021-07-26T09:16:04.374+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a2faf943ec097a90","spanId":"a2faf943ec097a90"}
{"@timestamp":"2021-07-26T09:16:04.374+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a2faf943ec097a90","spanId":"a2faf943ec097a90"}
{"@timestamp":"2021-07-26T09:16:04.422+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"223ca4f53f710941","spanId":"223ca4f53f710941"}
{"@timestamp":"2021-07-26T09:16:04.422+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"223ca4f53f710941","spanId":"223ca4f53f710941"}
{"@timestamp":"2021-07-26T09:16:04.422+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"223ca4f53f710941","spanId":"223ca4f53f710941"}
{"@timestamp":"2021-07-26T09:16:04.422+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"223ca4f53f710941","spanId":"223ca4f53f710941"}
{"@timestamp":"2021-07-26T09:16:04.472+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"61276e889fb66c4e","spanId":"61276e889fb66c4e"}
{"@timestamp":"2021-07-26T09:16:04.473+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"61276e889fb66c4e","spanId":"61276e889fb66c4e"}
{"@timestamp":"2021-07-26T09:16:04.473+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"61276e889fb66c4e","spanId":"61276e889fb66c4e"}
{"@timestamp":"2021-07-26T09:16:04.473+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"61276e889fb66c4e","spanId":"61276e889fb66c4e"}
{"@timestamp":"2021-07-26T09:16:04.522+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"39d45119aa065032","spanId":"39d45119aa065032"}
{"@timestamp":"2021-07-26T09:16:04.522+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"39d45119aa065032","spanId":"39d45119aa065032"}
{"@timestamp":"2021-07-26T09:16:04.522+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"39d45119aa065032","spanId":"39d45119aa065032"}
{"@timestamp":"2021-07-26T09:16:04.522+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"39d45119aa065032","spanId":"39d45119aa065032"}
{"@timestamp":"2021-07-26T09:16:04.574+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8056ac0a2e4c3d82","spanId":"8056ac0a2e4c3d82"}
{"@timestamp":"2021-07-26T09:16:04.574+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8056ac0a2e4c3d82","spanId":"8056ac0a2e4c3d82"}
{"@timestamp":"2021-07-26T09:16:04.574+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8056ac0a2e4c3d82","spanId":"8056ac0a2e4c3d82"}
{"@timestamp":"2021-07-26T09:16:04.574+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8056ac0a2e4c3d82","spanId":"8056ac0a2e4c3d82"}
{"@timestamp":"2021-07-26T09:16:04.623+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4fa0d90b00d02b01","spanId":"4fa0d90b00d02b01"}
{"@timestamp":"2021-07-26T09:16:04.623+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4fa0d90b00d02b01","spanId":"4fa0d90b00d02b01"}
{"@timestamp":"2021-07-26T09:16:04.623+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4fa0d90b00d02b01","spanId":"4fa0d90b00d02b01"}
{"@timestamp":"2021-07-26T09:16:04.623+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"4fa0d90b00d02b01","spanId":"4fa0d90b00d02b01"}
{"@timestamp":"2021-07-26T09:16:04.674+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3c702c67d583b7aa","spanId":"3c702c67d583b7aa"}
{"@timestamp":"2021-07-26T09:16:04.674+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3c702c67d583b7aa","spanId":"3c702c67d583b7aa"}
{"@timestamp":"2021-07-26T09:16:04.675+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3c702c67d583b7aa","spanId":"3c702c67d583b7aa"}
{"@timestamp":"2021-07-26T09:16:04.675+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3c702c67d583b7aa","spanId":"3c702c67d583b7aa"}
{"@timestamp":"2021-07-26T09:16:04.723+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"ded0d74e82df202a","spanId":"ded0d74e82df202a"}
{"@timestamp":"2021-07-26T09:16:04.725+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"ded0d74e82df202a","spanId":"ded0d74e82df202a"}
{"@timestamp":"2021-07-26T09:16:04.725+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"ded0d74e82df202a","spanId":"ded0d74e82df202a"}
{"@timestamp":"2021-07-26T09:16:04.725+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"ded0d74e82df202a","spanId":"ded0d74e82df202a"}
{"@timestamp":"2021-07-26T09:16:04.775+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1b4430404503b592","spanId":"1b4430404503b592"}
{"@timestamp":"2021-07-26T09:16:04.775+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1b4430404503b592","spanId":"1b4430404503b592"}
{"@timestamp":"2021-07-26T09:16:04.776+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1b4430404503b592","spanId":"1b4430404503b592"}
{"@timestamp":"2021-07-26T09:16:04.776+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@19e945c5","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1b4430404503b592","spanId":"1b4430404503b592"}
{"@timestamp":"2021-07-26T09:16:04.842+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"0f8400229744e442","spanId":"0f8400229744e442"}
{"@timestamp":"2021-07-26T09:16:04.883+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"a2faf943ec097a90","spanId":"a2faf943ec097a90"}
{"@timestamp":"2021-07-26T09:16:04.884+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"a2faf943ec097a90","spanId":"a2faf943ec097a90"}
{"@timestamp":"2021-07-26T09:16:04.885+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"513709b7c4a4a1c0","spanId":"513709b7c4a4a1c0"}
{"@timestamp":"2021-07-26T09:16:04.930+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"223ca4f53f710941","spanId":"223ca4f53f710941"}
{"@timestamp":"2021-07-26T09:16:04.930+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"223ca4f53f710941","spanId":"223ca4f53f710941"}
{"@timestamp":"2021-07-26T09:16:04.931+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"723e88907a2a036e","spanId":"723e88907a2a036e"}
{"@timestamp":"2021-07-26T09:16:04.992+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"61276e889fb66c4e","spanId":"61276e889fb66c4e"}
{"@timestamp":"2021-07-26T09:16:04.994+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"5c2018d18e03e31d","spanId":"5c2018d18e03e31d"}
{"@timestamp":"2021-07-26T09:16:04.994+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"61276e889fb66c4e","spanId":"61276e889fb66c4e"}
{"@timestamp":"2021-07-26T09:16:05.039+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"de911bca8f82552a","spanId":"de911bca8f82552a"}
{"@timestamp":"2021-07-26T09:16:05.040+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"39d45119aa065032","spanId":"39d45119aa065032"}
{"@timestamp":"2021-07-26T09:16:05.040+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"39d45119aa065032","spanId":"39d45119aa065032"}
{"@timestamp":"2021-07-26T09:16:05.083+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"8056ac0a2e4c3d82","spanId":"8056ac0a2e4c3d82"}
{"@timestamp":"2021-07-26T09:16:05.083+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"8056ac0a2e4c3d82","spanId":"8056ac0a2e4c3d82"}
{"@timestamp":"2021-07-26T09:16:05.099+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"f13956b99f144d08","spanId":"f13956b99f144d08"}
{"@timestamp":"2021-07-26T09:16:05.128+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"4fa0d90b00d02b01","spanId":"4fa0d90b00d02b01"}
{"@timestamp":"2021-07-26T09:16:05.128+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"4fa0d90b00d02b01","spanId":"4fa0d90b00d02b01"}
{"@timestamp":"2021-07-26T09:16:05.145+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"d5fdef1091e6bf3e","spanId":"d5fdef1091e6bf3e"}
{"@timestamp":"2021-07-26T09:16:05.189+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"3c702c67d583b7aa","spanId":"3c702c67d583b7aa"}
{"@timestamp":"2021-07-26T09:16:05.190+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"cccd83946c9af459","spanId":"cccd83946c9af459"}
{"@timestamp":"2021-07-26T09:16:05.190+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"3c702c67d583b7aa","spanId":"3c702c67d583b7aa"}
{"@timestamp":"2021-07-26T09:16:05.235+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"ded0d74e82df202a","spanId":"ded0d74e82df202a"}
{"@timestamp":"2021-07-26T09:16:05.235+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"ded0d74e82df202a","spanId":"ded0d74e82df202a"}
{"@timestamp":"2021-07-26T09:16:05.361+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:16:05.362+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:16:05.786+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:16:05.787+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:16:05.908+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"a2faf943ec097a90","spanId":"a2faf943ec097a90"}
{"@timestamp":"2021-07-26T09:16:05.939+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-8","level":"INFO","level_value":20000,"traceId":"223ca4f53f710941","spanId":"223ca4f53f710941"}
{"@timestamp":"2021-07-26T09:16:05.941+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"2b2aac34468a8546","spanId":"2b2aac34468a8546"}
{"@timestamp":"2021-07-26T09:16:06.063+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"39d45119aa065032","spanId":"39d45119aa065032"}
{"@timestamp":"2021-07-26T09:16:06.093+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"traceId":"8056ac0a2e4c3d82","spanId":"8056ac0a2e4c3d82"}
{"@timestamp":"2021-07-26T09:16:06.109+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"d9d0175a842ea0d5","spanId":"d9d0175a842ea0d5"}
{"@timestamp":"2021-07-26T09:16:06.201+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"traceId":"3c702c67d583b7aa","spanId":"3c702c67d583b7aa"}
{"@timestamp":"2021-07-26T09:16:06.247+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"ded0d74e82df202a","spanId":"ded0d74e82df202a"}
{"@timestamp":"2021-07-26T09:16:06.952+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-5","level":"INFO","level_value":20000,"traceId":"61276e889fb66c4e","spanId":"61276e889fb66c4e"}
{"@timestamp":"2021-07-26T09:16:07.119+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$3dc3d73c","thread_name":"reactor-http-nio-4","level":"INFO","level_value":20000,"traceId":"4fa0d90b00d02b01","spanId":"4fa0d90b00d02b01"}
{"@timestamp":"2021-07-26T09:17:28.869+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:28.942+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 6200 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:28.944+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:29.128+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:29.129+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:34.296+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:35.059+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:35.072+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:35.084+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:40.344+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:40.367+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:40.369+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:40.370+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:40.985+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:40.986+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 11853 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:17:43.181+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:17:54.944+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:18:00.017+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:00.142+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:05.079+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:09.654+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:12.860+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:18:13.038+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.176+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.341+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.350+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.427+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.427+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.429+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.430+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.430+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.431+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.431+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.919+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.927+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.932+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.945+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627258693943 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.993+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.994+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627258693994, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:13.999+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:14.006+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:14.063+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:14.065+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:14.149+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:19.744+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:24.218+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:18:24.265+09:00","@version":"1","message":"Started DemoApplication in 62.952 seconds (JVM running for 69.282)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:20:24.921+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:20:24.922+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:20:24.929+09:00","@version":"1","message":"Completed initialization in 7 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:20:25.049+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:25.048+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:25.049+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:25.049+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:25.051+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:25.088+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:25.089+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:25.089+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:25.089+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:25.166+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:25.167+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:25.167+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:25.168+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:25.303+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:25.304+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:25.305+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:25.307+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:25.320+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:25.321+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:25.322+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:25.322+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:25.399+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:25.400+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:25.400+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:25.400+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:25.481+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:25.481+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:25.482+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:25.482+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:25.588+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:25.588+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:25.588+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:25.589+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:25.589+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:25.586+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:25.592+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:25.588+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:25.588+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:25.593+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:25.592+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:25.594+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"d6892c13f62a8697","spanId":"d6892c13f62a8697"}
{"@timestamp":"2021-07-26T09:20:25.594+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"d6892c13f62a8697","spanId":"d6892c13f62a8697"}
{"@timestamp":"2021-07-26T09:20:25.595+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"d6892c13f62a8697","spanId":"d6892c13f62a8697"}
{"@timestamp":"2021-07-26T09:20:25.596+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"d6892c13f62a8697","spanId":"d6892c13f62a8697"}
{"@timestamp":"2021-07-26T09:20:26.071+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"e379f2885232a8f5","spanId":"e379f2885232a8f5"}
{"@timestamp":"2021-07-26T09:20:26.073+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"e379f2885232a8f5","spanId":"e379f2885232a8f5"}
{"@timestamp":"2021-07-26T09:20:26.073+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"e379f2885232a8f5","spanId":"e379f2885232a8f5"}
{"@timestamp":"2021-07-26T09:20:26.074+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"e379f2885232a8f5","spanId":"e379f2885232a8f5"}
{"@timestamp":"2021-07-26T09:20:26.078+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"64af171ffd204e2f","spanId":"64af171ffd204e2f"}
{"@timestamp":"2021-07-26T09:20:26.080+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"64af171ffd204e2f","spanId":"64af171ffd204e2f"}
{"@timestamp":"2021-07-26T09:20:26.080+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"64af171ffd204e2f","spanId":"64af171ffd204e2f"}
{"@timestamp":"2021-07-26T09:20:26.080+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"64af171ffd204e2f","spanId":"64af171ffd204e2f"}
{"@timestamp":"2021-07-26T09:20:26.696+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-11","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:26.699+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-11","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:27.099+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-13","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:27.100+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-13","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:27.113+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-12","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:27.114+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-12","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:28.297+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:20:28.297+09:00","@version":"1","message":"Dropped 2 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:32.742+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:32.743+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:32.815+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:32.816+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:32.847+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:32.847+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:32.923+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:32.923+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:33.000+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:33.000+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:40.248+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:40.248+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:40.249+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:40.249+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:40.248+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:40.249+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:40.249+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"b84d8a7a9893a3ef","spanId":"b84d8a7a9893a3ef"}
{"@timestamp":"2021-07-26T09:20:40.249+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:40.251+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:40.251+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:40.256+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:40.256+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"8b2024d918152466","spanId":"8b2024d918152466"}
{"@timestamp":"2021-07-26T09:20:40.331+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:40.331+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"5d47f85d66602514","spanId":"5d47f85d66602514"}
{"@timestamp":"2021-07-26T09:20:40.358+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:40.363+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"e03d05be3147a177","spanId":"e03d05be3147a177"}
{"@timestamp":"2021-07-26T09:20:40.433+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:40.433+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"ac46a583250ac92b","spanId":"ac46a583250ac92b"}
{"@timestamp":"2021-07-26T09:20:40.512+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:40.513+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"a321677b2a456346","spanId":"a321677b2a456346"}
{"@timestamp":"2021-07-26T09:20:45.447+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-28","level":"INFO","level_value":20000,"traceId":"7df334d46583a4f3","spanId":"7df334d46583a4f3"}
{"@timestamp":"2021-07-26T09:20:45.447+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"14ad8a5d27c53028","spanId":"14ad8a5d27c53028"}
{"@timestamp":"2021-07-26T09:20:45.447+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-29","level":"INFO","level_value":20000,"traceId":"0180bad1e42dc771","spanId":"0180bad1e42dc771"}
{"@timestamp":"2021-07-26T09:20:45.456+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"7df7d2362c56cdea","spanId":"7df7d2362c56cdea"}
{"@timestamp":"2021-07-26T09:20:47.255+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.256+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.272+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.273+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.348+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.349+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.367+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.369+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.437+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.439+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.532+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:20:47.533+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:22:56.094+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"f6a8bd9d57b8f0f5","spanId":"f6a8bd9d57b8f0f5"}
{"@timestamp":"2021-07-26T09:22:56.095+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"f6a8bd9d57b8f0f5","spanId":"f6a8bd9d57b8f0f5"}
{"@timestamp":"2021-07-26T09:22:56.096+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"f6a8bd9d57b8f0f5","spanId":"f6a8bd9d57b8f0f5"}
{"@timestamp":"2021-07-26T09:22:56.096+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"f6a8bd9d57b8f0f5","spanId":"f6a8bd9d57b8f0f5"}
{"@timestamp":"2021-07-26T09:22:56.101+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"f6a8bd9d57b8f0f5","spanId":"f6a8bd9d57b8f0f5"}
{"@timestamp":"2021-07-26T09:22:56.102+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"f6a8bd9d57b8f0f5","spanId":"f6a8bd9d57b8f0f5"}
{"@timestamp":"2021-07-26T09:22:56.168+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3dad9705663688ff","spanId":"3dad9705663688ff"}
{"@timestamp":"2021-07-26T09:22:56.169+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3dad9705663688ff","spanId":"3dad9705663688ff"}
{"@timestamp":"2021-07-26T09:22:56.169+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3dad9705663688ff","spanId":"3dad9705663688ff"}
{"@timestamp":"2021-07-26T09:22:56.169+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3dad9705663688ff","spanId":"3dad9705663688ff"}
{"@timestamp":"2021-07-26T09:22:56.172+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3dad9705663688ff","spanId":"3dad9705663688ff"}
{"@timestamp":"2021-07-26T09:22:56.173+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3dad9705663688ff","spanId":"3dad9705663688ff"}
{"@timestamp":"2021-07-26T09:22:56.249+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"4959317503241904","spanId":"4959317503241904"}
{"@timestamp":"2021-07-26T09:22:56.250+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"4959317503241904","spanId":"4959317503241904"}
{"@timestamp":"2021-07-26T09:22:56.250+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"4959317503241904","spanId":"4959317503241904"}
{"@timestamp":"2021-07-26T09:22:56.250+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"4959317503241904","spanId":"4959317503241904"}
{"@timestamp":"2021-07-26T09:22:56.253+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"4959317503241904","spanId":"4959317503241904"}
{"@timestamp":"2021-07-26T09:22:56.253+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"4959317503241904","spanId":"4959317503241904"}
{"@timestamp":"2021-07-26T09:22:56.323+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"33983c7fb6d7fc38","spanId":"33983c7fb6d7fc38"}
{"@timestamp":"2021-07-26T09:22:56.323+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"33983c7fb6d7fc38","spanId":"33983c7fb6d7fc38"}
{"@timestamp":"2021-07-26T09:22:56.324+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"33983c7fb6d7fc38","spanId":"33983c7fb6d7fc38"}
{"@timestamp":"2021-07-26T09:22:56.325+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"33983c7fb6d7fc38","spanId":"33983c7fb6d7fc38"}
{"@timestamp":"2021-07-26T09:22:56.327+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"33983c7fb6d7fc38","spanId":"33983c7fb6d7fc38"}
{"@timestamp":"2021-07-26T09:22:56.328+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"33983c7fb6d7fc38","spanId":"33983c7fb6d7fc38"}
{"@timestamp":"2021-07-26T09:22:56.400+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5e3fb33ef418de75","spanId":"5e3fb33ef418de75"}
{"@timestamp":"2021-07-26T09:22:56.400+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5e3fb33ef418de75","spanId":"5e3fb33ef418de75"}
{"@timestamp":"2021-07-26T09:22:56.400+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5e3fb33ef418de75","spanId":"5e3fb33ef418de75"}
{"@timestamp":"2021-07-26T09:22:56.401+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5e3fb33ef418de75","spanId":"5e3fb33ef418de75"}
{"@timestamp":"2021-07-26T09:22:56.403+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5e3fb33ef418de75","spanId":"5e3fb33ef418de75"}
{"@timestamp":"2021-07-26T09:22:56.404+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5e3fb33ef418de75","spanId":"5e3fb33ef418de75"}
{"@timestamp":"2021-07-26T09:22:56.475+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ec7067a2e922c77","spanId":"8ec7067a2e922c77"}
{"@timestamp":"2021-07-26T09:22:56.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ec7067a2e922c77","spanId":"8ec7067a2e922c77"}
{"@timestamp":"2021-07-26T09:22:56.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ec7067a2e922c77","spanId":"8ec7067a2e922c77"}
{"@timestamp":"2021-07-26T09:22:56.478+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ec7067a2e922c77","spanId":"8ec7067a2e922c77"}
{"@timestamp":"2021-07-26T09:22:56.481+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ec7067a2e922c77","spanId":"8ec7067a2e922c77"}
{"@timestamp":"2021-07-26T09:22:56.482+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ec7067a2e922c77","spanId":"8ec7067a2e922c77"}
{"@timestamp":"2021-07-26T09:22:56.552+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d204fb7b40e7099e","spanId":"d204fb7b40e7099e"}
{"@timestamp":"2021-07-26T09:22:56.552+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d204fb7b40e7099e","spanId":"d204fb7b40e7099e"}
{"@timestamp":"2021-07-26T09:22:56.554+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d204fb7b40e7099e","spanId":"d204fb7b40e7099e"}
{"@timestamp":"2021-07-26T09:22:56.554+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d204fb7b40e7099e","spanId":"d204fb7b40e7099e"}
{"@timestamp":"2021-07-26T09:22:56.557+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d204fb7b40e7099e","spanId":"d204fb7b40e7099e"}
{"@timestamp":"2021-07-26T09:22:56.558+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d204fb7b40e7099e","spanId":"d204fb7b40e7099e"}
{"@timestamp":"2021-07-26T09:22:56.631+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a153883ab9a32b7b","spanId":"a153883ab9a32b7b"}
{"@timestamp":"2021-07-26T09:22:56.631+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a153883ab9a32b7b","spanId":"a153883ab9a32b7b"}
{"@timestamp":"2021-07-26T09:22:56.632+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a153883ab9a32b7b","spanId":"a153883ab9a32b7b"}
{"@timestamp":"2021-07-26T09:22:56.632+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a153883ab9a32b7b","spanId":"a153883ab9a32b7b"}
{"@timestamp":"2021-07-26T09:22:56.633+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a153883ab9a32b7b","spanId":"a153883ab9a32b7b"}
{"@timestamp":"2021-07-26T09:22:56.634+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a153883ab9a32b7b","spanId":"a153883ab9a32b7b"}
{"@timestamp":"2021-07-26T09:22:56.706+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6972a08e01a56013","spanId":"6972a08e01a56013"}
{"@timestamp":"2021-07-26T09:22:56.707+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6972a08e01a56013","spanId":"6972a08e01a56013"}
{"@timestamp":"2021-07-26T09:22:56.708+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6972a08e01a56013","spanId":"6972a08e01a56013"}
{"@timestamp":"2021-07-26T09:22:56.708+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6972a08e01a56013","spanId":"6972a08e01a56013"}
{"@timestamp":"2021-07-26T09:22:56.712+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6972a08e01a56013","spanId":"6972a08e01a56013"}
{"@timestamp":"2021-07-26T09:22:56.712+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6972a08e01a56013","spanId":"6972a08e01a56013"}
{"@timestamp":"2021-07-26T09:22:56.784+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8bb6508e00d65680","spanId":"8bb6508e00d65680"}
{"@timestamp":"2021-07-26T09:22:56.785+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8bb6508e00d65680","spanId":"8bb6508e00d65680"}
{"@timestamp":"2021-07-26T09:22:56.785+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8bb6508e00d65680","spanId":"8bb6508e00d65680"}
{"@timestamp":"2021-07-26T09:22:56.785+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8bb6508e00d65680","spanId":"8bb6508e00d65680"}
{"@timestamp":"2021-07-26T09:22:56.789+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8bb6508e00d65680","spanId":"8bb6508e00d65680"}
{"@timestamp":"2021-07-26T09:22:56.789+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8bb6508e00d65680","spanId":"8bb6508e00d65680"}
{"@timestamp":"2021-07-26T09:22:56.883+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"e14e2f8b051b6f18","spanId":"e14e2f8b051b6f18"}
{"@timestamp":"2021-07-26T09:22:56.884+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"e14e2f8b051b6f18","spanId":"e14e2f8b051b6f18"}
{"@timestamp":"2021-07-26T09:22:56.884+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"e14e2f8b051b6f18","spanId":"e14e2f8b051b6f18"}
{"@timestamp":"2021-07-26T09:22:56.885+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"e14e2f8b051b6f18","spanId":"e14e2f8b051b6f18"}
{"@timestamp":"2021-07-26T09:22:56.941+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"219537344af29700","spanId":"219537344af29700"}
{"@timestamp":"2021-07-26T09:22:56.942+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"219537344af29700","spanId":"219537344af29700"}
{"@timestamp":"2021-07-26T09:22:56.943+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"219537344af29700","spanId":"219537344af29700"}
{"@timestamp":"2021-07-26T09:22:56.944+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"219537344af29700","spanId":"219537344af29700"}
{"@timestamp":"2021-07-26T09:22:57.018+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"93b3349d2960414d","spanId":"93b3349d2960414d"}
{"@timestamp":"2021-07-26T09:22:57.019+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"93b3349d2960414d","spanId":"93b3349d2960414d"}
{"@timestamp":"2021-07-26T09:22:57.019+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"93b3349d2960414d","spanId":"93b3349d2960414d"}
{"@timestamp":"2021-07-26T09:22:57.020+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"93b3349d2960414d","spanId":"93b3349d2960414d"}
{"@timestamp":"2021-07-26T09:22:57.905+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-12","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:22:57.906+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-12","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:22:59.645+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-26","level":"INFO","level_value":20000,"traceId":"5e3fb33ef418de75","spanId":"5e3fb33ef418de75"}
{"@timestamp":"2021-07-26T09:22:59.646+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-13","level":"INFO","level_value":20000,"traceId":"3dad9705663688ff","spanId":"3dad9705663688ff"}
{"@timestamp":"2021-07-26T09:22:59.646+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-25","level":"INFO","level_value":20000,"traceId":"33983c7fb6d7fc38","spanId":"33983c7fb6d7fc38"}
{"@timestamp":"2021-07-26T09:22:59.646+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"f6a8bd9d57b8f0f5","spanId":"f6a8bd9d57b8f0f5"}
{"@timestamp":"2021-07-26T09:22:59.646+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-27","level":"INFO","level_value":20000,"traceId":"8ec7067a2e922c77","spanId":"8ec7067a2e922c77"}
{"@timestamp":"2021-07-26T09:22:59.647+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"4959317503241904","spanId":"4959317503241904"}
{"@timestamp":"2021-07-26T09:22:59.646+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-28","level":"INFO","level_value":20000,"traceId":"d204fb7b40e7099e","spanId":"d204fb7b40e7099e"}
{"@timestamp":"2021-07-26T09:22:59.651+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-29","level":"INFO","level_value":20000,"traceId":"a153883ab9a32b7b","spanId":"a153883ab9a32b7b"}
{"@timestamp":"2021-07-26T09:23:02.692+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"6972a08e01a56013","spanId":"6972a08e01a56013"}
{"@timestamp":"2021-07-26T09:23:02.692+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-13","level":"INFO","level_value":20000,"traceId":"8bb6508e00d65680","spanId":"8bb6508e00d65680"}
{"@timestamp":"2021-07-26T09:23:10.405+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"564e684692a555e4","spanId":"564e684692a555e4"}
{"@timestamp":"2021-07-26T09:23:10.405+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"564e684692a555e4","spanId":"564e684692a555e4"}
{"@timestamp":"2021-07-26T09:23:10.406+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"564e684692a555e4","spanId":"564e684692a555e4"}
{"@timestamp":"2021-07-26T09:23:10.406+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"564e684692a555e4","spanId":"564e684692a555e4"}
{"@timestamp":"2021-07-26T09:23:10.408+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"564e684692a555e4","spanId":"564e684692a555e4"}
{"@timestamp":"2021-07-26T09:23:10.409+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"564e684692a555e4","spanId":"564e684692a555e4"}
{"@timestamp":"2021-07-26T09:23:10.482+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ce2666c039a6a226","spanId":"ce2666c039a6a226"}
{"@timestamp":"2021-07-26T09:23:10.482+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ce2666c039a6a226","spanId":"ce2666c039a6a226"}
{"@timestamp":"2021-07-26T09:23:10.483+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ce2666c039a6a226","spanId":"ce2666c039a6a226"}
{"@timestamp":"2021-07-26T09:23:10.483+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ce2666c039a6a226","spanId":"ce2666c039a6a226"}
{"@timestamp":"2021-07-26T09:23:10.485+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ce2666c039a6a226","spanId":"ce2666c039a6a226"}
{"@timestamp":"2021-07-26T09:23:10.486+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ce2666c039a6a226","spanId":"ce2666c039a6a226"}
{"@timestamp":"2021-07-26T09:23:10.561+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4f04745cb4cf4dc","spanId":"d4f04745cb4cf4dc"}
{"@timestamp":"2021-07-26T09:23:10.562+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4f04745cb4cf4dc","spanId":"d4f04745cb4cf4dc"}
{"@timestamp":"2021-07-26T09:23:10.563+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4f04745cb4cf4dc","spanId":"d4f04745cb4cf4dc"}
{"@timestamp":"2021-07-26T09:23:10.563+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4f04745cb4cf4dc","spanId":"d4f04745cb4cf4dc"}
{"@timestamp":"2021-07-26T09:23:10.565+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4f04745cb4cf4dc","spanId":"d4f04745cb4cf4dc"}
{"@timestamp":"2021-07-26T09:23:10.565+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d4f04745cb4cf4dc","spanId":"d4f04745cb4cf4dc"}
{"@timestamp":"2021-07-26T09:23:10.636+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c40277d36a68c6d2","spanId":"c40277d36a68c6d2"}
{"@timestamp":"2021-07-26T09:23:10.637+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c40277d36a68c6d2","spanId":"c40277d36a68c6d2"}
{"@timestamp":"2021-07-26T09:23:10.637+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c40277d36a68c6d2","spanId":"c40277d36a68c6d2"}
{"@timestamp":"2021-07-26T09:23:10.637+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c40277d36a68c6d2","spanId":"c40277d36a68c6d2"}
{"@timestamp":"2021-07-26T09:23:10.641+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c40277d36a68c6d2","spanId":"c40277d36a68c6d2"}
{"@timestamp":"2021-07-26T09:23:10.641+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c40277d36a68c6d2","spanId":"c40277d36a68c6d2"}
{"@timestamp":"2021-07-26T09:23:10.716+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0783e1dbd5773c4f","spanId":"0783e1dbd5773c4f"}
{"@timestamp":"2021-07-26T09:23:10.716+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0783e1dbd5773c4f","spanId":"0783e1dbd5773c4f"}
{"@timestamp":"2021-07-26T09:23:10.716+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0783e1dbd5773c4f","spanId":"0783e1dbd5773c4f"}
{"@timestamp":"2021-07-26T09:23:10.717+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0783e1dbd5773c4f","spanId":"0783e1dbd5773c4f"}
{"@timestamp":"2021-07-26T09:23:10.719+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0783e1dbd5773c4f","spanId":"0783e1dbd5773c4f"}
{"@timestamp":"2021-07-26T09:23:10.719+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"0783e1dbd5773c4f","spanId":"0783e1dbd5773c4f"}
{"@timestamp":"2021-07-26T09:23:10.793+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"21e5ba487aefeadc","spanId":"21e5ba487aefeadc"}
{"@timestamp":"2021-07-26T09:23:10.794+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"21e5ba487aefeadc","spanId":"21e5ba487aefeadc"}
{"@timestamp":"2021-07-26T09:23:10.795+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"21e5ba487aefeadc","spanId":"21e5ba487aefeadc"}
{"@timestamp":"2021-07-26T09:23:10.795+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"21e5ba487aefeadc","spanId":"21e5ba487aefeadc"}
{"@timestamp":"2021-07-26T09:23:10.798+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"21e5ba487aefeadc","spanId":"21e5ba487aefeadc"}
{"@timestamp":"2021-07-26T09:23:10.798+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"21e5ba487aefeadc","spanId":"21e5ba487aefeadc"}
{"@timestamp":"2021-07-26T09:23:10.870+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"45364e67f5622dcc","spanId":"45364e67f5622dcc"}
{"@timestamp":"2021-07-26T09:23:10.870+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"45364e67f5622dcc","spanId":"45364e67f5622dcc"}
{"@timestamp":"2021-07-26T09:23:10.871+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"45364e67f5622dcc","spanId":"45364e67f5622dcc"}
{"@timestamp":"2021-07-26T09:23:10.871+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"45364e67f5622dcc","spanId":"45364e67f5622dcc"}
{"@timestamp":"2021-07-26T09:23:10.872+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"45364e67f5622dcc","spanId":"45364e67f5622dcc"}
{"@timestamp":"2021-07-26T09:23:10.872+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"45364e67f5622dcc","spanId":"45364e67f5622dcc"}
{"@timestamp":"2021-07-26T09:23:10.946+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"502543597462c76d","spanId":"502543597462c76d"}
{"@timestamp":"2021-07-26T09:23:10.947+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"502543597462c76d","spanId":"502543597462c76d"}
{"@timestamp":"2021-07-26T09:23:10.947+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"502543597462c76d","spanId":"502543597462c76d"}
{"@timestamp":"2021-07-26T09:23:10.948+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"502543597462c76d","spanId":"502543597462c76d"}
{"@timestamp":"2021-07-26T09:23:10.950+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"502543597462c76d","spanId":"502543597462c76d"}
{"@timestamp":"2021-07-26T09:23:10.951+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"502543597462c76d","spanId":"502543597462c76d"}
{"@timestamp":"2021-07-26T09:23:11.023+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"74ffe0e85d2d67b6","spanId":"74ffe0e85d2d67b6"}
{"@timestamp":"2021-07-26T09:23:11.023+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"74ffe0e85d2d67b6","spanId":"74ffe0e85d2d67b6"}
{"@timestamp":"2021-07-26T09:23:11.025+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"74ffe0e85d2d67b6","spanId":"74ffe0e85d2d67b6"}
{"@timestamp":"2021-07-26T09:23:11.025+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"74ffe0e85d2d67b6","spanId":"74ffe0e85d2d67b6"}
{"@timestamp":"2021-07-26T09:23:11.030+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"74ffe0e85d2d67b6","spanId":"74ffe0e85d2d67b6"}
{"@timestamp":"2021-07-26T09:23:11.030+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"74ffe0e85d2d67b6","spanId":"74ffe0e85d2d67b6"}
{"@timestamp":"2021-07-26T09:23:11.099+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"d7f9378f7e904149","spanId":"d7f9378f7e904149"}
{"@timestamp":"2021-07-26T09:23:11.100+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"d7f9378f7e904149","spanId":"d7f9378f7e904149"}
{"@timestamp":"2021-07-26T09:23:11.100+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"d7f9378f7e904149","spanId":"d7f9378f7e904149"}
{"@timestamp":"2021-07-26T09:23:11.100+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"d7f9378f7e904149","spanId":"d7f9378f7e904149"}
{"@timestamp":"2021-07-26T09:23:11.104+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"d7f9378f7e904149","spanId":"d7f9378f7e904149"}
{"@timestamp":"2021-07-26T09:23:11.104+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"d7f9378f7e904149","spanId":"d7f9378f7e904149"}
{"@timestamp":"2021-07-26T09:23:11.178+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"38412e0e1f045bf1","spanId":"38412e0e1f045bf1"}
{"@timestamp":"2021-07-26T09:23:11.178+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"38412e0e1f045bf1","spanId":"38412e0e1f045bf1"}
{"@timestamp":"2021-07-26T09:23:11.178+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"38412e0e1f045bf1","spanId":"38412e0e1f045bf1"}
{"@timestamp":"2021-07-26T09:23:11.179+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"38412e0e1f045bf1","spanId":"38412e0e1f045bf1"}
{"@timestamp":"2021-07-26T09:23:11.254+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"213622c14ead3725","spanId":"213622c14ead3725"}
{"@timestamp":"2021-07-26T09:23:11.254+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"213622c14ead3725","spanId":"213622c14ead3725"}
{"@timestamp":"2021-07-26T09:23:11.255+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"213622c14ead3725","spanId":"213622c14ead3725"}
{"@timestamp":"2021-07-26T09:23:11.255+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"213622c14ead3725","spanId":"213622c14ead3725"}
{"@timestamp":"2021-07-26T09:23:11.330+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0fd24eb399df0ae7","spanId":"0fd24eb399df0ae7"}
{"@timestamp":"2021-07-26T09:23:11.330+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0fd24eb399df0ae7","spanId":"0fd24eb399df0ae7"}
{"@timestamp":"2021-07-26T09:23:11.331+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0fd24eb399df0ae7","spanId":"0fd24eb399df0ae7"}
{"@timestamp":"2021-07-26T09:23:11.331+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0fd24eb399df0ae7","spanId":"0fd24eb399df0ae7"}
{"@timestamp":"2021-07-26T09:23:12.255+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:12.256+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:12.286+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:12.287+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:12.364+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:12.366+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:13.428+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-13","level":"INFO","level_value":20000,"traceId":"564e684692a555e4","spanId":"564e684692a555e4"}
{"@timestamp":"2021-07-26T09:23:13.453+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.505+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-26","level":"INFO","level_value":20000,"traceId":"ce2666c039a6a226","spanId":"ce2666c039a6a226"}
{"@timestamp":"2021-07-26T09:23:13.579+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-28","level":"INFO","level_value":20000,"traceId":"d4f04745cb4cf4dc","spanId":"d4f04745cb4cf4dc"}
{"@timestamp":"2021-07-26T09:23:13.657+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-25","level":"INFO","level_value":20000,"traceId":"c40277d36a68c6d2","spanId":"c40277d36a68c6d2"}
{"@timestamp":"2021-07-26T09:23:13.733+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-27","level":"INFO","level_value":20000,"traceId":"0783e1dbd5773c4f","spanId":"0783e1dbd5773c4f"}
{"@timestamp":"2021-07-26T09:23:13.809+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"21e5ba487aefeadc","spanId":"21e5ba487aefeadc"}
{"@timestamp":"2021-07-26T09:23:13.886+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"45364e67f5622dcc","spanId":"45364e67f5622dcc"}
{"@timestamp":"2021-07-26T09:23:13.929+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.929+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.931+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.931+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.933+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.934+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.935+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.950+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:23:13.974+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-29","level":"INFO","level_value":20000,"traceId":"502543597462c76d","spanId":"502543597462c76d"}
{"@timestamp":"2021-07-26T09:23:16.451+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-13","level":"INFO","level_value":20000,"traceId":"74ffe0e85d2d67b6","spanId":"74ffe0e85d2d67b6"}
{"@timestamp":"2021-07-26T09:23:16.835+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"d7f9378f7e904149","spanId":"d7f9378f7e904149"}
{"@timestamp":"2021-07-26T09:23:21.091+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0680cf18111dec9","spanId":"e0680cf18111dec9"}
{"@timestamp":"2021-07-26T09:23:21.092+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0680cf18111dec9","spanId":"e0680cf18111dec9"}
{"@timestamp":"2021-07-26T09:23:21.092+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0680cf18111dec9","spanId":"e0680cf18111dec9"}
{"@timestamp":"2021-07-26T09:23:21.092+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0680cf18111dec9","spanId":"e0680cf18111dec9"}
{"@timestamp":"2021-07-26T09:23:21.093+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0680cf18111dec9","spanId":"e0680cf18111dec9"}
{"@timestamp":"2021-07-26T09:23:21.094+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0680cf18111dec9","spanId":"e0680cf18111dec9"}
{"@timestamp":"2021-07-26T09:23:21.170+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"93dad4575b5ba829","spanId":"93dad4575b5ba829"}
{"@timestamp":"2021-07-26T09:23:21.170+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"93dad4575b5ba829","spanId":"93dad4575b5ba829"}
{"@timestamp":"2021-07-26T09:23:21.170+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"93dad4575b5ba829","spanId":"93dad4575b5ba829"}
{"@timestamp":"2021-07-26T09:23:21.170+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"93dad4575b5ba829","spanId":"93dad4575b5ba829"}
{"@timestamp":"2021-07-26T09:23:21.171+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"93dad4575b5ba829","spanId":"93dad4575b5ba829"}
{"@timestamp":"2021-07-26T09:23:21.171+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"93dad4575b5ba829","spanId":"93dad4575b5ba829"}
{"@timestamp":"2021-07-26T09:23:21.248+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"3ecde6de5d109db3","spanId":"3ecde6de5d109db3"}
{"@timestamp":"2021-07-26T09:23:21.249+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"3ecde6de5d109db3","spanId":"3ecde6de5d109db3"}
{"@timestamp":"2021-07-26T09:23:21.249+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"3ecde6de5d109db3","spanId":"3ecde6de5d109db3"}
{"@timestamp":"2021-07-26T09:23:21.249+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"3ecde6de5d109db3","spanId":"3ecde6de5d109db3"}
{"@timestamp":"2021-07-26T09:23:21.252+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"3ecde6de5d109db3","spanId":"3ecde6de5d109db3"}
{"@timestamp":"2021-07-26T09:23:21.252+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"3ecde6de5d109db3","spanId":"3ecde6de5d109db3"}
{"@timestamp":"2021-07-26T09:23:21.323+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"06c1a0e7b49d549c","spanId":"06c1a0e7b49d549c"}
{"@timestamp":"2021-07-26T09:23:21.323+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"06c1a0e7b49d549c","spanId":"06c1a0e7b49d549c"}
{"@timestamp":"2021-07-26T09:23:21.323+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"06c1a0e7b49d549c","spanId":"06c1a0e7b49d549c"}
{"@timestamp":"2021-07-26T09:23:21.323+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"06c1a0e7b49d549c","spanId":"06c1a0e7b49d549c"}
{"@timestamp":"2021-07-26T09:23:21.324+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"06c1a0e7b49d549c","spanId":"06c1a0e7b49d549c"}
{"@timestamp":"2021-07-26T09:23:21.324+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-12","level":"INFO","level_value":20000,"traceId":"06c1a0e7b49d549c","spanId":"06c1a0e7b49d549c"}
{"@timestamp":"2021-07-26T09:23:21.401+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a98ad7a4985efeda","spanId":"a98ad7a4985efeda"}
{"@timestamp":"2021-07-26T09:23:21.401+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a98ad7a4985efeda","spanId":"a98ad7a4985efeda"}
{"@timestamp":"2021-07-26T09:23:21.401+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a98ad7a4985efeda","spanId":"a98ad7a4985efeda"}
{"@timestamp":"2021-07-26T09:23:21.401+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a98ad7a4985efeda","spanId":"a98ad7a4985efeda"}
{"@timestamp":"2021-07-26T09:23:21.402+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a98ad7a4985efeda","spanId":"a98ad7a4985efeda"}
{"@timestamp":"2021-07-26T09:23:21.402+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a98ad7a4985efeda","spanId":"a98ad7a4985efeda"}
{"@timestamp":"2021-07-26T09:23:21.478+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1e0f6f84da3c6165","spanId":"1e0f6f84da3c6165"}
{"@timestamp":"2021-07-26T09:23:21.478+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1e0f6f84da3c6165","spanId":"1e0f6f84da3c6165"}
{"@timestamp":"2021-07-26T09:23:21.478+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1e0f6f84da3c6165","spanId":"1e0f6f84da3c6165"}
{"@timestamp":"2021-07-26T09:23:21.478+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1e0f6f84da3c6165","spanId":"1e0f6f84da3c6165"}
{"@timestamp":"2021-07-26T09:23:21.480+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1e0f6f84da3c6165","spanId":"1e0f6f84da3c6165"}
{"@timestamp":"2021-07-26T09:23:21.480+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1e0f6f84da3c6165","spanId":"1e0f6f84da3c6165"}
{"@timestamp":"2021-07-26T09:23:21.553+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c660b6b6b5122e0f","spanId":"c660b6b6b5122e0f"}
{"@timestamp":"2021-07-26T09:23:21.553+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c660b6b6b5122e0f","spanId":"c660b6b6b5122e0f"}
{"@timestamp":"2021-07-26T09:23:21.553+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c660b6b6b5122e0f","spanId":"c660b6b6b5122e0f"}
{"@timestamp":"2021-07-26T09:23:21.553+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c660b6b6b5122e0f","spanId":"c660b6b6b5122e0f"}
{"@timestamp":"2021-07-26T09:23:21.555+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c660b6b6b5122e0f","spanId":"c660b6b6b5122e0f"}
{"@timestamp":"2021-07-26T09:23:21.555+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c660b6b6b5122e0f","spanId":"c660b6b6b5122e0f"}
{"@timestamp":"2021-07-26T09:23:21.632+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"34ca50ee2768c43b","spanId":"34ca50ee2768c43b"}
{"@timestamp":"2021-07-26T09:23:21.632+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"34ca50ee2768c43b","spanId":"34ca50ee2768c43b"}
{"@timestamp":"2021-07-26T09:23:21.633+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"34ca50ee2768c43b","spanId":"34ca50ee2768c43b"}
{"@timestamp":"2021-07-26T09:23:21.633+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"34ca50ee2768c43b","spanId":"34ca50ee2768c43b"}
{"@timestamp":"2021-07-26T09:23:21.634+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"34ca50ee2768c43b","spanId":"34ca50ee2768c43b"}
{"@timestamp":"2021-07-26T09:23:21.634+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"34ca50ee2768c43b","spanId":"34ca50ee2768c43b"}
{"@timestamp":"2021-07-26T09:23:21.708+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"168c04f4a041b0b9","spanId":"168c04f4a041b0b9"}
{"@timestamp":"2021-07-26T09:23:21.709+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"168c04f4a041b0b9","spanId":"168c04f4a041b0b9"}
{"@timestamp":"2021-07-26T09:23:21.709+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"168c04f4a041b0b9","spanId":"168c04f4a041b0b9"}
{"@timestamp":"2021-07-26T09:23:21.709+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"168c04f4a041b0b9","spanId":"168c04f4a041b0b9"}
{"@timestamp":"2021-07-26T09:23:21.711+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"168c04f4a041b0b9","spanId":"168c04f4a041b0b9"}
{"@timestamp":"2021-07-26T09:23:21.711+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"168c04f4a041b0b9","spanId":"168c04f4a041b0b9"}
{"@timestamp":"2021-07-26T09:23:21.784+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f86edb36584af5de","spanId":"f86edb36584af5de"}
{"@timestamp":"2021-07-26T09:23:21.784+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f86edb36584af5de","spanId":"f86edb36584af5de"}
{"@timestamp":"2021-07-26T09:23:21.784+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f86edb36584af5de","spanId":"f86edb36584af5de"}
{"@timestamp":"2021-07-26T09:23:21.784+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f86edb36584af5de","spanId":"f86edb36584af5de"}
{"@timestamp":"2021-07-26T09:23:21.785+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f86edb36584af5de","spanId":"f86edb36584af5de"}
{"@timestamp":"2021-07-26T09:23:21.785+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f86edb36584af5de","spanId":"f86edb36584af5de"}
{"@timestamp":"2021-07-26T09:23:21.864+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c9b7734eed4ffe25","spanId":"c9b7734eed4ffe25"}
{"@timestamp":"2021-07-26T09:23:21.864+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c9b7734eed4ffe25","spanId":"c9b7734eed4ffe25"}
{"@timestamp":"2021-07-26T09:23:21.865+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c9b7734eed4ffe25","spanId":"c9b7734eed4ffe25"}
{"@timestamp":"2021-07-26T09:23:21.865+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"c9b7734eed4ffe25","spanId":"c9b7734eed4ffe25"}
{"@timestamp":"2021-07-26T09:23:21.939+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"2b7f654c4cb5fa93","spanId":"2b7f654c4cb5fa93"}
{"@timestamp":"2021-07-26T09:23:21.939+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"2b7f654c4cb5fa93","spanId":"2b7f654c4cb5fa93"}
{"@timestamp":"2021-07-26T09:23:21.939+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"2b7f654c4cb5fa93","spanId":"2b7f654c4cb5fa93"}
{"@timestamp":"2021-07-26T09:23:21.939+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-13","level":"INFO","level_value":20000,"traceId":"2b7f654c4cb5fa93","spanId":"2b7f654c4cb5fa93"}
{"@timestamp":"2021-07-26T09:23:22.015+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"02952bd211f4daf3","spanId":"02952bd211f4daf3"}
{"@timestamp":"2021-07-26T09:23:22.016+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"02952bd211f4daf3","spanId":"02952bd211f4daf3"}
{"@timestamp":"2021-07-26T09:23:22.016+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"02952bd211f4daf3","spanId":"02952bd211f4daf3"}
{"@timestamp":"2021-07-26T09:23:22.016+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-11","level":"INFO","level_value":20000,"traceId":"02952bd211f4daf3","spanId":"02952bd211f4daf3"}
{"@timestamp":"2021-07-26T09:23:22.879+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-12","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:22.879+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-12","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:22.954+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:22.954+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:23.031+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:23.032+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.bulkhead.BulkheadFullException: Bulkhead 'nhCircuitBreaker' is full and does not permit further calls\r\n\tat io.github.resilience4j.bulkhead.BulkheadFullException.createBulkheadFullException(BulkheadFullException.java:49)\r\n\tat io.github.resilience4j.reactor.bulkhead.operator.MonoBulkhead.subscribe(MonoBulkhead.java:39)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.resubscribe(FluxRetryWhen.java:215)\r\n\tat reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onNext(FluxRetryWhen.java:268)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmit(FluxFlatMap.java:543)\r\n\tat reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:984)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:23:24.102+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-13","level":"INFO","level_value":20000,"traceId":"e0680cf18111dec9","spanId":"e0680cf18111dec9"}
{"@timestamp":"2021-07-26T09:23:24.179+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-26","level":"INFO","level_value":20000,"traceId":"93dad4575b5ba829","spanId":"93dad4575b5ba829"}
{"@timestamp":"2021-07-26T09:23:24.270+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-28","level":"INFO","level_value":20000,"traceId":"3ecde6de5d109db3","spanId":"3ecde6de5d109db3"}
{"@timestamp":"2021-07-26T09:23:24.332+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-25","level":"INFO","level_value":20000,"traceId":"06c1a0e7b49d549c","spanId":"06c1a0e7b49d549c"}
{"@timestamp":"2021-07-26T09:23:24.424+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-27","level":"INFO","level_value":20000,"traceId":"a98ad7a4985efeda","spanId":"a98ad7a4985efeda"}
{"@timestamp":"2021-07-26T09:23:24.498+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"1e0f6f84da3c6165","spanId":"1e0f6f84da3c6165"}
{"@timestamp":"2021-07-26T09:23:24.574+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"c660b6b6b5122e0f","spanId":"c660b6b6b5122e0f"}
{"@timestamp":"2021-07-26T09:23:24.649+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-29","level":"INFO","level_value":20000,"traceId":"34ca50ee2768c43b","spanId":"34ca50ee2768c43b"}
{"@timestamp":"2021-07-26T09:23:27.109+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-13","level":"INFO","level_value":20000,"traceId":"168c04f4a041b0b9","spanId":"168c04f4a041b0b9"}
{"@timestamp":"2021-07-26T09:23:27.506+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"f86edb36584af5de","spanId":"f86edb36584af5de"}
{"@timestamp":"2021-07-26T09:26:08.150+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:08.151+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:08.151+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:08.151+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@3e4387b4","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:08.154+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:08.155+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:15.666+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:15.667+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:23.187+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:23.188+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$4b1460fa","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"87ed4585e8b8ab4d","spanId":"87ed4585e8b8ab4d"}
{"@timestamp":"2021-07-26T09:26:30.200+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:26:30.201+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:28:34.200+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:34.216+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 18680 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:34.218+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:34.319+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:34.319+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:37.392+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:38.118+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:38.134+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:38.146+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:42.651+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:42.674+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:42.676+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:42.677+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:43.159+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:43.160+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 8839 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:28:45.459+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:28:56.124+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:29:00.873+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:01.041+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:05.866+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:10.514+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:14.768+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:29:14.965+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.143+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.323+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.334+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.385+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.385+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.386+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.386+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.386+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.387+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.387+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.977+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.987+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:15.993+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:16.008+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627259356005 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:16.054+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:16.055+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627259356055, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:16.060+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:16.064+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:16.116+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:16.119+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:16.159+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:21.021+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:25.404+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:29:25.459+09:00","@version":"1","message":"Started DemoApplication in 55.446 seconds (JVM running for 57.204)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:32:42.665+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:32:42.666+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:32:42.672+09:00","@version":"1","message":"Completed initialization in 5 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:32:42.796+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:42.796+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:42.796+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:42.797+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:42.797+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:42.797+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:42.798+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:42.798+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:42.798+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:42.798+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:42.798+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:42.798+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:42.811+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:42.812+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:42.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:42.813+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:42.912+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:42.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:42.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:42.913+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:43.013+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709b13448cc89fb9","spanId":"709b13448cc89fb9"}
{"@timestamp":"2021-07-26T09:32:43.014+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709b13448cc89fb9","spanId":"709b13448cc89fb9"}
{"@timestamp":"2021-07-26T09:32:43.014+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709b13448cc89fb9","spanId":"709b13448cc89fb9"}
{"@timestamp":"2021-07-26T09:32:43.015+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709b13448cc89fb9","spanId":"709b13448cc89fb9"}
{"@timestamp":"2021-07-26T09:32:43.104+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:32:43.110+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:32:43.117+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c086a76aa5768f9b","spanId":"c086a76aa5768f9b"}
{"@timestamp":"2021-07-26T09:32:43.118+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c086a76aa5768f9b","spanId":"c086a76aa5768f9b"}
{"@timestamp":"2021-07-26T09:32:43.118+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c086a76aa5768f9b","spanId":"c086a76aa5768f9b"}
{"@timestamp":"2021-07-26T09:32:43.119+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"c086a76aa5768f9b","spanId":"c086a76aa5768f9b"}
{"@timestamp":"2021-07-26T09:32:43.130+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:32:43.132+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:32:43.631+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:43.631+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:43.631+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:43.632+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:43.631+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:43.632+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:43.632+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:43.632+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:43.632+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:43.634+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"fc7f0d57b0a194a0","spanId":"fc7f0d57b0a194a0"}
{"@timestamp":"2021-07-26T09:32:43.634+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f21722197bb1c6bd","spanId":"f21722197bb1c6bd"}
{"@timestamp":"2021-07-26T09:32:43.634+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"fc7f0d57b0a194a0","spanId":"fc7f0d57b0a194a0"}
{"@timestamp":"2021-07-26T09:32:43.634+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3c368a86d44dbfb1","spanId":"3c368a86d44dbfb1"}
{"@timestamp":"2021-07-26T09:32:43.632+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:43.635+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f21722197bb1c6bd","spanId":"f21722197bb1c6bd"}
{"@timestamp":"2021-07-26T09:32:43.635+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"fc7f0d57b0a194a0","spanId":"fc7f0d57b0a194a0"}
{"@timestamp":"2021-07-26T09:32:43.635+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3c368a86d44dbfb1","spanId":"3c368a86d44dbfb1"}
{"@timestamp":"2021-07-26T09:32:43.636+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f21722197bb1c6bd","spanId":"f21722197bb1c6bd"}
{"@timestamp":"2021-07-26T09:32:43.636+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3c368a86d44dbfb1","spanId":"3c368a86d44dbfb1"}
{"@timestamp":"2021-07-26T09:32:43.636+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"fc7f0d57b0a194a0","spanId":"fc7f0d57b0a194a0"}
{"@timestamp":"2021-07-26T09:32:43.637+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3c368a86d44dbfb1","spanId":"3c368a86d44dbfb1"}
{"@timestamp":"2021-07-26T09:32:43.636+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f21722197bb1c6bd","spanId":"f21722197bb1c6bd"}
{"@timestamp":"2021-07-26T09:32:44.713+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:32:44.714+09:00","@version":"1","message":"Dropped 5 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T09:32:50.509+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:50.509+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:50.509+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:50.510+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:50.510+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:50.510+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:50.512+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:50.513+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:50.516+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:50.517+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:54.596+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-17","level":"INFO","level_value":20000,"traceId":"cc4033a96763d5d9","spanId":"cc4033a96763d5d9"}
{"@timestamp":"2021-07-26T09:32:54.596+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-30","level":"INFO","level_value":20000,"traceId":"8d3137894c8f09b9","spanId":"8d3137894c8f09b9"}
{"@timestamp":"2021-07-26T09:32:54.596+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-39","level":"INFO","level_value":20000,"traceId":"8f19df731b922256","spanId":"8f19df731b922256"}
{"@timestamp":"2021-07-26T09:32:54.597+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-21","level":"INFO","level_value":20000,"traceId":"b3bb4f05434de0a0","spanId":"b3bb4f05434de0a0"}
{"@timestamp":"2021-07-26T09:32:58.031+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:32:58.032+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:33:01.054+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-17","level":"INFO","level_value":20000,"traceId":"642aebc945baf8d2","spanId":"642aebc945baf8d2"}
{"@timestamp":"2021-07-26T09:33:09.508+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ee0292ba1a2d5a4","spanId":"9ee0292ba1a2d5a4"}
{"@timestamp":"2021-07-26T09:33:09.508+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ee0292ba1a2d5a4","spanId":"9ee0292ba1a2d5a4"}
{"@timestamp":"2021-07-26T09:33:09.508+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ee0292ba1a2d5a4","spanId":"9ee0292ba1a2d5a4"}
{"@timestamp":"2021-07-26T09:33:09.509+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ee0292ba1a2d5a4","spanId":"9ee0292ba1a2d5a4"}
{"@timestamp":"2021-07-26T09:33:09.515+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ee0292ba1a2d5a4","spanId":"9ee0292ba1a2d5a4"}
{"@timestamp":"2021-07-26T09:33:09.516+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9ee0292ba1a2d5a4","spanId":"9ee0292ba1a2d5a4"}
{"@timestamp":"2021-07-26T09:33:09.608+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"425399fb57906e21","spanId":"425399fb57906e21"}
{"@timestamp":"2021-07-26T09:33:09.609+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"425399fb57906e21","spanId":"425399fb57906e21"}
{"@timestamp":"2021-07-26T09:33:09.609+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"425399fb57906e21","spanId":"425399fb57906e21"}
{"@timestamp":"2021-07-26T09:33:09.609+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"425399fb57906e21","spanId":"425399fb57906e21"}
{"@timestamp":"2021-07-26T09:33:09.613+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"425399fb57906e21","spanId":"425399fb57906e21"}
{"@timestamp":"2021-07-26T09:33:09.614+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"425399fb57906e21","spanId":"425399fb57906e21"}
{"@timestamp":"2021-07-26T09:33:09.708+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1242b986fec569bd","spanId":"1242b986fec569bd"}
{"@timestamp":"2021-07-26T09:33:09.709+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1242b986fec569bd","spanId":"1242b986fec569bd"}
{"@timestamp":"2021-07-26T09:33:09.709+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1242b986fec569bd","spanId":"1242b986fec569bd"}
{"@timestamp":"2021-07-26T09:33:09.709+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1242b986fec569bd","spanId":"1242b986fec569bd"}
{"@timestamp":"2021-07-26T09:33:09.712+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1242b986fec569bd","spanId":"1242b986fec569bd"}
{"@timestamp":"2021-07-26T09:33:09.713+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1242b986fec569bd","spanId":"1242b986fec569bd"}
{"@timestamp":"2021-07-26T09:33:09.807+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f654b51c6c54bf8e","spanId":"f654b51c6c54bf8e"}
{"@timestamp":"2021-07-26T09:33:09.808+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f654b51c6c54bf8e","spanId":"f654b51c6c54bf8e"}
{"@timestamp":"2021-07-26T09:33:09.809+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f654b51c6c54bf8e","spanId":"f654b51c6c54bf8e"}
{"@timestamp":"2021-07-26T09:33:09.809+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f654b51c6c54bf8e","spanId":"f654b51c6c54bf8e"}
{"@timestamp":"2021-07-26T09:33:09.811+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f654b51c6c54bf8e","spanId":"f654b51c6c54bf8e"}
{"@timestamp":"2021-07-26T09:33:09.812+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f654b51c6c54bf8e","spanId":"f654b51c6c54bf8e"}
{"@timestamp":"2021-07-26T09:33:09.908+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"92a6b66c613e6a18","spanId":"92a6b66c613e6a18"}
{"@timestamp":"2021-07-26T09:33:09.908+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"92a6b66c613e6a18","spanId":"92a6b66c613e6a18"}
{"@timestamp":"2021-07-26T09:33:09.909+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"92a6b66c613e6a18","spanId":"92a6b66c613e6a18"}
{"@timestamp":"2021-07-26T09:33:09.909+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"92a6b66c613e6a18","spanId":"92a6b66c613e6a18"}
{"@timestamp":"2021-07-26T09:33:09.912+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"92a6b66c613e6a18","spanId":"92a6b66c613e6a18"}
{"@timestamp":"2021-07-26T09:33:09.912+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"92a6b66c613e6a18","spanId":"92a6b66c613e6a18"}
{"@timestamp":"2021-07-26T09:33:10.011+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"aab6d77261fa8a67","spanId":"aab6d77261fa8a67"}
{"@timestamp":"2021-07-26T09:33:10.012+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"aab6d77261fa8a67","spanId":"aab6d77261fa8a67"}
{"@timestamp":"2021-07-26T09:33:10.012+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"aab6d77261fa8a67","spanId":"aab6d77261fa8a67"}
{"@timestamp":"2021-07-26T09:33:10.013+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"aab6d77261fa8a67","spanId":"aab6d77261fa8a67"}
{"@timestamp":"2021-07-26T09:33:10.019+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:33:10.020+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:33:10.109+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8de601cca23a67e8","spanId":"8de601cca23a67e8"}
{"@timestamp":"2021-07-26T09:33:10.109+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8de601cca23a67e8","spanId":"8de601cca23a67e8"}
{"@timestamp":"2021-07-26T09:33:10.110+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8de601cca23a67e8","spanId":"8de601cca23a67e8"}
{"@timestamp":"2021-07-26T09:33:10.110+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8de601cca23a67e8","spanId":"8de601cca23a67e8"}
{"@timestamp":"2021-07-26T09:33:10.115+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:33:10.119+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:33:10.209+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8b1aa9f828dd5e13","spanId":"8b1aa9f828dd5e13"}
{"@timestamp":"2021-07-26T09:33:10.209+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8b1aa9f828dd5e13","spanId":"8b1aa9f828dd5e13"}
{"@timestamp":"2021-07-26T09:33:10.209+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8b1aa9f828dd5e13","spanId":"8b1aa9f828dd5e13"}
{"@timestamp":"2021-07-26T09:33:10.210+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8b1aa9f828dd5e13","spanId":"8b1aa9f828dd5e13"}
{"@timestamp":"2021-07-26T09:33:10.309+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"70023e39c305d396","spanId":"70023e39c305d396"}
{"@timestamp":"2021-07-26T09:33:10.310+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"70023e39c305d396","spanId":"70023e39c305d396"}
{"@timestamp":"2021-07-26T09:33:10.310+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"70023e39c305d396","spanId":"70023e39c305d396"}
{"@timestamp":"2021-07-26T09:33:10.310+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"70023e39c305d396","spanId":"70023e39c305d396"}
{"@timestamp":"2021-07-26T09:33:10.408+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f515a6bf5124ce96","spanId":"f515a6bf5124ce96"}
{"@timestamp":"2021-07-26T09:33:10.408+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f515a6bf5124ce96","spanId":"f515a6bf5124ce96"}
{"@timestamp":"2021-07-26T09:33:10.409+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f515a6bf5124ce96","spanId":"f515a6bf5124ce96"}
{"@timestamp":"2021-07-26T09:33:10.409+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f515a6bf5124ce96","spanId":"f515a6bf5124ce96"}
{"@timestamp":"2021-07-26T09:33:12.534+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-30","level":"INFO","level_value":20000,"traceId":"9ee0292ba1a2d5a4","spanId":"9ee0292ba1a2d5a4"}
{"@timestamp":"2021-07-26T09:33:12.626+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-21","level":"INFO","level_value":20000,"traceId":"425399fb57906e21","spanId":"425399fb57906e21"}
{"@timestamp":"2021-07-26T09:33:12.734+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-39","level":"INFO","level_value":20000,"traceId":"1242b986fec569bd","spanId":"1242b986fec569bd"}
{"@timestamp":"2021-07-26T09:33:12.826+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-17","level":"INFO","level_value":20000,"traceId":"f654b51c6c54bf8e","spanId":"f654b51c6c54bf8e"}
{"@timestamp":"2021-07-26T09:33:15.641+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-32","level":"INFO","level_value":20000,"traceId":"92a6b66c613e6a18","spanId":"92a6b66c613e6a18"}
{"@timestamp":"2021-07-26T09:33:59.467+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8190a06142ad22aa","spanId":"8190a06142ad22aa"}
{"@timestamp":"2021-07-26T09:33:59.469+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8190a06142ad22aa","spanId":"8190a06142ad22aa"}
{"@timestamp":"2021-07-26T09:33:59.469+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8190a06142ad22aa","spanId":"8190a06142ad22aa"}
{"@timestamp":"2021-07-26T09:33:59.470+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8190a06142ad22aa","spanId":"8190a06142ad22aa"}
{"@timestamp":"2021-07-26T09:33:59.474+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8190a06142ad22aa","spanId":"8190a06142ad22aa"}
{"@timestamp":"2021-07-26T09:33:59.474+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8190a06142ad22aa","spanId":"8190a06142ad22aa"}
{"@timestamp":"2021-07-26T09:33:59.519+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f64e152157dbdcdb","spanId":"f64e152157dbdcdb"}
{"@timestamp":"2021-07-26T09:33:59.519+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f64e152157dbdcdb","spanId":"f64e152157dbdcdb"}
{"@timestamp":"2021-07-26T09:33:59.519+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f64e152157dbdcdb","spanId":"f64e152157dbdcdb"}
{"@timestamp":"2021-07-26T09:33:59.520+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f64e152157dbdcdb","spanId":"f64e152157dbdcdb"}
{"@timestamp":"2021-07-26T09:33:59.522+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f64e152157dbdcdb","spanId":"f64e152157dbdcdb"}
{"@timestamp":"2021-07-26T09:33:59.523+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f64e152157dbdcdb","spanId":"f64e152157dbdcdb"}
{"@timestamp":"2021-07-26T09:33:59.566+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1cf857749966c7a","spanId":"b1cf857749966c7a"}
{"@timestamp":"2021-07-26T09:33:59.566+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1cf857749966c7a","spanId":"b1cf857749966c7a"}
{"@timestamp":"2021-07-26T09:33:59.567+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1cf857749966c7a","spanId":"b1cf857749966c7a"}
{"@timestamp":"2021-07-26T09:33:59.567+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1cf857749966c7a","spanId":"b1cf857749966c7a"}
{"@timestamp":"2021-07-26T09:33:59.570+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1cf857749966c7a","spanId":"b1cf857749966c7a"}
{"@timestamp":"2021-07-26T09:33:59.570+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1cf857749966c7a","spanId":"b1cf857749966c7a"}
{"@timestamp":"2021-07-26T09:33:59.616+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b77e9969dc6d9896","spanId":"b77e9969dc6d9896"}
{"@timestamp":"2021-07-26T09:33:59.617+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b77e9969dc6d9896","spanId":"b77e9969dc6d9896"}
{"@timestamp":"2021-07-26T09:33:59.617+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b77e9969dc6d9896","spanId":"b77e9969dc6d9896"}
{"@timestamp":"2021-07-26T09:33:59.617+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b77e9969dc6d9896","spanId":"b77e9969dc6d9896"}
{"@timestamp":"2021-07-26T09:33:59.620+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b77e9969dc6d9896","spanId":"b77e9969dc6d9896"}
{"@timestamp":"2021-07-26T09:33:59.620+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b77e9969dc6d9896","spanId":"b77e9969dc6d9896"}
{"@timestamp":"2021-07-26T09:33:59.667+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"eade0aeff7dbb0c2","spanId":"eade0aeff7dbb0c2"}
{"@timestamp":"2021-07-26T09:33:59.667+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"eade0aeff7dbb0c2","spanId":"eade0aeff7dbb0c2"}
{"@timestamp":"2021-07-26T09:33:59.668+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"eade0aeff7dbb0c2","spanId":"eade0aeff7dbb0c2"}
{"@timestamp":"2021-07-26T09:33:59.668+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"eade0aeff7dbb0c2","spanId":"eade0aeff7dbb0c2"}
{"@timestamp":"2021-07-26T09:33:59.671+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"eade0aeff7dbb0c2","spanId":"eade0aeff7dbb0c2"}
{"@timestamp":"2021-07-26T09:33:59.671+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"eade0aeff7dbb0c2","spanId":"eade0aeff7dbb0c2"}
{"@timestamp":"2021-07-26T09:33:59.718+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"4a892883217aa804","spanId":"4a892883217aa804"}
{"@timestamp":"2021-07-26T09:33:59.718+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"4a892883217aa804","spanId":"4a892883217aa804"}
{"@timestamp":"2021-07-26T09:33:59.719+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"4a892883217aa804","spanId":"4a892883217aa804"}
{"@timestamp":"2021-07-26T09:33:59.719+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"4a892883217aa804","spanId":"4a892883217aa804"}
{"@timestamp":"2021-07-26T09:33:59.723+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:33:59.726+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:33:59.766+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"28ed1a37b8be292e","spanId":"28ed1a37b8be292e"}
{"@timestamp":"2021-07-26T09:33:59.767+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"28ed1a37b8be292e","spanId":"28ed1a37b8be292e"}
{"@timestamp":"2021-07-26T09:33:59.767+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"28ed1a37b8be292e","spanId":"28ed1a37b8be292e"}
{"@timestamp":"2021-07-26T09:33:59.767+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"28ed1a37b8be292e","spanId":"28ed1a37b8be292e"}
{"@timestamp":"2021-07-26T09:33:59.771+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:33:59.772+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:33:59.819+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f4bed79c1c7fcd4d","spanId":"f4bed79c1c7fcd4d"}
{"@timestamp":"2021-07-26T09:33:59.820+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f4bed79c1c7fcd4d","spanId":"f4bed79c1c7fcd4d"}
{"@timestamp":"2021-07-26T09:33:59.820+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f4bed79c1c7fcd4d","spanId":"f4bed79c1c7fcd4d"}
{"@timestamp":"2021-07-26T09:33:59.821+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"f4bed79c1c7fcd4d","spanId":"f4bed79c1c7fcd4d"}
{"@timestamp":"2021-07-26T09:33:59.868+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7f2d32505f972665","spanId":"7f2d32505f972665"}
{"@timestamp":"2021-07-26T09:33:59.870+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7f2d32505f972665","spanId":"7f2d32505f972665"}
{"@timestamp":"2021-07-26T09:33:59.870+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7f2d32505f972665","spanId":"7f2d32505f972665"}
{"@timestamp":"2021-07-26T09:33:59.871+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7f2d32505f972665","spanId":"7f2d32505f972665"}
{"@timestamp":"2021-07-26T09:33:59.917+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ee9364c0982e54f2","spanId":"ee9364c0982e54f2"}
{"@timestamp":"2021-07-26T09:33:59.917+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ee9364c0982e54f2","spanId":"ee9364c0982e54f2"}
{"@timestamp":"2021-07-26T09:33:59.919+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ee9364c0982e54f2","spanId":"ee9364c0982e54f2"}
{"@timestamp":"2021-07-26T09:33:59.920+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ee9364c0982e54f2","spanId":"ee9364c0982e54f2"}
{"@timestamp":"2021-07-26T09:33:59.968+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a17b7544ed06e081","spanId":"a17b7544ed06e081"}
{"@timestamp":"2021-07-26T09:33:59.969+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a17b7544ed06e081","spanId":"a17b7544ed06e081"}
{"@timestamp":"2021-07-26T09:33:59.969+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a17b7544ed06e081","spanId":"a17b7544ed06e081"}
{"@timestamp":"2021-07-26T09:33:59.969+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"a17b7544ed06e081","spanId":"a17b7544ed06e081"}
{"@timestamp":"2021-07-26T09:34:00.019+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2a715cf004a6eb26","spanId":"2a715cf004a6eb26"}
{"@timestamp":"2021-07-26T09:34:00.019+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2a715cf004a6eb26","spanId":"2a715cf004a6eb26"}
{"@timestamp":"2021-07-26T09:34:00.020+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2a715cf004a6eb26","spanId":"2a715cf004a6eb26"}
{"@timestamp":"2021-07-26T09:34:00.020+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2a715cf004a6eb26","spanId":"2a715cf004a6eb26"}
{"@timestamp":"2021-07-26T09:34:00.066+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6a1098d4f475c1bf","spanId":"6a1098d4f475c1bf"}
{"@timestamp":"2021-07-26T09:34:00.067+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6a1098d4f475c1bf","spanId":"6a1098d4f475c1bf"}
{"@timestamp":"2021-07-26T09:34:00.068+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6a1098d4f475c1bf","spanId":"6a1098d4f475c1bf"}
{"@timestamp":"2021-07-26T09:34:00.068+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6a1098d4f475c1bf","spanId":"6a1098d4f475c1bf"}
{"@timestamp":"2021-07-26T09:34:00.117+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cae46b37b8ad1ca9","spanId":"cae46b37b8ad1ca9"}
{"@timestamp":"2021-07-26T09:34:00.118+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cae46b37b8ad1ca9","spanId":"cae46b37b8ad1ca9"}
{"@timestamp":"2021-07-26T09:34:00.119+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cae46b37b8ad1ca9","spanId":"cae46b37b8ad1ca9"}
{"@timestamp":"2021-07-26T09:34:00.119+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cae46b37b8ad1ca9","spanId":"cae46b37b8ad1ca9"}
{"@timestamp":"2021-07-26T09:34:00.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d3b74e152243aac2","spanId":"d3b74e152243aac2"}
{"@timestamp":"2021-07-26T09:34:00.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d3b74e152243aac2","spanId":"d3b74e152243aac2"}
{"@timestamp":"2021-07-26T09:34:00.166+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d3b74e152243aac2","spanId":"d3b74e152243aac2"}
{"@timestamp":"2021-07-26T09:34:00.166+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d3b74e152243aac2","spanId":"d3b74e152243aac2"}
{"@timestamp":"2021-07-26T09:34:00.216+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"239af6cf59b1f44d","spanId":"239af6cf59b1f44d"}
{"@timestamp":"2021-07-26T09:34:00.217+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"239af6cf59b1f44d","spanId":"239af6cf59b1f44d"}
{"@timestamp":"2021-07-26T09:34:00.217+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"239af6cf59b1f44d","spanId":"239af6cf59b1f44d"}
{"@timestamp":"2021-07-26T09:34:00.217+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"239af6cf59b1f44d","spanId":"239af6cf59b1f44d"}
{"@timestamp":"2021-07-26T09:34:00.265+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"85d68232f42b4abc","spanId":"85d68232f42b4abc"}
{"@timestamp":"2021-07-26T09:34:00.266+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"85d68232f42b4abc","spanId":"85d68232f42b4abc"}
{"@timestamp":"2021-07-26T09:34:00.266+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"85d68232f42b4abc","spanId":"85d68232f42b4abc"}
{"@timestamp":"2021-07-26T09:34:00.266+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"85d68232f42b4abc","spanId":"85d68232f42b4abc"}
{"@timestamp":"2021-07-26T09:34:00.313+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"dc0d93cfcb88577a","spanId":"dc0d93cfcb88577a"}
{"@timestamp":"2021-07-26T09:34:00.313+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"dc0d93cfcb88577a","spanId":"dc0d93cfcb88577a"}
{"@timestamp":"2021-07-26T09:34:00.314+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"dc0d93cfcb88577a","spanId":"dc0d93cfcb88577a"}
{"@timestamp":"2021-07-26T09:34:00.314+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"dc0d93cfcb88577a","spanId":"dc0d93cfcb88577a"}
{"@timestamp":"2021-07-26T09:34:00.365+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"78cc5d72a04aa91f","spanId":"78cc5d72a04aa91f"}
{"@timestamp":"2021-07-26T09:34:00.365+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"78cc5d72a04aa91f","spanId":"78cc5d72a04aa91f"}
{"@timestamp":"2021-07-26T09:34:00.365+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"78cc5d72a04aa91f","spanId":"78cc5d72a04aa91f"}
{"@timestamp":"2021-07-26T09:34:00.365+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"78cc5d72a04aa91f","spanId":"78cc5d72a04aa91f"}
{"@timestamp":"2021-07-26T09:34:00.416+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c52349260af9f2ac","spanId":"c52349260af9f2ac"}
{"@timestamp":"2021-07-26T09:34:00.416+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c52349260af9f2ac","spanId":"c52349260af9f2ac"}
{"@timestamp":"2021-07-26T09:34:00.417+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c52349260af9f2ac","spanId":"c52349260af9f2ac"}
{"@timestamp":"2021-07-26T09:34:00.417+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"c52349260af9f2ac","spanId":"c52349260af9f2ac"}
{"@timestamp":"2021-07-26T09:34:02.497+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-30","level":"INFO","level_value":20000,"traceId":"8190a06142ad22aa","spanId":"8190a06142ad22aa"}
{"@timestamp":"2021-07-26T09:34:02.542+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-21","level":"INFO","level_value":20000,"traceId":"f64e152157dbdcdb","spanId":"f64e152157dbdcdb"}
{"@timestamp":"2021-07-26T09:34:02.588+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-39","level":"INFO","level_value":20000,"traceId":"b1cf857749966c7a","spanId":"b1cf857749966c7a"}
{"@timestamp":"2021-07-26T09:34:02.631+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-17","level":"INFO","level_value":20000,"traceId":"b77e9969dc6d9896","spanId":"b77e9969dc6d9896"}
{"@timestamp":"2021-07-26T09:34:05.555+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-32","level":"INFO","level_value":20000,"traceId":"eade0aeff7dbb0c2","spanId":"eade0aeff7dbb0c2"}
{"@timestamp":"2021-07-26T09:34:15.394+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:15.992+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:15.992+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:15.992+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:15.992+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:15.993+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:15.993+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:15.993+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:16.011+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:34:46.289+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a57e8d386164a95c","spanId":"a57e8d386164a95c"}
{"@timestamp":"2021-07-26T09:34:46.290+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a57e8d386164a95c","spanId":"a57e8d386164a95c"}
{"@timestamp":"2021-07-26T09:34:46.290+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a57e8d386164a95c","spanId":"a57e8d386164a95c"}
{"@timestamp":"2021-07-26T09:34:46.290+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a57e8d386164a95c","spanId":"a57e8d386164a95c"}
{"@timestamp":"2021-07-26T09:34:46.292+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a57e8d386164a95c","spanId":"a57e8d386164a95c"}
{"@timestamp":"2021-07-26T09:34:46.292+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a57e8d386164a95c","spanId":"a57e8d386164a95c"}
{"@timestamp":"2021-07-26T09:34:46.338+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6adea182ee7bcda9","spanId":"6adea182ee7bcda9"}
{"@timestamp":"2021-07-26T09:34:46.339+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6adea182ee7bcda9","spanId":"6adea182ee7bcda9"}
{"@timestamp":"2021-07-26T09:34:46.339+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6adea182ee7bcda9","spanId":"6adea182ee7bcda9"}
{"@timestamp":"2021-07-26T09:34:46.340+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6adea182ee7bcda9","spanId":"6adea182ee7bcda9"}
{"@timestamp":"2021-07-26T09:34:46.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6adea182ee7bcda9","spanId":"6adea182ee7bcda9"}
{"@timestamp":"2021-07-26T09:34:46.342+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6adea182ee7bcda9","spanId":"6adea182ee7bcda9"}
{"@timestamp":"2021-07-26T09:34:46.389+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"83978466baf40324","spanId":"83978466baf40324"}
{"@timestamp":"2021-07-26T09:34:46.389+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"83978466baf40324","spanId":"83978466baf40324"}
{"@timestamp":"2021-07-26T09:34:46.390+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"83978466baf40324","spanId":"83978466baf40324"}
{"@timestamp":"2021-07-26T09:34:46.390+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"83978466baf40324","spanId":"83978466baf40324"}
{"@timestamp":"2021-07-26T09:34:46.392+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"83978466baf40324","spanId":"83978466baf40324"}
{"@timestamp":"2021-07-26T09:34:46.393+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"83978466baf40324","spanId":"83978466baf40324"}
{"@timestamp":"2021-07-26T09:34:46.439+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"90194920d533b078","spanId":"90194920d533b078"}
{"@timestamp":"2021-07-26T09:34:46.439+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"90194920d533b078","spanId":"90194920d533b078"}
{"@timestamp":"2021-07-26T09:34:46.440+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"90194920d533b078","spanId":"90194920d533b078"}
{"@timestamp":"2021-07-26T09:34:46.440+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"90194920d533b078","spanId":"90194920d533b078"}
{"@timestamp":"2021-07-26T09:34:46.442+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"90194920d533b078","spanId":"90194920d533b078"}
{"@timestamp":"2021-07-26T09:34:46.443+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"90194920d533b078","spanId":"90194920d533b078"}
{"@timestamp":"2021-07-26T09:34:46.489+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2fa4cb561caaad38","spanId":"2fa4cb561caaad38"}
{"@timestamp":"2021-07-26T09:34:46.490+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2fa4cb561caaad38","spanId":"2fa4cb561caaad38"}
{"@timestamp":"2021-07-26T09:34:46.491+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2fa4cb561caaad38","spanId":"2fa4cb561caaad38"}
{"@timestamp":"2021-07-26T09:34:46.491+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2fa4cb561caaad38","spanId":"2fa4cb561caaad38"}
{"@timestamp":"2021-07-26T09:34:46.493+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2fa4cb561caaad38","spanId":"2fa4cb561caaad38"}
{"@timestamp":"2021-07-26T09:34:46.493+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2fa4cb561caaad38","spanId":"2fa4cb561caaad38"}
{"@timestamp":"2021-07-26T09:34:46.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2ea8963ec2c8363a","spanId":"2ea8963ec2c8363a"}
{"@timestamp":"2021-07-26T09:34:46.542+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2ea8963ec2c8363a","spanId":"2ea8963ec2c8363a"}
{"@timestamp":"2021-07-26T09:34:46.542+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2ea8963ec2c8363a","spanId":"2ea8963ec2c8363a"}
{"@timestamp":"2021-07-26T09:34:46.542+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2ea8963ec2c8363a","spanId":"2ea8963ec2c8363a"}
{"@timestamp":"2021-07-26T09:34:46.545+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:34:46.545+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:34:46.588+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cab26b29e0846046","spanId":"cab26b29e0846046"}
{"@timestamp":"2021-07-26T09:34:46.588+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cab26b29e0846046","spanId":"cab26b29e0846046"}
{"@timestamp":"2021-07-26T09:34:46.588+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cab26b29e0846046","spanId":"cab26b29e0846046"}
{"@timestamp":"2021-07-26T09:34:46.588+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cab26b29e0846046","spanId":"cab26b29e0846046"}
{"@timestamp":"2021-07-26T09:34:46.592+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:34:46.592+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:34:46.638+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"78a6adee2ec7890e","spanId":"78a6adee2ec7890e"}
{"@timestamp":"2021-07-26T09:34:46.638+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"78a6adee2ec7890e","spanId":"78a6adee2ec7890e"}
{"@timestamp":"2021-07-26T09:34:46.638+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"78a6adee2ec7890e","spanId":"78a6adee2ec7890e"}
{"@timestamp":"2021-07-26T09:34:46.638+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"78a6adee2ec7890e","spanId":"78a6adee2ec7890e"}
{"@timestamp":"2021-07-26T09:34:46.688+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"56985245a8f47d94","spanId":"56985245a8f47d94"}
{"@timestamp":"2021-07-26T09:34:46.689+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"56985245a8f47d94","spanId":"56985245a8f47d94"}
{"@timestamp":"2021-07-26T09:34:46.689+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"56985245a8f47d94","spanId":"56985245a8f47d94"}
{"@timestamp":"2021-07-26T09:34:46.689+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"56985245a8f47d94","spanId":"56985245a8f47d94"}
{"@timestamp":"2021-07-26T09:34:46.741+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d98ac896bc1cdac6","spanId":"d98ac896bc1cdac6"}
{"@timestamp":"2021-07-26T09:34:46.741+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d98ac896bc1cdac6","spanId":"d98ac896bc1cdac6"}
{"@timestamp":"2021-07-26T09:34:46.741+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d98ac896bc1cdac6","spanId":"d98ac896bc1cdac6"}
{"@timestamp":"2021-07-26T09:34:46.742+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d98ac896bc1cdac6","spanId":"d98ac896bc1cdac6"}
{"@timestamp":"2021-07-26T09:34:46.792+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fa7cf5cc7f2705e5","spanId":"fa7cf5cc7f2705e5"}
{"@timestamp":"2021-07-26T09:34:46.792+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fa7cf5cc7f2705e5","spanId":"fa7cf5cc7f2705e5"}
{"@timestamp":"2021-07-26T09:34:46.792+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fa7cf5cc7f2705e5","spanId":"fa7cf5cc7f2705e5"}
{"@timestamp":"2021-07-26T09:34:46.792+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"fa7cf5cc7f2705e5","spanId":"fa7cf5cc7f2705e5"}
{"@timestamp":"2021-07-26T09:34:46.843+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d8c0f1cd5019a24","spanId":"4d8c0f1cd5019a24"}
{"@timestamp":"2021-07-26T09:34:46.843+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d8c0f1cd5019a24","spanId":"4d8c0f1cd5019a24"}
{"@timestamp":"2021-07-26T09:34:46.843+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d8c0f1cd5019a24","spanId":"4d8c0f1cd5019a24"}
{"@timestamp":"2021-07-26T09:34:46.843+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d8c0f1cd5019a24","spanId":"4d8c0f1cd5019a24"}
{"@timestamp":"2021-07-26T09:34:46.893+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"75af247d3b2487b9","spanId":"75af247d3b2487b9"}
{"@timestamp":"2021-07-26T09:34:46.893+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"75af247d3b2487b9","spanId":"75af247d3b2487b9"}
{"@timestamp":"2021-07-26T09:34:46.893+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"75af247d3b2487b9","spanId":"75af247d3b2487b9"}
{"@timestamp":"2021-07-26T09:34:46.894+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"75af247d3b2487b9","spanId":"75af247d3b2487b9"}
{"@timestamp":"2021-07-26T09:34:46.943+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"fc60de300c4888fe","spanId":"fc60de300c4888fe"}
{"@timestamp":"2021-07-26T09:34:46.943+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"fc60de300c4888fe","spanId":"fc60de300c4888fe"}
{"@timestamp":"2021-07-26T09:34:46.944+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"fc60de300c4888fe","spanId":"fc60de300c4888fe"}
{"@timestamp":"2021-07-26T09:34:46.944+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"fc60de300c4888fe","spanId":"fc60de300c4888fe"}
{"@timestamp":"2021-07-26T09:34:46.991+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"d2164fcf80868dc5","spanId":"d2164fcf80868dc5"}
{"@timestamp":"2021-07-26T09:34:46.992+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"d2164fcf80868dc5","spanId":"d2164fcf80868dc5"}
{"@timestamp":"2021-07-26T09:34:46.992+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"d2164fcf80868dc5","spanId":"d2164fcf80868dc5"}
{"@timestamp":"2021-07-26T09:34:46.992+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"d2164fcf80868dc5","spanId":"d2164fcf80868dc5"}
{"@timestamp":"2021-07-26T09:34:47.042+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bcd981dbc79bffe3","spanId":"bcd981dbc79bffe3"}
{"@timestamp":"2021-07-26T09:34:47.043+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bcd981dbc79bffe3","spanId":"bcd981dbc79bffe3"}
{"@timestamp":"2021-07-26T09:34:47.043+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bcd981dbc79bffe3","spanId":"bcd981dbc79bffe3"}
{"@timestamp":"2021-07-26T09:34:47.043+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"bcd981dbc79bffe3","spanId":"bcd981dbc79bffe3"}
{"@timestamp":"2021-07-26T09:34:47.093+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a36f91f86208db65","spanId":"a36f91f86208db65"}
{"@timestamp":"2021-07-26T09:34:47.093+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a36f91f86208db65","spanId":"a36f91f86208db65"}
{"@timestamp":"2021-07-26T09:34:47.094+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a36f91f86208db65","spanId":"a36f91f86208db65"}
{"@timestamp":"2021-07-26T09:34:47.094+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a36f91f86208db65","spanId":"a36f91f86208db65"}
{"@timestamp":"2021-07-26T09:34:47.142+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ffd10f65fb151d8b","spanId":"ffd10f65fb151d8b"}
{"@timestamp":"2021-07-26T09:34:47.143+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ffd10f65fb151d8b","spanId":"ffd10f65fb151d8b"}
{"@timestamp":"2021-07-26T09:34:47.143+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ffd10f65fb151d8b","spanId":"ffd10f65fb151d8b"}
{"@timestamp":"2021-07-26T09:34:47.144+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ffd10f65fb151d8b","spanId":"ffd10f65fb151d8b"}
{"@timestamp":"2021-07-26T09:34:47.191+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fc3da161d47c8aa4","spanId":"fc3da161d47c8aa4"}
{"@timestamp":"2021-07-26T09:34:47.191+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fc3da161d47c8aa4","spanId":"fc3da161d47c8aa4"}
{"@timestamp":"2021-07-26T09:34:47.192+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fc3da161d47c8aa4","spanId":"fc3da161d47c8aa4"}
{"@timestamp":"2021-07-26T09:34:47.192+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fc3da161d47c8aa4","spanId":"fc3da161d47c8aa4"}
{"@timestamp":"2021-07-26T09:34:47.241+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bc378bf0eb87a5ab","spanId":"bc378bf0eb87a5ab"}
{"@timestamp":"2021-07-26T09:34:47.242+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bc378bf0eb87a5ab","spanId":"bc378bf0eb87a5ab"}
{"@timestamp":"2021-07-26T09:34:47.242+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bc378bf0eb87a5ab","spanId":"bc378bf0eb87a5ab"}
{"@timestamp":"2021-07-26T09:34:47.242+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bc378bf0eb87a5ab","spanId":"bc378bf0eb87a5ab"}
{"@timestamp":"2021-07-26T09:34:49.309+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-30","level":"INFO","level_value":20000,"traceId":"a57e8d386164a95c","spanId":"a57e8d386164a95c"}
{"@timestamp":"2021-07-26T09:34:49.355+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-21","level":"INFO","level_value":20000,"traceId":"6adea182ee7bcda9","spanId":"6adea182ee7bcda9"}
{"@timestamp":"2021-07-26T09:34:49.402+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-39","level":"INFO","level_value":20000,"traceId":"83978466baf40324","spanId":"83978466baf40324"}
{"@timestamp":"2021-07-26T09:34:49.463+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-17","level":"INFO","level_value":20000,"traceId":"90194920d533b078","spanId":"90194920d533b078"}
{"@timestamp":"2021-07-26T09:34:52.361+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-32","level":"INFO","level_value":20000,"traceId":"2fa4cb561caaad38","spanId":"2fa4cb561caaad38"}
{"@timestamp":"2021-07-26T09:36:22.713+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7970764fba8942ad","spanId":"7970764fba8942ad"}
{"@timestamp":"2021-07-26T09:36:22.714+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7970764fba8942ad","spanId":"7970764fba8942ad"}
{"@timestamp":"2021-07-26T09:36:22.714+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7970764fba8942ad","spanId":"7970764fba8942ad"}
{"@timestamp":"2021-07-26T09:36:22.714+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7970764fba8942ad","spanId":"7970764fba8942ad"}
{"@timestamp":"2021-07-26T09:36:22.718+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7970764fba8942ad","spanId":"7970764fba8942ad"}
{"@timestamp":"2021-07-26T09:36:22.718+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"7970764fba8942ad","spanId":"7970764fba8942ad"}
{"@timestamp":"2021-07-26T09:36:22.763+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"899c86363d4a48ae","spanId":"899c86363d4a48ae"}
{"@timestamp":"2021-07-26T09:36:22.763+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"899c86363d4a48ae","spanId":"899c86363d4a48ae"}
{"@timestamp":"2021-07-26T09:36:22.763+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"899c86363d4a48ae","spanId":"899c86363d4a48ae"}
{"@timestamp":"2021-07-26T09:36:22.764+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"899c86363d4a48ae","spanId":"899c86363d4a48ae"}
{"@timestamp":"2021-07-26T09:36:22.766+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"899c86363d4a48ae","spanId":"899c86363d4a48ae"}
{"@timestamp":"2021-07-26T09:36:22.766+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"899c86363d4a48ae","spanId":"899c86363d4a48ae"}
{"@timestamp":"2021-07-26T09:36:22.814+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9f66d81b66327f0c","spanId":"9f66d81b66327f0c"}
{"@timestamp":"2021-07-26T09:36:22.814+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9f66d81b66327f0c","spanId":"9f66d81b66327f0c"}
{"@timestamp":"2021-07-26T09:36:22.815+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9f66d81b66327f0c","spanId":"9f66d81b66327f0c"}
{"@timestamp":"2021-07-26T09:36:22.815+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9f66d81b66327f0c","spanId":"9f66d81b66327f0c"}
{"@timestamp":"2021-07-26T09:36:22.816+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9f66d81b66327f0c","spanId":"9f66d81b66327f0c"}
{"@timestamp":"2021-07-26T09:36:22.818+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9f66d81b66327f0c","spanId":"9f66d81b66327f0c"}
{"@timestamp":"2021-07-26T09:36:22.865+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"832db4be6a221956","spanId":"832db4be6a221956"}
{"@timestamp":"2021-07-26T09:36:22.865+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"832db4be6a221956","spanId":"832db4be6a221956"}
{"@timestamp":"2021-07-26T09:36:22.865+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"832db4be6a221956","spanId":"832db4be6a221956"}
{"@timestamp":"2021-07-26T09:36:22.866+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"832db4be6a221956","spanId":"832db4be6a221956"}
{"@timestamp":"2021-07-26T09:36:22.868+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"832db4be6a221956","spanId":"832db4be6a221956"}
{"@timestamp":"2021-07-26T09:36:22.868+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"832db4be6a221956","spanId":"832db4be6a221956"}
{"@timestamp":"2021-07-26T09:36:22.914+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e9ae431d0d4f240d","spanId":"e9ae431d0d4f240d"}
{"@timestamp":"2021-07-26T09:36:22.914+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e9ae431d0d4f240d","spanId":"e9ae431d0d4f240d"}
{"@timestamp":"2021-07-26T09:36:22.914+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e9ae431d0d4f240d","spanId":"e9ae431d0d4f240d"}
{"@timestamp":"2021-07-26T09:36:22.915+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e9ae431d0d4f240d","spanId":"e9ae431d0d4f240d"}
{"@timestamp":"2021-07-26T09:36:22.917+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e9ae431d0d4f240d","spanId":"e9ae431d0d4f240d"}
{"@timestamp":"2021-07-26T09:36:22.918+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e9ae431d0d4f240d","spanId":"e9ae431d0d4f240d"}
{"@timestamp":"2021-07-26T09:36:22.964+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e7be2f44f67e77fc","spanId":"e7be2f44f67e77fc"}
{"@timestamp":"2021-07-26T09:36:22.965+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e7be2f44f67e77fc","spanId":"e7be2f44f67e77fc"}
{"@timestamp":"2021-07-26T09:36:22.965+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e7be2f44f67e77fc","spanId":"e7be2f44f67e77fc"}
{"@timestamp":"2021-07-26T09:36:22.965+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e7be2f44f67e77fc","spanId":"e7be2f44f67e77fc"}
{"@timestamp":"2021-07-26T09:36:22.968+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:36:22.971+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:36:23.014+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c84f2de5d5566f2","spanId":"1c84f2de5d5566f2"}
{"@timestamp":"2021-07-26T09:36:23.015+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c84f2de5d5566f2","spanId":"1c84f2de5d5566f2"}
{"@timestamp":"2021-07-26T09:36:23.015+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c84f2de5d5566f2","spanId":"1c84f2de5d5566f2"}
{"@timestamp":"2021-07-26T09:36:23.015+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c84f2de5d5566f2","spanId":"1c84f2de5d5566f2"}
{"@timestamp":"2021-07-26T09:36:23.018+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:36:23.020+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:36:23.064+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"d28c10725acfdd76","spanId":"d28c10725acfdd76"}
{"@timestamp":"2021-07-26T09:36:23.064+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"d28c10725acfdd76","spanId":"d28c10725acfdd76"}
{"@timestamp":"2021-07-26T09:36:23.065+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"d28c10725acfdd76","spanId":"d28c10725acfdd76"}
{"@timestamp":"2021-07-26T09:36:23.065+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"d28c10725acfdd76","spanId":"d28c10725acfdd76"}
{"@timestamp":"2021-07-26T09:36:23.114+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1289fe5dfa96d26b","spanId":"1289fe5dfa96d26b"}
{"@timestamp":"2021-07-26T09:36:23.114+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1289fe5dfa96d26b","spanId":"1289fe5dfa96d26b"}
{"@timestamp":"2021-07-26T09:36:23.114+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1289fe5dfa96d26b","spanId":"1289fe5dfa96d26b"}
{"@timestamp":"2021-07-26T09:36:23.114+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1289fe5dfa96d26b","spanId":"1289fe5dfa96d26b"}
{"@timestamp":"2021-07-26T09:36:23.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"4db05f0ccacb6612","spanId":"4db05f0ccacb6612"}
{"@timestamp":"2021-07-26T09:36:23.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"4db05f0ccacb6612","spanId":"4db05f0ccacb6612"}
{"@timestamp":"2021-07-26T09:36:23.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"4db05f0ccacb6612","spanId":"4db05f0ccacb6612"}
{"@timestamp":"2021-07-26T09:36:23.165+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"4db05f0ccacb6612","spanId":"4db05f0ccacb6612"}
{"@timestamp":"2021-07-26T09:36:23.215+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"222b665d6ff9d6d1","spanId":"222b665d6ff9d6d1"}
{"@timestamp":"2021-07-26T09:36:23.215+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"222b665d6ff9d6d1","spanId":"222b665d6ff9d6d1"}
{"@timestamp":"2021-07-26T09:36:23.215+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"222b665d6ff9d6d1","spanId":"222b665d6ff9d6d1"}
{"@timestamp":"2021-07-26T09:36:23.215+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"222b665d6ff9d6d1","spanId":"222b665d6ff9d6d1"}
{"@timestamp":"2021-07-26T09:36:23.265+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69441d3ada366636","spanId":"69441d3ada366636"}
{"@timestamp":"2021-07-26T09:36:23.265+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69441d3ada366636","spanId":"69441d3ada366636"}
{"@timestamp":"2021-07-26T09:36:23.265+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69441d3ada366636","spanId":"69441d3ada366636"}
{"@timestamp":"2021-07-26T09:36:23.265+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"69441d3ada366636","spanId":"69441d3ada366636"}
{"@timestamp":"2021-07-26T09:36:23.314+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ced67d795911562b","spanId":"ced67d795911562b"}
{"@timestamp":"2021-07-26T09:36:23.315+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ced67d795911562b","spanId":"ced67d795911562b"}
{"@timestamp":"2021-07-26T09:36:23.316+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ced67d795911562b","spanId":"ced67d795911562b"}
{"@timestamp":"2021-07-26T09:36:23.316+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"ced67d795911562b","spanId":"ced67d795911562b"}
{"@timestamp":"2021-07-26T09:36:23.365+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"317a4dbb43321189","spanId":"317a4dbb43321189"}
{"@timestamp":"2021-07-26T09:36:23.365+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"317a4dbb43321189","spanId":"317a4dbb43321189"}
{"@timestamp":"2021-07-26T09:36:23.366+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"317a4dbb43321189","spanId":"317a4dbb43321189"}
{"@timestamp":"2021-07-26T09:36:23.366+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"317a4dbb43321189","spanId":"317a4dbb43321189"}
{"@timestamp":"2021-07-26T09:36:23.414+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"6c0e51b2444ec364","spanId":"6c0e51b2444ec364"}
{"@timestamp":"2021-07-26T09:36:23.414+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"6c0e51b2444ec364","spanId":"6c0e51b2444ec364"}
{"@timestamp":"2021-07-26T09:36:23.414+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"6c0e51b2444ec364","spanId":"6c0e51b2444ec364"}
{"@timestamp":"2021-07-26T09:36:23.414+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"6c0e51b2444ec364","spanId":"6c0e51b2444ec364"}
{"@timestamp":"2021-07-26T09:36:23.465+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a3a56c3fdffe077d","spanId":"a3a56c3fdffe077d"}
{"@timestamp":"2021-07-26T09:36:23.465+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a3a56c3fdffe077d","spanId":"a3a56c3fdffe077d"}
{"@timestamp":"2021-07-26T09:36:23.465+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a3a56c3fdffe077d","spanId":"a3a56c3fdffe077d"}
{"@timestamp":"2021-07-26T09:36:23.466+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a3a56c3fdffe077d","spanId":"a3a56c3fdffe077d"}
{"@timestamp":"2021-07-26T09:36:23.516+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"2ea6d193cc3e1b0e","spanId":"2ea6d193cc3e1b0e"}
{"@timestamp":"2021-07-26T09:36:23.517+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"2ea6d193cc3e1b0e","spanId":"2ea6d193cc3e1b0e"}
{"@timestamp":"2021-07-26T09:36:23.517+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"2ea6d193cc3e1b0e","spanId":"2ea6d193cc3e1b0e"}
{"@timestamp":"2021-07-26T09:36:23.517+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"2ea6d193cc3e1b0e","spanId":"2ea6d193cc3e1b0e"}
{"@timestamp":"2021-07-26T09:36:23.568+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"fd2a8f8de8e50f8f","spanId":"fd2a8f8de8e50f8f"}
{"@timestamp":"2021-07-26T09:36:23.569+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"fd2a8f8de8e50f8f","spanId":"fd2a8f8de8e50f8f"}
{"@timestamp":"2021-07-26T09:36:23.569+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"fd2a8f8de8e50f8f","spanId":"fd2a8f8de8e50f8f"}
{"@timestamp":"2021-07-26T09:36:23.569+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"fd2a8f8de8e50f8f","spanId":"fd2a8f8de8e50f8f"}
{"@timestamp":"2021-07-26T09:36:23.614+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3e13aa19d23cc50f","spanId":"3e13aa19d23cc50f"}
{"@timestamp":"2021-07-26T09:36:23.614+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3e13aa19d23cc50f","spanId":"3e13aa19d23cc50f"}
{"@timestamp":"2021-07-26T09:36:23.614+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3e13aa19d23cc50f","spanId":"3e13aa19d23cc50f"}
{"@timestamp":"2021-07-26T09:36:23.615+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3e13aa19d23cc50f","spanId":"3e13aa19d23cc50f"}
{"@timestamp":"2021-07-26T09:36:23.665+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"01ea78ebd0510946","spanId":"01ea78ebd0510946"}
{"@timestamp":"2021-07-26T09:36:23.665+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"01ea78ebd0510946","spanId":"01ea78ebd0510946"}
{"@timestamp":"2021-07-26T09:36:23.665+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"01ea78ebd0510946","spanId":"01ea78ebd0510946"}
{"@timestamp":"2021-07-26T09:36:23.665+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"01ea78ebd0510946","spanId":"01ea78ebd0510946"}
{"@timestamp":"2021-07-26T09:36:25.736+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-30","level":"INFO","level_value":20000,"traceId":"7970764fba8942ad","spanId":"7970764fba8942ad"}
{"@timestamp":"2021-07-26T09:36:25.781+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-21","level":"INFO","level_value":20000,"traceId":"899c86363d4a48ae","spanId":"899c86363d4a48ae"}
{"@timestamp":"2021-07-26T09:36:25.826+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-39","level":"INFO","level_value":20000,"traceId":"9f66d81b66327f0c","spanId":"9f66d81b66327f0c"}
{"@timestamp":"2021-07-26T09:36:25.887+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-17","level":"INFO","level_value":20000,"traceId":"832db4be6a221956","spanId":"832db4be6a221956"}
{"@timestamp":"2021-07-26T09:36:28.801+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-32","level":"INFO","level_value":20000,"traceId":"e9ae431d0d4f240d","spanId":"e9ae431d0d4f240d"}
{"@timestamp":"2021-07-26T09:39:15.409+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:39:16.021+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:39:16.021+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:39:16.022+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:39:16.022+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:39:16.022+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:39:16.022+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:39:16.022+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:39:16.032+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:15.415+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:16.047+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:16.047+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:16.048+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:16.048+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:16.048+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:16.048+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:16.048+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:16.054+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:44:40.004+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2c665ed5ff8ce61a","spanId":"2c665ed5ff8ce61a"}
{"@timestamp":"2021-07-26T09:44:40.005+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2c665ed5ff8ce61a","spanId":"2c665ed5ff8ce61a"}
{"@timestamp":"2021-07-26T09:44:40.006+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2c665ed5ff8ce61a","spanId":"2c665ed5ff8ce61a"}
{"@timestamp":"2021-07-26T09:44:40.006+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2c665ed5ff8ce61a","spanId":"2c665ed5ff8ce61a"}
{"@timestamp":"2021-07-26T09:44:40.009+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2c665ed5ff8ce61a","spanId":"2c665ed5ff8ce61a"}
{"@timestamp":"2021-07-26T09:44:40.009+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2c665ed5ff8ce61a","spanId":"2c665ed5ff8ce61a"}
{"@timestamp":"2021-07-26T09:44:40.105+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"0b2f4747ca602789","spanId":"0b2f4747ca602789"}
{"@timestamp":"2021-07-26T09:44:40.106+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"0b2f4747ca602789","spanId":"0b2f4747ca602789"}
{"@timestamp":"2021-07-26T09:44:40.106+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"0b2f4747ca602789","spanId":"0b2f4747ca602789"}
{"@timestamp":"2021-07-26T09:44:40.106+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"0b2f4747ca602789","spanId":"0b2f4747ca602789"}
{"@timestamp":"2021-07-26T09:44:40.109+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"0b2f4747ca602789","spanId":"0b2f4747ca602789"}
{"@timestamp":"2021-07-26T09:44:40.110+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"0b2f4747ca602789","spanId":"0b2f4747ca602789"}
{"@timestamp":"2021-07-26T09:44:40.203+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e41d359a6b246e74","spanId":"e41d359a6b246e74"}
{"@timestamp":"2021-07-26T09:44:40.203+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e41d359a6b246e74","spanId":"e41d359a6b246e74"}
{"@timestamp":"2021-07-26T09:44:40.204+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e41d359a6b246e74","spanId":"e41d359a6b246e74"}
{"@timestamp":"2021-07-26T09:44:40.204+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e41d359a6b246e74","spanId":"e41d359a6b246e74"}
{"@timestamp":"2021-07-26T09:44:40.206+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e41d359a6b246e74","spanId":"e41d359a6b246e74"}
{"@timestamp":"2021-07-26T09:44:40.206+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e41d359a6b246e74","spanId":"e41d359a6b246e74"}
{"@timestamp":"2021-07-26T09:44:40.304+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d08ac4e3cb2d00e5","spanId":"d08ac4e3cb2d00e5"}
{"@timestamp":"2021-07-26T09:44:40.304+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d08ac4e3cb2d00e5","spanId":"d08ac4e3cb2d00e5"}
{"@timestamp":"2021-07-26T09:44:40.304+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d08ac4e3cb2d00e5","spanId":"d08ac4e3cb2d00e5"}
{"@timestamp":"2021-07-26T09:44:40.304+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d08ac4e3cb2d00e5","spanId":"d08ac4e3cb2d00e5"}
{"@timestamp":"2021-07-26T09:44:40.306+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d08ac4e3cb2d00e5","spanId":"d08ac4e3cb2d00e5"}
{"@timestamp":"2021-07-26T09:44:40.307+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d08ac4e3cb2d00e5","spanId":"d08ac4e3cb2d00e5"}
{"@timestamp":"2021-07-26T09:44:40.404+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6e8b311b8b0206de","spanId":"6e8b311b8b0206de"}
{"@timestamp":"2021-07-26T09:44:40.404+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6e8b311b8b0206de","spanId":"6e8b311b8b0206de"}
{"@timestamp":"2021-07-26T09:44:40.404+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6e8b311b8b0206de","spanId":"6e8b311b8b0206de"}
{"@timestamp":"2021-07-26T09:44:40.405+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6e8b311b8b0206de","spanId":"6e8b311b8b0206de"}
{"@timestamp":"2021-07-26T09:44:40.406+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6e8b311b8b0206de","spanId":"6e8b311b8b0206de"}
{"@timestamp":"2021-07-26T09:44:40.406+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"6e8b311b8b0206de","spanId":"6e8b311b8b0206de"}
{"@timestamp":"2021-07-26T09:44:40.504+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"60eafd334ed4cefe","spanId":"60eafd334ed4cefe"}
{"@timestamp":"2021-07-26T09:44:40.504+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"60eafd334ed4cefe","spanId":"60eafd334ed4cefe"}
{"@timestamp":"2021-07-26T09:44:40.504+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"60eafd334ed4cefe","spanId":"60eafd334ed4cefe"}
{"@timestamp":"2021-07-26T09:44:40.504+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"60eafd334ed4cefe","spanId":"60eafd334ed4cefe"}
{"@timestamp":"2021-07-26T09:44:40.507+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:44:40.508+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:44:40.604+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"d18bf1da6f340e74","spanId":"d18bf1da6f340e74"}
{"@timestamp":"2021-07-26T09:44:40.604+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"d18bf1da6f340e74","spanId":"d18bf1da6f340e74"}
{"@timestamp":"2021-07-26T09:44:40.605+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"d18bf1da6f340e74","spanId":"d18bf1da6f340e74"}
{"@timestamp":"2021-07-26T09:44:40.605+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"d18bf1da6f340e74","spanId":"d18bf1da6f340e74"}
{"@timestamp":"2021-07-26T09:44:40.609+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:44:40.610+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.ratelimiter.RequestNotPermitted: RateLimiter 'nhCircuitBreaker' does not permit further calls\r\n\tat io.github.resilience4j.ratelimiter.RequestNotPermitted.createRequestNotPermitted(RequestNotPermitted.java:43)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.CorePublisherRateLimiterOperator.subscribe(CorePublisherRateLimiterOperator.java:47)\r\n\tat io.github.resilience4j.reactor.ratelimiter.operator.MonoRateLimiter.subscribe(MonoRateLimiter.java:34)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:38)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:44:40.704+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9e00a525287296b8","spanId":"9e00a525287296b8"}
{"@timestamp":"2021-07-26T09:44:40.705+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9e00a525287296b8","spanId":"9e00a525287296b8"}
{"@timestamp":"2021-07-26T09:44:40.705+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9e00a525287296b8","spanId":"9e00a525287296b8"}
{"@timestamp":"2021-07-26T09:44:40.705+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"9e00a525287296b8","spanId":"9e00a525287296b8"}
{"@timestamp":"2021-07-26T09:44:40.805+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1614c773eec9b5b6","spanId":"1614c773eec9b5b6"}
{"@timestamp":"2021-07-26T09:44:40.805+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1614c773eec9b5b6","spanId":"1614c773eec9b5b6"}
{"@timestamp":"2021-07-26T09:44:40.806+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1614c773eec9b5b6","spanId":"1614c773eec9b5b6"}
{"@timestamp":"2021-07-26T09:44:40.806+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1614c773eec9b5b6","spanId":"1614c773eec9b5b6"}
{"@timestamp":"2021-07-26T09:44:40.905+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"866483a6c0bde622","spanId":"866483a6c0bde622"}
{"@timestamp":"2021-07-26T09:44:40.905+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"866483a6c0bde622","spanId":"866483a6c0bde622"}
{"@timestamp":"2021-07-26T09:44:40.905+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"866483a6c0bde622","spanId":"866483a6c0bde622"}
{"@timestamp":"2021-07-26T09:44:40.905+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@62db99a7","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"866483a6c0bde622","spanId":"866483a6c0bde622"}
{"@timestamp":"2021-07-26T09:44:43.025+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-30","level":"INFO","level_value":20000,"traceId":"2c665ed5ff8ce61a","spanId":"2c665ed5ff8ce61a"}
{"@timestamp":"2021-07-26T09:44:43.131+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-21","level":"INFO","level_value":20000,"traceId":"0b2f4747ca602789","spanId":"0b2f4747ca602789"}
{"@timestamp":"2021-07-26T09:44:43.222+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-39","level":"INFO","level_value":20000,"traceId":"e41d359a6b246e74","spanId":"e41d359a6b246e74"}
{"@timestamp":"2021-07-26T09:44:43.329+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-17","level":"INFO","level_value":20000,"traceId":"d08ac4e3cb2d00e5","spanId":"d08ac4e3cb2d00e5"}
{"@timestamp":"2021-07-26T09:44:46.140+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$fe193d92","thread_name":"reactor-http-nio-32","level":"INFO","level_value":20000,"traceId":"6e8b311b8b0206de","spanId":"6e8b311b8b0206de"}
{"@timestamp":"2021-07-26T09:45:26.319+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 17784 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:26.305+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:26.329+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:26.437+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:26.438+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:31.932+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:32.399+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:32.408+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:32.417+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:34.643+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:34.654+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:34.655+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:34.656+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:34.953+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:34.954+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 8515 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:36.382+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:45:41.183+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:45:44.165+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:44.231+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:46.887+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:49.671+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:51.967+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:45:52.145+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.259+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.395+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.402+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.443+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.444+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.446+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.446+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.446+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.447+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.447+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.846+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.853+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.856+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.865+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627260352863 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.888+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.889+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627260352889, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.892+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.894+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.935+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.936+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:52.968+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:56.744+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:45:59.996+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:46:00.030+09:00","@version":"1","message":"Started DemoApplication in 39.859 seconds (JVM running for 42.127)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:46:20.666+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:46:20.667+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:46:20.671+09:00","@version":"1","message":"Completed initialization in 4 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:46:20.798+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:20.797+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:20.797+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:20.799+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:20.800+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:20.799+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:20.800+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:20.800+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:20.800+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:20.800+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:20.800+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:20.800+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:20.847+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:20.848+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:20.849+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:20.849+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:20.951+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:20.952+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:20.952+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:20.952+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:21.050+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:21.050+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:21.051+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:21.051+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:21.152+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:21.153+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:21.154+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:21.154+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:21.243+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:21.245+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:21.245+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:21.245+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:21.246+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:21.245+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:21.246+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:21.246+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:21.247+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:21.246+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:21.246+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:21.249+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:21.249+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:21.250+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:21.251+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:21.251+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:21.252+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:21.252+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:21.258+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:21.258+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:21.906+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:21.908+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:21.916+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:21.916+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:21.917+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:21.917+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:21.917+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:21.917+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:21.921+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:21.921+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:21.922+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:21.924+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:28.540+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:28.540+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:28.540+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:28.540+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:28.542+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:28.542+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:28.543+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:28.543+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:28.545+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:28.546+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:28.571+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:28.572+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:28.678+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:28.679+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:28.771+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:28.772+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:29.425+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:29.426+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:29.441+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:29.441+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:29.563+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:46:29.567+09:00","@version":"1","message":"Dropped 7 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T09:46:33.426+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-49","level":"INFO","level_value":20000,"traceId":"f4b55c5c1bc220c9","spanId":"f4b55c5c1bc220c9"}
{"@timestamp":"2021-07-26T09:46:33.426+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-37","level":"INFO","level_value":20000,"traceId":"1634dd99c1a8dcde","spanId":"1634dd99c1a8dcde"}
{"@timestamp":"2021-07-26T09:46:33.426+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-48","level":"INFO","level_value":20000,"traceId":"767390067d618d58","spanId":"767390067d618d58"}
{"@timestamp":"2021-07-26T09:46:33.426+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-50","level":"INFO","level_value":20000,"traceId":"7089de970f7b93a3","spanId":"7089de970f7b93a3"}
{"@timestamp":"2021-07-26T09:46:33.426+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-41","level":"INFO","level_value":20000,"traceId":"17fef2cc0d3c8a2d","spanId":"17fef2cc0d3c8a2d"}
{"@timestamp":"2021-07-26T09:46:33.426+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"3b98324a49aa2f51","spanId":"3b98324a49aa2f51"}
{"@timestamp":"2021-07-26T09:46:33.426+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-30","level":"INFO","level_value":20000,"traceId":"e49cd63929a2470a","spanId":"e49cd63929a2470a"}
{"@timestamp":"2021-07-26T09:46:33.490+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-41","level":"INFO","level_value":20000,"traceId":"797a16caa0b7995e","spanId":"797a16caa0b7995e"}
{"@timestamp":"2021-07-26T09:46:36.091+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:36.092+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:36.428+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-48","level":"INFO","level_value":20000,"traceId":"e0517bdb68b32f10","spanId":"e0517bdb68b32f10"}
{"@timestamp":"2021-07-26T09:46:39.439+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-48","level":"INFO","level_value":20000,"traceId":"18eddb5cac964967","spanId":"18eddb5cac964967"}
{"@timestamp":"2021-07-26T09:46:55.690+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:46:55.691+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:46:55.691+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:46:55.692+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:46:55.695+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:46:55.696+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:46:55.790+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:46:55.790+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:46:55.791+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:46:55.791+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:46:55.794+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:46:55.795+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:46:55.892+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:46:55.893+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:46:55.893+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:46:55.894+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:46:55.898+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:46:55.899+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:46:55.992+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:46:55.993+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:46:55.993+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:46:55.994+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:46:55.998+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:46:55.998+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:46:56.091+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:46:56.092+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:46:56.092+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:46:56.092+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:46:56.096+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:46:56.097+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:46:56.197+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:46:56.198+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:46:56.198+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:46:56.199+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:46:56.202+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:46:56.203+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:46:56.294+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:46:56.295+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:46:56.297+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:46:56.298+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:46:56.303+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:46:56.303+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:46:56.392+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:46:56.392+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:46:56.393+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:46:56.393+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:46:56.397+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:46:56.398+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:46:56.493+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:46:56.494+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:46:56.494+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:46:56.495+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:46:56.498+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:46:56.499+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:46:56.593+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:46:56.594+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:46:56.594+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:46:56.595+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:46:56.599+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:46:56.600+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:47:03.200+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:47:03.200+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:47:03.308+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:47:03.308+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:47:03.415+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:47:03.415+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:47:03.507+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:47:03.507+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:47:03.614+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:47:03.615+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:47:03.719+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:47:03.719+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:47:03.812+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:47:03.813+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:47:03.903+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:47:03.904+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:47:04.014+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:47:04.015+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:47:04.121+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:47:04.122+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:47:10.707+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:47:10.709+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-1","level":"INFO","level_value":20000,"traceId":"34dfaf67a735de3d","spanId":"34dfaf67a735de3d"}
{"@timestamp":"2021-07-26T09:47:10.827+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:47:10.828+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"4c171e6114fc31ac","spanId":"4c171e6114fc31ac"}
{"@timestamp":"2021-07-26T09:47:10.933+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:47:10.933+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-4","level":"INFO","level_value":20000,"traceId":"30e9574e02daf28b","spanId":"30e9574e02daf28b"}
{"@timestamp":"2021-07-26T09:47:11.024+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:47:11.025+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"38e04b2879978414","spanId":"38e04b2879978414"}
{"@timestamp":"2021-07-26T09:47:11.147+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:47:11.147+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"36b5c8168e314e75","spanId":"36b5c8168e314e75"}
{"@timestamp":"2021-07-26T09:47:11.223+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:47:11.223+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-7","level":"INFO","level_value":20000,"traceId":"d8ce153d9571cede","spanId":"d8ce153d9571cede"}
{"@timestamp":"2021-07-26T09:47:11.329+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:47:11.329+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-8","level":"INFO","level_value":20000,"traceId":"3bcff62aba188d87","spanId":"3bcff62aba188d87"}
{"@timestamp":"2021-07-26T09:47:11.418+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:47:11.419+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"8ad2de93dc43b770","spanId":"8ad2de93dc43b770"}
{"@timestamp":"2021-07-26T09:47:11.525+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:47:11.526+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-5","level":"INFO","level_value":20000,"traceId":"68f81ae09f8b41d7","spanId":"68f81ae09f8b41d7"}
{"@timestamp":"2021-07-26T09:47:11.633+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:47:11.634+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-6","level":"INFO","level_value":20000,"traceId":"49236d97e16b5902","spanId":"49236d97e16b5902"}
{"@timestamp":"2021-07-26T09:47:17.724+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:17.725+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:17.832+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:17.833+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:17.936+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:17.936+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.044+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.046+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.151+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.152+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.244+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.244+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.340+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.343+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.424+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.424+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.531+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.532+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.652+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:18.653+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:47:54.013+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0a7ca62f30c6ab78","spanId":"0a7ca62f30c6ab78"}
{"@timestamp":"2021-07-26T09:47:54.014+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0a7ca62f30c6ab78","spanId":"0a7ca62f30c6ab78"}
{"@timestamp":"2021-07-26T09:47:54.014+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0a7ca62f30c6ab78","spanId":"0a7ca62f30c6ab78"}
{"@timestamp":"2021-07-26T09:47:54.014+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0a7ca62f30c6ab78","spanId":"0a7ca62f30c6ab78"}
{"@timestamp":"2021-07-26T09:47:54.020+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0a7ca62f30c6ab78","spanId":"0a7ca62f30c6ab78"}
{"@timestamp":"2021-07-26T09:47:54.020+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"0a7ca62f30c6ab78","spanId":"0a7ca62f30c6ab78"}
{"@timestamp":"2021-07-26T09:47:54.113+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"12aca4a741a4ab84","spanId":"12aca4a741a4ab84"}
{"@timestamp":"2021-07-26T09:47:54.113+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"12aca4a741a4ab84","spanId":"12aca4a741a4ab84"}
{"@timestamp":"2021-07-26T09:47:54.113+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"12aca4a741a4ab84","spanId":"12aca4a741a4ab84"}
{"@timestamp":"2021-07-26T09:47:54.113+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"12aca4a741a4ab84","spanId":"12aca4a741a4ab84"}
{"@timestamp":"2021-07-26T09:47:54.117+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"12aca4a741a4ab84","spanId":"12aca4a741a4ab84"}
{"@timestamp":"2021-07-26T09:47:54.117+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"12aca4a741a4ab84","spanId":"12aca4a741a4ab84"}
{"@timestamp":"2021-07-26T09:47:54.214+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"5dd68236599e073e","spanId":"5dd68236599e073e"}
{"@timestamp":"2021-07-26T09:47:54.214+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"5dd68236599e073e","spanId":"5dd68236599e073e"}
{"@timestamp":"2021-07-26T09:47:54.215+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"5dd68236599e073e","spanId":"5dd68236599e073e"}
{"@timestamp":"2021-07-26T09:47:54.215+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"5dd68236599e073e","spanId":"5dd68236599e073e"}
{"@timestamp":"2021-07-26T09:47:54.217+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"5dd68236599e073e","spanId":"5dd68236599e073e"}
{"@timestamp":"2021-07-26T09:47:54.218+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"5dd68236599e073e","spanId":"5dd68236599e073e"}
{"@timestamp":"2021-07-26T09:47:54.314+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ad37e954ec5b1720","spanId":"ad37e954ec5b1720"}
{"@timestamp":"2021-07-26T09:47:54.314+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ad37e954ec5b1720","spanId":"ad37e954ec5b1720"}
{"@timestamp":"2021-07-26T09:47:54.314+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ad37e954ec5b1720","spanId":"ad37e954ec5b1720"}
{"@timestamp":"2021-07-26T09:47:54.314+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ad37e954ec5b1720","spanId":"ad37e954ec5b1720"}
{"@timestamp":"2021-07-26T09:47:54.316+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ad37e954ec5b1720","spanId":"ad37e954ec5b1720"}
{"@timestamp":"2021-07-26T09:47:54.316+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"ad37e954ec5b1720","spanId":"ad37e954ec5b1720"}
{"@timestamp":"2021-07-26T09:47:54.415+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ea49df6044859256","spanId":"ea49df6044859256"}
{"@timestamp":"2021-07-26T09:47:54.416+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ea49df6044859256","spanId":"ea49df6044859256"}
{"@timestamp":"2021-07-26T09:47:54.417+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ea49df6044859256","spanId":"ea49df6044859256"}
{"@timestamp":"2021-07-26T09:47:54.417+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ea49df6044859256","spanId":"ea49df6044859256"}
{"@timestamp":"2021-07-26T09:47:54.419+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ea49df6044859256","spanId":"ea49df6044859256"}
{"@timestamp":"2021-07-26T09:47:54.419+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"ea49df6044859256","spanId":"ea49df6044859256"}
{"@timestamp":"2021-07-26T09:47:54.513+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fa4546b3a6a424d1","spanId":"fa4546b3a6a424d1"}
{"@timestamp":"2021-07-26T09:47:54.513+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fa4546b3a6a424d1","spanId":"fa4546b3a6a424d1"}
{"@timestamp":"2021-07-26T09:47:54.514+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fa4546b3a6a424d1","spanId":"fa4546b3a6a424d1"}
{"@timestamp":"2021-07-26T09:47:54.515+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fa4546b3a6a424d1","spanId":"fa4546b3a6a424d1"}
{"@timestamp":"2021-07-26T09:47:54.518+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fa4546b3a6a424d1","spanId":"fa4546b3a6a424d1"}
{"@timestamp":"2021-07-26T09:47:54.518+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"fa4546b3a6a424d1","spanId":"fa4546b3a6a424d1"}
{"@timestamp":"2021-07-26T09:47:54.614+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"5c835db29eab30ac","spanId":"5c835db29eab30ac"}
{"@timestamp":"2021-07-26T09:47:54.614+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"5c835db29eab30ac","spanId":"5c835db29eab30ac"}
{"@timestamp":"2021-07-26T09:47:54.615+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"5c835db29eab30ac","spanId":"5c835db29eab30ac"}
{"@timestamp":"2021-07-26T09:47:54.615+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"5c835db29eab30ac","spanId":"5c835db29eab30ac"}
{"@timestamp":"2021-07-26T09:47:54.617+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"5c835db29eab30ac","spanId":"5c835db29eab30ac"}
{"@timestamp":"2021-07-26T09:47:54.618+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"5c835db29eab30ac","spanId":"5c835db29eab30ac"}
{"@timestamp":"2021-07-26T09:47:54.713+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"27850e82f6190aa7","spanId":"27850e82f6190aa7"}
{"@timestamp":"2021-07-26T09:47:54.714+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"27850e82f6190aa7","spanId":"27850e82f6190aa7"}
{"@timestamp":"2021-07-26T09:47:54.714+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"27850e82f6190aa7","spanId":"27850e82f6190aa7"}
{"@timestamp":"2021-07-26T09:47:54.715+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"27850e82f6190aa7","spanId":"27850e82f6190aa7"}
{"@timestamp":"2021-07-26T09:47:54.717+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"27850e82f6190aa7","spanId":"27850e82f6190aa7"}
{"@timestamp":"2021-07-26T09:47:54.718+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"27850e82f6190aa7","spanId":"27850e82f6190aa7"}
{"@timestamp":"2021-07-26T09:47:54.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"8672f8e65f0f2132","spanId":"8672f8e65f0f2132"}
{"@timestamp":"2021-07-26T09:47:54.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"8672f8e65f0f2132","spanId":"8672f8e65f0f2132"}
{"@timestamp":"2021-07-26T09:47:54.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"8672f8e65f0f2132","spanId":"8672f8e65f0f2132"}
{"@timestamp":"2021-07-26T09:47:54.813+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"8672f8e65f0f2132","spanId":"8672f8e65f0f2132"}
{"@timestamp":"2021-07-26T09:47:54.816+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"8672f8e65f0f2132","spanId":"8672f8e65f0f2132"}
{"@timestamp":"2021-07-26T09:47:54.817+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"8672f8e65f0f2132","spanId":"8672f8e65f0f2132"}
{"@timestamp":"2021-07-26T09:47:54.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f92580b6f0cbb6a4","spanId":"f92580b6f0cbb6a4"}
{"@timestamp":"2021-07-26T09:47:54.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f92580b6f0cbb6a4","spanId":"f92580b6f0cbb6a4"}
{"@timestamp":"2021-07-26T09:47:54.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f92580b6f0cbb6a4","spanId":"f92580b6f0cbb6a4"}
{"@timestamp":"2021-07-26T09:47:54.915+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f92580b6f0cbb6a4","spanId":"f92580b6f0cbb6a4"}
{"@timestamp":"2021-07-26T09:47:54.917+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f92580b6f0cbb6a4","spanId":"f92580b6f0cbb6a4"}
{"@timestamp":"2021-07-26T09:47:54.917+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"f92580b6f0cbb6a4","spanId":"f92580b6f0cbb6a4"}
{"@timestamp":"2021-07-26T09:47:57.036+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-37","level":"INFO","level_value":20000,"traceId":"0a7ca62f30c6ab78","spanId":"0a7ca62f30c6ab78"}
{"@timestamp":"2021-07-26T09:47:57.127+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-41","level":"INFO","level_value":20000,"traceId":"12aca4a741a4ab84","spanId":"12aca4a741a4ab84"}
{"@timestamp":"2021-07-26T09:48:00.143+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-41","level":"INFO","level_value":20000,"traceId":"f92580b6f0cbb6a4","spanId":"f92580b6f0cbb6a4"}
{"@timestamp":"2021-07-26T09:48:00.143+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-30","level":"INFO","level_value":20000,"traceId":"27850e82f6190aa7","spanId":"27850e82f6190aa7"}
{"@timestamp":"2021-07-26T09:48:00.143+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-50","level":"INFO","level_value":20000,"traceId":"ea49df6044859256","spanId":"ea49df6044859256"}
{"@timestamp":"2021-07-26T09:48:00.145+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-13","level":"INFO","level_value":20000,"traceId":"5c835db29eab30ac","spanId":"5c835db29eab30ac"}
{"@timestamp":"2021-07-26T09:48:00.152+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-37","level":"INFO","level_value":20000,"traceId":"8672f8e65f0f2132","spanId":"8672f8e65f0f2132"}
{"@timestamp":"2021-07-26T09:48:00.152+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-49","level":"INFO","level_value":20000,"traceId":"ad37e954ec5b1720","spanId":"ad37e954ec5b1720"}
{"@timestamp":"2021-07-26T09:48:00.152+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-48","level":"INFO","level_value":20000,"traceId":"5dd68236599e073e","spanId":"5dd68236599e073e"}
{"@timestamp":"2021-07-26T09:48:00.154+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"reactor-http-nio-7","level":"INFO","level_value":20000,"traceId":"fa4546b3a6a424d1","spanId":"fa4546b3a6a424d1"}
{"@timestamp":"2021-07-26T09:48:39.822+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:39.823+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:39.823+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:39.823+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@551d1d34","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:39.826+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:39.826+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:47.337+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:47.337+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-3","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:54.850+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:48:54.850+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$978fdddb","thread_name":"parallel-2","level":"INFO","level_value":20000,"traceId":"41f6d9e8c9e66a30","spanId":"41f6d9e8c9e66a30"}
{"@timestamp":"2021-07-26T09:49:01.856+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:49:01.857+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 7000ms in 'source(MonoDefer)' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:50:52.451+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:50:52.868+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:50:52.869+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:50:52.869+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:50:52.869+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:50:52.869+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:50:52.869+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:50:52.869+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:50:52.883+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:50.854+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 20508 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:50.848+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:50.863+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:50.937+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:50.937+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:53.426+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:53.958+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:53.967+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:53.976+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:57.981+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:58.004+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:58.006+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:58.007+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:58.432+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:51:58.433+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 7495 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:00.586+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:52:12.125+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:52:18.001+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:18.145+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:22.523+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:28.880+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:32.577+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:52:32.759+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:32.938+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.100+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.108+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.145+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.145+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.145+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.146+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.146+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.146+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.147+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.748+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.757+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.772+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.797+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627260753794 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.857+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.858+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627260753858, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.863+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.869+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.941+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.944+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:52:33.997+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:43.122+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 25808 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:43.108+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:43.127+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:43.222+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:43.222+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:47.434+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:48.221+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:48.235+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:48.247+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:55.649+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:55.732+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:55.739+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:55.740+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:56.520+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:56.521+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 13297 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:53:59.223+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:54:09.399+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:54:13.396+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:13.499+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:17.922+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:22.623+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:26.774+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:54:26.940+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.068+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.226+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.238+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.287+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.288+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.289+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.290+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.291+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.291+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.292+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.862+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.869+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.875+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.888+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627260867886 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.932+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.936+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627260867936, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.940+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:27.945+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:28.073+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:28.075+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:28.131+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:33.493+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:38.756+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:54:38.823+09:00","@version":"1","message":"Started DemoApplication in 60.884 seconds (JVM running for 63.215)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:58:33.622+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:58:33.623+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:58:33.630+09:00","@version":"1","message":"Completed initialization in 6 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:58:33.773+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1a64437f4cf45679","spanId":"1a64437f4cf45679"}
{"@timestamp":"2021-07-26T09:58:33.772+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"291367b52d7805ef","spanId":"291367b52d7805ef"}
{"@timestamp":"2021-07-26T09:58:33.775+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1a64437f4cf45679","spanId":"1a64437f4cf45679"}
{"@timestamp":"2021-07-26T09:58:33.775+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"291367b52d7805ef","spanId":"291367b52d7805ef"}
{"@timestamp":"2021-07-26T09:58:33.775+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1a64437f4cf45679","spanId":"1a64437f4cf45679"}
{"@timestamp":"2021-07-26T09:58:33.775+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"291367b52d7805ef","spanId":"291367b52d7805ef"}
{"@timestamp":"2021-07-26T09:58:33.775+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1a64437f4cf45679","spanId":"1a64437f4cf45679"}
{"@timestamp":"2021-07-26T09:58:33.772+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"cab6a3146c8746de","spanId":"cab6a3146c8746de"}
{"@timestamp":"2021-07-26T09:58:33.772+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d474b9d325fef942","spanId":"d474b9d325fef942"}
{"@timestamp":"2021-07-26T09:58:33.776+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"cab6a3146c8746de","spanId":"cab6a3146c8746de"}
{"@timestamp":"2021-07-26T09:58:33.775+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"291367b52d7805ef","spanId":"291367b52d7805ef"}
{"@timestamp":"2021-07-26T09:58:33.776+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d474b9d325fef942","spanId":"d474b9d325fef942"}
{"@timestamp":"2021-07-26T09:58:33.776+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"cab6a3146c8746de","spanId":"cab6a3146c8746de"}
{"@timestamp":"2021-07-26T09:58:33.776+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d474b9d325fef942","spanId":"d474b9d325fef942"}
{"@timestamp":"2021-07-26T09:58:33.777+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"cab6a3146c8746de","spanId":"cab6a3146c8746de"}
{"@timestamp":"2021-07-26T09:58:33.778+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d474b9d325fef942","spanId":"d474b9d325fef942"}
{"@timestamp":"2021-07-26T09:58:33.843+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"feb2b485192cd01e","spanId":"feb2b485192cd01e"}
{"@timestamp":"2021-07-26T09:58:33.844+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"feb2b485192cd01e","spanId":"feb2b485192cd01e"}
{"@timestamp":"2021-07-26T09:58:33.844+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"feb2b485192cd01e","spanId":"feb2b485192cd01e"}
{"@timestamp":"2021-07-26T09:58:33.845+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"feb2b485192cd01e","spanId":"feb2b485192cd01e"}
{"@timestamp":"2021-07-26T09:58:33.944+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1bd560ea30573f46","spanId":"1bd560ea30573f46"}
{"@timestamp":"2021-07-26T09:58:33.944+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1bd560ea30573f46","spanId":"1bd560ea30573f46"}
{"@timestamp":"2021-07-26T09:58:33.947+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1bd560ea30573f46","spanId":"1bd560ea30573f46"}
{"@timestamp":"2021-07-26T09:58:33.947+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1bd560ea30573f46","spanId":"1bd560ea30573f46"}
{"@timestamp":"2021-07-26T09:58:34.044+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709c6b73b1ab5482","spanId":"709c6b73b1ab5482"}
{"@timestamp":"2021-07-26T09:58:34.044+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709c6b73b1ab5482","spanId":"709c6b73b1ab5482"}
{"@timestamp":"2021-07-26T09:58:34.045+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709c6b73b1ab5482","spanId":"709c6b73b1ab5482"}
{"@timestamp":"2021-07-26T09:58:34.045+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709c6b73b1ab5482","spanId":"709c6b73b1ab5482"}
{"@timestamp":"2021-07-26T09:58:34.145+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ec2ac04e6858dd7b","spanId":"ec2ac04e6858dd7b"}
{"@timestamp":"2021-07-26T09:58:34.146+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ec2ac04e6858dd7b","spanId":"ec2ac04e6858dd7b"}
{"@timestamp":"2021-07-26T09:58:34.147+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ec2ac04e6858dd7b","spanId":"ec2ac04e6858dd7b"}
{"@timestamp":"2021-07-26T09:58:34.147+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ec2ac04e6858dd7b","spanId":"ec2ac04e6858dd7b"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"291367b52d7805ef","spanId":"291367b52d7805ef"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ec2ac04e6858dd7b","spanId":"ec2ac04e6858dd7b"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"feb2b485192cd01e","spanId":"feb2b485192cd01e"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1bd560ea30573f46","spanId":"1bd560ea30573f46"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709c6b73b1ab5482","spanId":"709c6b73b1ab5482"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d474b9d325fef942","spanId":"d474b9d325fef942"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1a64437f4cf45679","spanId":"1a64437f4cf45679"}
{"@timestamp":"2021-07-26T09:58:34.231+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"709c6b73b1ab5482","spanId":"709c6b73b1ab5482"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"cab6a3146c8746de","spanId":"cab6a3146c8746de"}
{"@timestamp":"2021-07-26T09:58:34.231+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d474b9d325fef942","spanId":"d474b9d325fef942"}
{"@timestamp":"2021-07-26T09:58:34.231+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"cab6a3146c8746de","spanId":"cab6a3146c8746de"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"291367b52d7805ef","spanId":"291367b52d7805ef"}
{"@timestamp":"2021-07-26T09:58:34.230+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ec2ac04e6858dd7b","spanId":"ec2ac04e6858dd7b"}
{"@timestamp":"2021-07-26T09:58:34.231+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1a64437f4cf45679","spanId":"1a64437f4cf45679"}
{"@timestamp":"2021-07-26T09:58:34.231+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"1bd560ea30573f46","spanId":"1bd560ea30573f46"}
{"@timestamp":"2021-07-26T09:58:34.231+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"feb2b485192cd01e","spanId":"feb2b485192cd01e"}
{"@timestamp":"2021-07-26T09:58:34.242+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8c04293f2f66607e","spanId":"8c04293f2f66607e"}
{"@timestamp":"2021-07-26T09:58:34.243+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8c04293f2f66607e","spanId":"8c04293f2f66607e"}
{"@timestamp":"2021-07-26T09:58:34.244+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8c04293f2f66607e","spanId":"8c04293f2f66607e"}
{"@timestamp":"2021-07-26T09:58:34.244+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8c04293f2f66607e","spanId":"8c04293f2f66607e"}
{"@timestamp":"2021-07-26T09:58:34.251+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8c04293f2f66607e","spanId":"8c04293f2f66607e"}
{"@timestamp":"2021-07-26T09:58:34.252+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8c04293f2f66607e","spanId":"8c04293f2f66607e"}
{"@timestamp":"2021-07-26T09:58:34.342+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"58f230b87c33e539","spanId":"58f230b87c33e539"}
{"@timestamp":"2021-07-26T09:58:34.342+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"58f230b87c33e539","spanId":"58f230b87c33e539"}
{"@timestamp":"2021-07-26T09:58:34.343+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"58f230b87c33e539","spanId":"58f230b87c33e539"}
{"@timestamp":"2021-07-26T09:58:34.343+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"58f230b87c33e539","spanId":"58f230b87c33e539"}
{"@timestamp":"2021-07-26T09:58:34.346+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"58f230b87c33e539","spanId":"58f230b87c33e539"}
{"@timestamp":"2021-07-26T09:58:34.346+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"58f230b87c33e539","spanId":"58f230b87c33e539"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.233+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.233+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.233+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.233+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.234+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.234+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.234+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.238+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.238+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:38.238+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T09:58:39.823+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T09:58:39.824+09:00","@version":"1","message":"Dropped 7 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T09:59:27.306+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:59:27.881+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:59:27.882+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:59:27.883+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:59:27.883+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:59:27.886+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:59:27.886+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:59:27.886+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T09:59:27.910+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:00:06.985+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e538ac7488013bf2","spanId":"e538ac7488013bf2"}
{"@timestamp":"2021-07-26T10:00:06.986+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e538ac7488013bf2","spanId":"e538ac7488013bf2"}
{"@timestamp":"2021-07-26T10:00:06.986+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e538ac7488013bf2","spanId":"e538ac7488013bf2"}
{"@timestamp":"2021-07-26T10:00:06.987+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e538ac7488013bf2","spanId":"e538ac7488013bf2"}
{"@timestamp":"2021-07-26T10:00:06.993+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e538ac7488013bf2","spanId":"e538ac7488013bf2"}
{"@timestamp":"2021-07-26T10:00:06.994+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"e538ac7488013bf2","spanId":"e538ac7488013bf2"}
{"@timestamp":"2021-07-26T10:00:07.083+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68cefb51f3247f3a","spanId":"68cefb51f3247f3a"}
{"@timestamp":"2021-07-26T10:00:07.084+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68cefb51f3247f3a","spanId":"68cefb51f3247f3a"}
{"@timestamp":"2021-07-26T10:00:07.084+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68cefb51f3247f3a","spanId":"68cefb51f3247f3a"}
{"@timestamp":"2021-07-26T10:00:07.085+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68cefb51f3247f3a","spanId":"68cefb51f3247f3a"}
{"@timestamp":"2021-07-26T10:00:07.090+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68cefb51f3247f3a","spanId":"68cefb51f3247f3a"}
{"@timestamp":"2021-07-26T10:00:07.091+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"68cefb51f3247f3a","spanId":"68cefb51f3247f3a"}
{"@timestamp":"2021-07-26T10:00:07.183+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6d9ca549ee492b93","spanId":"6d9ca549ee492b93"}
{"@timestamp":"2021-07-26T10:00:07.184+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6d9ca549ee492b93","spanId":"6d9ca549ee492b93"}
{"@timestamp":"2021-07-26T10:00:07.184+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6d9ca549ee492b93","spanId":"6d9ca549ee492b93"}
{"@timestamp":"2021-07-26T10:00:07.185+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6d9ca549ee492b93","spanId":"6d9ca549ee492b93"}
{"@timestamp":"2021-07-26T10:00:07.188+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6d9ca549ee492b93","spanId":"6d9ca549ee492b93"}
{"@timestamp":"2021-07-26T10:00:07.188+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"6d9ca549ee492b93","spanId":"6d9ca549ee492b93"}
{"@timestamp":"2021-07-26T10:00:07.284+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1d7ee6808573c9fb","spanId":"1d7ee6808573c9fb"}
{"@timestamp":"2021-07-26T10:00:07.284+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1d7ee6808573c9fb","spanId":"1d7ee6808573c9fb"}
{"@timestamp":"2021-07-26T10:00:07.284+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1d7ee6808573c9fb","spanId":"1d7ee6808573c9fb"}
{"@timestamp":"2021-07-26T10:00:07.285+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1d7ee6808573c9fb","spanId":"1d7ee6808573c9fb"}
{"@timestamp":"2021-07-26T10:00:07.287+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1d7ee6808573c9fb","spanId":"1d7ee6808573c9fb"}
{"@timestamp":"2021-07-26T10:00:07.288+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1d7ee6808573c9fb","spanId":"1d7ee6808573c9fb"}
{"@timestamp":"2021-07-26T10:00:07.383+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bf774bd42f9fad26","spanId":"bf774bd42f9fad26"}
{"@timestamp":"2021-07-26T10:00:07.384+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bf774bd42f9fad26","spanId":"bf774bd42f9fad26"}
{"@timestamp":"2021-07-26T10:00:07.385+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bf774bd42f9fad26","spanId":"bf774bd42f9fad26"}
{"@timestamp":"2021-07-26T10:00:07.385+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bf774bd42f9fad26","spanId":"bf774bd42f9fad26"}
{"@timestamp":"2021-07-26T10:00:07.388+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bf774bd42f9fad26","spanId":"bf774bd42f9fad26"}
{"@timestamp":"2021-07-26T10:00:07.389+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"bf774bd42f9fad26","spanId":"bf774bd42f9fad26"}
{"@timestamp":"2021-07-26T10:00:07.484+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a7d3bd7197bb2897","spanId":"a7d3bd7197bb2897"}
{"@timestamp":"2021-07-26T10:00:07.485+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a7d3bd7197bb2897","spanId":"a7d3bd7197bb2897"}
{"@timestamp":"2021-07-26T10:00:07.486+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a7d3bd7197bb2897","spanId":"a7d3bd7197bb2897"}
{"@timestamp":"2021-07-26T10:00:07.486+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a7d3bd7197bb2897","spanId":"a7d3bd7197bb2897"}
{"@timestamp":"2021-07-26T10:00:07.490+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a7d3bd7197bb2897","spanId":"a7d3bd7197bb2897"}
{"@timestamp":"2021-07-26T10:00:07.490+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"a7d3bd7197bb2897","spanId":"a7d3bd7197bb2897"}
{"@timestamp":"2021-07-26T10:00:07.583+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"714ec74b8c421a2f","spanId":"714ec74b8c421a2f"}
{"@timestamp":"2021-07-26T10:00:07.584+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"714ec74b8c421a2f","spanId":"714ec74b8c421a2f"}
{"@timestamp":"2021-07-26T10:00:07.584+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"714ec74b8c421a2f","spanId":"714ec74b8c421a2f"}
{"@timestamp":"2021-07-26T10:00:07.584+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"714ec74b8c421a2f","spanId":"714ec74b8c421a2f"}
{"@timestamp":"2021-07-26T10:00:07.587+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"714ec74b8c421a2f","spanId":"714ec74b8c421a2f"}
{"@timestamp":"2021-07-26T10:00:07.588+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"714ec74b8c421a2f","spanId":"714ec74b8c421a2f"}
{"@timestamp":"2021-07-26T10:00:07.683+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"6ffab36b5a4e3f1e","spanId":"6ffab36b5a4e3f1e"}
{"@timestamp":"2021-07-26T10:00:07.684+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"6ffab36b5a4e3f1e","spanId":"6ffab36b5a4e3f1e"}
{"@timestamp":"2021-07-26T10:00:07.684+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"6ffab36b5a4e3f1e","spanId":"6ffab36b5a4e3f1e"}
{"@timestamp":"2021-07-26T10:00:07.685+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"6ffab36b5a4e3f1e","spanId":"6ffab36b5a4e3f1e"}
{"@timestamp":"2021-07-26T10:00:07.688+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"6ffab36b5a4e3f1e","spanId":"6ffab36b5a4e3f1e"}
{"@timestamp":"2021-07-26T10:00:07.688+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"6ffab36b5a4e3f1e","spanId":"6ffab36b5a4e3f1e"}
{"@timestamp":"2021-07-26T10:00:07.784+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"41d7069176749cbb","spanId":"41d7069176749cbb"}
{"@timestamp":"2021-07-26T10:00:07.784+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"41d7069176749cbb","spanId":"41d7069176749cbb"}
{"@timestamp":"2021-07-26T10:00:07.784+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"41d7069176749cbb","spanId":"41d7069176749cbb"}
{"@timestamp":"2021-07-26T10:00:07.785+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"41d7069176749cbb","spanId":"41d7069176749cbb"}
{"@timestamp":"2021-07-26T10:00:07.787+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"41d7069176749cbb","spanId":"41d7069176749cbb"}
{"@timestamp":"2021-07-26T10:00:07.788+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"41d7069176749cbb","spanId":"41d7069176749cbb"}
{"@timestamp":"2021-07-26T10:00:07.884+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3f393115f755dc82","spanId":"3f393115f755dc82"}
{"@timestamp":"2021-07-26T10:00:07.884+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3f393115f755dc82","spanId":"3f393115f755dc82"}
{"@timestamp":"2021-07-26T10:00:07.885+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3f393115f755dc82","spanId":"3f393115f755dc82"}
{"@timestamp":"2021-07-26T10:00:07.885+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3f393115f755dc82","spanId":"3f393115f755dc82"}
{"@timestamp":"2021-07-26T10:00:07.888+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3f393115f755dc82","spanId":"3f393115f755dc82"}
{"@timestamp":"2021-07-26T10:00:07.889+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"3f393115f755dc82","spanId":"3f393115f755dc82"}
{"@timestamp":"2021-07-26T10:00:10.623+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.623+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.624+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.624+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.623+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.625+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.626+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.626+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.630+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.628+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.630+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.630+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.632+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.629+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.634+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.629+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.635+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:10.649+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:13.858+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:13.858+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:21.697+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7bfad9c1ea2042c8","spanId":"7bfad9c1ea2042c8"}
{"@timestamp":"2021-07-26T10:00:21.697+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7bfad9c1ea2042c8","spanId":"7bfad9c1ea2042c8"}
{"@timestamp":"2021-07-26T10:00:21.698+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7bfad9c1ea2042c8","spanId":"7bfad9c1ea2042c8"}
{"@timestamp":"2021-07-26T10:00:21.698+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7bfad9c1ea2042c8","spanId":"7bfad9c1ea2042c8"}
{"@timestamp":"2021-07-26T10:00:21.701+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7bfad9c1ea2042c8","spanId":"7bfad9c1ea2042c8"}
{"@timestamp":"2021-07-26T10:00:21.701+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7bfad9c1ea2042c8","spanId":"7bfad9c1ea2042c8"}
{"@timestamp":"2021-07-26T10:00:21.797+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"54a511ac40094ad1","spanId":"54a511ac40094ad1"}
{"@timestamp":"2021-07-26T10:00:21.798+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"54a511ac40094ad1","spanId":"54a511ac40094ad1"}
{"@timestamp":"2021-07-26T10:00:21.798+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"54a511ac40094ad1","spanId":"54a511ac40094ad1"}
{"@timestamp":"2021-07-26T10:00:21.799+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"54a511ac40094ad1","spanId":"54a511ac40094ad1"}
{"@timestamp":"2021-07-26T10:00:21.801+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"54a511ac40094ad1","spanId":"54a511ac40094ad1"}
{"@timestamp":"2021-07-26T10:00:21.801+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"54a511ac40094ad1","spanId":"54a511ac40094ad1"}
{"@timestamp":"2021-07-26T10:00:21.897+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f4003cc84eea8711","spanId":"f4003cc84eea8711"}
{"@timestamp":"2021-07-26T10:00:21.898+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f4003cc84eea8711","spanId":"f4003cc84eea8711"}
{"@timestamp":"2021-07-26T10:00:21.898+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f4003cc84eea8711","spanId":"f4003cc84eea8711"}
{"@timestamp":"2021-07-26T10:00:21.899+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f4003cc84eea8711","spanId":"f4003cc84eea8711"}
{"@timestamp":"2021-07-26T10:00:21.901+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f4003cc84eea8711","spanId":"f4003cc84eea8711"}
{"@timestamp":"2021-07-26T10:00:21.902+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"f4003cc84eea8711","spanId":"f4003cc84eea8711"}
{"@timestamp":"2021-07-26T10:00:21.998+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2ea7477d2b092768","spanId":"2ea7477d2b092768"}
{"@timestamp":"2021-07-26T10:00:21.999+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2ea7477d2b092768","spanId":"2ea7477d2b092768"}
{"@timestamp":"2021-07-26T10:00:21.999+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2ea7477d2b092768","spanId":"2ea7477d2b092768"}
{"@timestamp":"2021-07-26T10:00:22.000+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2ea7477d2b092768","spanId":"2ea7477d2b092768"}
{"@timestamp":"2021-07-26T10:00:22.002+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2ea7477d2b092768","spanId":"2ea7477d2b092768"}
{"@timestamp":"2021-07-26T10:00:22.003+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"2ea7477d2b092768","spanId":"2ea7477d2b092768"}
{"@timestamp":"2021-07-26T10:00:22.060+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"f4003cc84eea8711","spanId":"f4003cc84eea8711"}
{"@timestamp":"2021-07-26T10:00:22.060+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"7bfad9c1ea2042c8","spanId":"7bfad9c1ea2042c8"}
{"@timestamp":"2021-07-26T10:00:22.060+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"54a511ac40094ad1","spanId":"54a511ac40094ad1"}
{"@timestamp":"2021-07-26T10:00:22.060+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"2ea7477d2b092768","spanId":"2ea7477d2b092768"}
{"@timestamp":"2021-07-26T10:00:22.097+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0c9843d50762380a","spanId":"0c9843d50762380a"}
{"@timestamp":"2021-07-26T10:00:22.097+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0c9843d50762380a","spanId":"0c9843d50762380a"}
{"@timestamp":"2021-07-26T10:00:22.098+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0c9843d50762380a","spanId":"0c9843d50762380a"}
{"@timestamp":"2021-07-26T10:00:22.098+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0c9843d50762380a","spanId":"0c9843d50762380a"}
{"@timestamp":"2021-07-26T10:00:22.101+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0c9843d50762380a","spanId":"0c9843d50762380a"}
{"@timestamp":"2021-07-26T10:00:22.102+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"0c9843d50762380a","spanId":"0c9843d50762380a"}
{"@timestamp":"2021-07-26T10:00:22.119+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"0c9843d50762380a","spanId":"0c9843d50762380a"}
{"@timestamp":"2021-07-26T10:00:22.198+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b88d9e83035e1b26","spanId":"b88d9e83035e1b26"}
{"@timestamp":"2021-07-26T10:00:22.199+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b88d9e83035e1b26","spanId":"b88d9e83035e1b26"}
{"@timestamp":"2021-07-26T10:00:22.199+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b88d9e83035e1b26","spanId":"b88d9e83035e1b26"}
{"@timestamp":"2021-07-26T10:00:22.199+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b88d9e83035e1b26","spanId":"b88d9e83035e1b26"}
{"@timestamp":"2021-07-26T10:00:22.201+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b88d9e83035e1b26","spanId":"b88d9e83035e1b26"}
{"@timestamp":"2021-07-26T10:00:22.202+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"b88d9e83035e1b26","spanId":"b88d9e83035e1b26"}
{"@timestamp":"2021-07-26T10:00:22.216+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"b88d9e83035e1b26","spanId":"b88d9e83035e1b26"}
{"@timestamp":"2021-07-26T10:00:22.298+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a27ee969c7759f8a","spanId":"a27ee969c7759f8a"}
{"@timestamp":"2021-07-26T10:00:22.298+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a27ee969c7759f8a","spanId":"a27ee969c7759f8a"}
{"@timestamp":"2021-07-26T10:00:22.299+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a27ee969c7759f8a","spanId":"a27ee969c7759f8a"}
{"@timestamp":"2021-07-26T10:00:22.299+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a27ee969c7759f8a","spanId":"a27ee969c7759f8a"}
{"@timestamp":"2021-07-26T10:00:22.301+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a27ee969c7759f8a","spanId":"a27ee969c7759f8a"}
{"@timestamp":"2021-07-26T10:00:22.302+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a27ee969c7759f8a","spanId":"a27ee969c7759f8a"}
{"@timestamp":"2021-07-26T10:00:22.315+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"a27ee969c7759f8a","spanId":"a27ee969c7759f8a"}
{"@timestamp":"2021-07-26T10:00:22.401+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5f16ea0cca7f6c2e","spanId":"5f16ea0cca7f6c2e"}
{"@timestamp":"2021-07-26T10:00:22.401+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5f16ea0cca7f6c2e","spanId":"5f16ea0cca7f6c2e"}
{"@timestamp":"2021-07-26T10:00:22.402+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5f16ea0cca7f6c2e","spanId":"5f16ea0cca7f6c2e"}
{"@timestamp":"2021-07-26T10:00:22.402+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5f16ea0cca7f6c2e","spanId":"5f16ea0cca7f6c2e"}
{"@timestamp":"2021-07-26T10:00:22.407+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5f16ea0cca7f6c2e","spanId":"5f16ea0cca7f6c2e"}
{"@timestamp":"2021-07-26T10:00:22.408+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5f16ea0cca7f6c2e","spanId":"5f16ea0cca7f6c2e"}
{"@timestamp":"2021-07-26T10:00:22.421+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"5f16ea0cca7f6c2e","spanId":"5f16ea0cca7f6c2e"}
{"@timestamp":"2021-07-26T10:00:22.502+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8e8c833b9e7b5956","spanId":"8e8c833b9e7b5956"}
{"@timestamp":"2021-07-26T10:00:22.503+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8e8c833b9e7b5956","spanId":"8e8c833b9e7b5956"}
{"@timestamp":"2021-07-26T10:00:22.504+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8e8c833b9e7b5956","spanId":"8e8c833b9e7b5956"}
{"@timestamp":"2021-07-26T10:00:22.506+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8e8c833b9e7b5956","spanId":"8e8c833b9e7b5956"}
{"@timestamp":"2021-07-26T10:00:22.511+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8e8c833b9e7b5956","spanId":"8e8c833b9e7b5956"}
{"@timestamp":"2021-07-26T10:00:22.511+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8e8c833b9e7b5956","spanId":"8e8c833b9e7b5956"}
{"@timestamp":"2021-07-26T10:00:22.526+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"8e8c833b9e7b5956","spanId":"8e8c833b9e7b5956"}
{"@timestamp":"2021-07-26T10:00:22.599+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6194a0f15d9f12cd","spanId":"6194a0f15d9f12cd"}
{"@timestamp":"2021-07-26T10:00:22.599+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6194a0f15d9f12cd","spanId":"6194a0f15d9f12cd"}
{"@timestamp":"2021-07-26T10:00:22.599+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6194a0f15d9f12cd","spanId":"6194a0f15d9f12cd"}
{"@timestamp":"2021-07-26T10:00:22.600+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6194a0f15d9f12cd","spanId":"6194a0f15d9f12cd"}
{"@timestamp":"2021-07-26T10:00:22.604+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6194a0f15d9f12cd","spanId":"6194a0f15d9f12cd"}
{"@timestamp":"2021-07-26T10:00:22.604+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6194a0f15d9f12cd","spanId":"6194a0f15d9f12cd"}
{"@timestamp":"2021-07-26T10:00:22.620+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"6194a0f15d9f12cd","spanId":"6194a0f15d9f12cd"}
{"@timestamp":"2021-07-26T10:00:29.560+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"29d17ad3f376280d","spanId":"29d17ad3f376280d"}
{"@timestamp":"2021-07-26T10:00:29.561+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"29d17ad3f376280d","spanId":"29d17ad3f376280d"}
{"@timestamp":"2021-07-26T10:00:29.561+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"29d17ad3f376280d","spanId":"29d17ad3f376280d"}
{"@timestamp":"2021-07-26T10:00:29.561+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"29d17ad3f376280d","spanId":"29d17ad3f376280d"}
{"@timestamp":"2021-07-26T10:00:29.563+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"29d17ad3f376280d","spanId":"29d17ad3f376280d"}
{"@timestamp":"2021-07-26T10:00:29.563+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"29d17ad3f376280d","spanId":"29d17ad3f376280d"}
{"@timestamp":"2021-07-26T10:00:29.579+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"29d17ad3f376280d","spanId":"29d17ad3f376280d"}
{"@timestamp":"2021-07-26T10:00:29.661+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"7e8fcf145a3ab7ce","spanId":"7e8fcf145a3ab7ce"}
{"@timestamp":"2021-07-26T10:00:29.662+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"7e8fcf145a3ab7ce","spanId":"7e8fcf145a3ab7ce"}
{"@timestamp":"2021-07-26T10:00:29.662+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"7e8fcf145a3ab7ce","spanId":"7e8fcf145a3ab7ce"}
{"@timestamp":"2021-07-26T10:00:29.662+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"7e8fcf145a3ab7ce","spanId":"7e8fcf145a3ab7ce"}
{"@timestamp":"2021-07-26T10:00:29.663+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"7e8fcf145a3ab7ce","spanId":"7e8fcf145a3ab7ce"}
{"@timestamp":"2021-07-26T10:00:29.663+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"7e8fcf145a3ab7ce","spanId":"7e8fcf145a3ab7ce"}
{"@timestamp":"2021-07-26T10:00:29.672+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"7e8fcf145a3ab7ce","spanId":"7e8fcf145a3ab7ce"}
{"@timestamp":"2021-07-26T10:00:29.764+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9b8c33322b9e7984","spanId":"9b8c33322b9e7984"}
{"@timestamp":"2021-07-26T10:00:29.764+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9b8c33322b9e7984","spanId":"9b8c33322b9e7984"}
{"@timestamp":"2021-07-26T10:00:29.764+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9b8c33322b9e7984","spanId":"9b8c33322b9e7984"}
{"@timestamp":"2021-07-26T10:00:29.765+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9b8c33322b9e7984","spanId":"9b8c33322b9e7984"}
{"@timestamp":"2021-07-26T10:00:29.766+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9b8c33322b9e7984","spanId":"9b8c33322b9e7984"}
{"@timestamp":"2021-07-26T10:00:29.766+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9b8c33322b9e7984","spanId":"9b8c33322b9e7984"}
{"@timestamp":"2021-07-26T10:00:29.777+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"9b8c33322b9e7984","spanId":"9b8c33322b9e7984"}
{"@timestamp":"2021-07-26T10:00:29.862+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ba7d180d17ca9e27","spanId":"ba7d180d17ca9e27"}
{"@timestamp":"2021-07-26T10:00:29.862+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ba7d180d17ca9e27","spanId":"ba7d180d17ca9e27"}
{"@timestamp":"2021-07-26T10:00:29.863+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ba7d180d17ca9e27","spanId":"ba7d180d17ca9e27"}
{"@timestamp":"2021-07-26T10:00:29.863+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ba7d180d17ca9e27","spanId":"ba7d180d17ca9e27"}
{"@timestamp":"2021-07-26T10:00:29.865+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ba7d180d17ca9e27","spanId":"ba7d180d17ca9e27"}
{"@timestamp":"2021-07-26T10:00:29.865+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"ba7d180d17ca9e27","spanId":"ba7d180d17ca9e27"}
{"@timestamp":"2021-07-26T10:00:29.875+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"ba7d180d17ca9e27","spanId":"ba7d180d17ca9e27"}
{"@timestamp":"2021-07-26T10:00:29.961+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8a8fd4f52a34765a","spanId":"8a8fd4f52a34765a"}
{"@timestamp":"2021-07-26T10:00:29.961+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8a8fd4f52a34765a","spanId":"8a8fd4f52a34765a"}
{"@timestamp":"2021-07-26T10:00:29.962+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8a8fd4f52a34765a","spanId":"8a8fd4f52a34765a"}
{"@timestamp":"2021-07-26T10:00:29.962+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8a8fd4f52a34765a","spanId":"8a8fd4f52a34765a"}
{"@timestamp":"2021-07-26T10:00:29.963+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8a8fd4f52a34765a","spanId":"8a8fd4f52a34765a"}
{"@timestamp":"2021-07-26T10:00:29.964+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8a8fd4f52a34765a","spanId":"8a8fd4f52a34765a"}
{"@timestamp":"2021-07-26T10:00:29.972+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"8a8fd4f52a34765a","spanId":"8a8fd4f52a34765a"}
{"@timestamp":"2021-07-26T10:00:30.062+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e37552d996485efb","spanId":"e37552d996485efb"}
{"@timestamp":"2021-07-26T10:00:30.063+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e37552d996485efb","spanId":"e37552d996485efb"}
{"@timestamp":"2021-07-26T10:00:30.063+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e37552d996485efb","spanId":"e37552d996485efb"}
{"@timestamp":"2021-07-26T10:00:30.063+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e37552d996485efb","spanId":"e37552d996485efb"}
{"@timestamp":"2021-07-26T10:00:30.065+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e37552d996485efb","spanId":"e37552d996485efb"}
{"@timestamp":"2021-07-26T10:00:30.066+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e37552d996485efb","spanId":"e37552d996485efb"}
{"@timestamp":"2021-07-26T10:00:30.077+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"e37552d996485efb","spanId":"e37552d996485efb"}
{"@timestamp":"2021-07-26T10:00:30.162+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"562faa53eccfbfdf","spanId":"562faa53eccfbfdf"}
{"@timestamp":"2021-07-26T10:00:30.163+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"562faa53eccfbfdf","spanId":"562faa53eccfbfdf"}
{"@timestamp":"2021-07-26T10:00:30.163+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"562faa53eccfbfdf","spanId":"562faa53eccfbfdf"}
{"@timestamp":"2021-07-26T10:00:30.163+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"562faa53eccfbfdf","spanId":"562faa53eccfbfdf"}
{"@timestamp":"2021-07-26T10:00:30.166+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"562faa53eccfbfdf","spanId":"562faa53eccfbfdf"}
{"@timestamp":"2021-07-26T10:00:30.166+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"562faa53eccfbfdf","spanId":"562faa53eccfbfdf"}
{"@timestamp":"2021-07-26T10:00:30.176+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"562faa53eccfbfdf","spanId":"562faa53eccfbfdf"}
{"@timestamp":"2021-07-26T10:00:30.262+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4dba56682951307d","spanId":"4dba56682951307d"}
{"@timestamp":"2021-07-26T10:00:30.262+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4dba56682951307d","spanId":"4dba56682951307d"}
{"@timestamp":"2021-07-26T10:00:30.263+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4dba56682951307d","spanId":"4dba56682951307d"}
{"@timestamp":"2021-07-26T10:00:30.263+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4dba56682951307d","spanId":"4dba56682951307d"}
{"@timestamp":"2021-07-26T10:00:30.264+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4dba56682951307d","spanId":"4dba56682951307d"}
{"@timestamp":"2021-07-26T10:00:30.265+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4dba56682951307d","spanId":"4dba56682951307d"}
{"@timestamp":"2021-07-26T10:00:30.276+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"4dba56682951307d","spanId":"4dba56682951307d"}
{"@timestamp":"2021-07-26T10:00:30.361+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"344fdfe0293dd040","spanId":"344fdfe0293dd040"}
{"@timestamp":"2021-07-26T10:00:30.362+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"344fdfe0293dd040","spanId":"344fdfe0293dd040"}
{"@timestamp":"2021-07-26T10:00:30.362+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"344fdfe0293dd040","spanId":"344fdfe0293dd040"}
{"@timestamp":"2021-07-26T10:00:30.363+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"344fdfe0293dd040","spanId":"344fdfe0293dd040"}
{"@timestamp":"2021-07-26T10:00:30.365+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"344fdfe0293dd040","spanId":"344fdfe0293dd040"}
{"@timestamp":"2021-07-26T10:00:30.365+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"344fdfe0293dd040","spanId":"344fdfe0293dd040"}
{"@timestamp":"2021-07-26T10:00:30.375+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"344fdfe0293dd040","spanId":"344fdfe0293dd040"}
{"@timestamp":"2021-07-26T10:00:30.462+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1e5fa7d02adf76fd","spanId":"1e5fa7d02adf76fd"}
{"@timestamp":"2021-07-26T10:00:30.462+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1e5fa7d02adf76fd","spanId":"1e5fa7d02adf76fd"}
{"@timestamp":"2021-07-26T10:00:30.462+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1e5fa7d02adf76fd","spanId":"1e5fa7d02adf76fd"}
{"@timestamp":"2021-07-26T10:00:30.462+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1e5fa7d02adf76fd","spanId":"1e5fa7d02adf76fd"}
{"@timestamp":"2021-07-26T10:00:30.464+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1e5fa7d02adf76fd","spanId":"1e5fa7d02adf76fd"}
{"@timestamp":"2021-07-26T10:00:30.464+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"1e5fa7d02adf76fd","spanId":"1e5fa7d02adf76fd"}
{"@timestamp":"2021-07-26T10:00:30.475+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"1e5fa7d02adf76fd","spanId":"1e5fa7d02adf76fd"}
{"@timestamp":"2021-07-26T10:00:39.538+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1f5e4aed4205cfb7","spanId":"1f5e4aed4205cfb7"}
{"@timestamp":"2021-07-26T10:00:39.538+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1f5e4aed4205cfb7","spanId":"1f5e4aed4205cfb7"}
{"@timestamp":"2021-07-26T10:00:39.538+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1f5e4aed4205cfb7","spanId":"1f5e4aed4205cfb7"}
{"@timestamp":"2021-07-26T10:00:39.539+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1f5e4aed4205cfb7","spanId":"1f5e4aed4205cfb7"}
{"@timestamp":"2021-07-26T10:00:39.542+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1f5e4aed4205cfb7","spanId":"1f5e4aed4205cfb7"}
{"@timestamp":"2021-07-26T10:00:39.542+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1f5e4aed4205cfb7","spanId":"1f5e4aed4205cfb7"}
{"@timestamp":"2021-07-26T10:00:39.552+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"1f5e4aed4205cfb7","spanId":"1f5e4aed4205cfb7"}
{"@timestamp":"2021-07-26T10:00:39.639+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"836fd9c4a072d39c","spanId":"836fd9c4a072d39c"}
{"@timestamp":"2021-07-26T10:00:39.639+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"836fd9c4a072d39c","spanId":"836fd9c4a072d39c"}
{"@timestamp":"2021-07-26T10:00:39.640+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"836fd9c4a072d39c","spanId":"836fd9c4a072d39c"}
{"@timestamp":"2021-07-26T10:00:39.640+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"836fd9c4a072d39c","spanId":"836fd9c4a072d39c"}
{"@timestamp":"2021-07-26T10:00:39.642+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"836fd9c4a072d39c","spanId":"836fd9c4a072d39c"}
{"@timestamp":"2021-07-26T10:00:39.642+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"836fd9c4a072d39c","spanId":"836fd9c4a072d39c"}
{"@timestamp":"2021-07-26T10:00:39.651+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"836fd9c4a072d39c","spanId":"836fd9c4a072d39c"}
{"@timestamp":"2021-07-26T10:00:39.738+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a845a1e8c8c522a2","spanId":"a845a1e8c8c522a2"}
{"@timestamp":"2021-07-26T10:00:39.739+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a845a1e8c8c522a2","spanId":"a845a1e8c8c522a2"}
{"@timestamp":"2021-07-26T10:00:39.739+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a845a1e8c8c522a2","spanId":"a845a1e8c8c522a2"}
{"@timestamp":"2021-07-26T10:00:39.739+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a845a1e8c8c522a2","spanId":"a845a1e8c8c522a2"}
{"@timestamp":"2021-07-26T10:00:39.740+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a845a1e8c8c522a2","spanId":"a845a1e8c8c522a2"}
{"@timestamp":"2021-07-26T10:00:39.741+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a845a1e8c8c522a2","spanId":"a845a1e8c8c522a2"}
{"@timestamp":"2021-07-26T10:00:39.753+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"a845a1e8c8c522a2","spanId":"a845a1e8c8c522a2"}
{"@timestamp":"2021-07-26T10:00:39.840+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"69d2c14205f229eb","spanId":"69d2c14205f229eb"}
{"@timestamp":"2021-07-26T10:00:39.840+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"69d2c14205f229eb","spanId":"69d2c14205f229eb"}
{"@timestamp":"2021-07-26T10:00:39.841+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"69d2c14205f229eb","spanId":"69d2c14205f229eb"}
{"@timestamp":"2021-07-26T10:00:39.841+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"69d2c14205f229eb","spanId":"69d2c14205f229eb"}
{"@timestamp":"2021-07-26T10:00:39.843+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"69d2c14205f229eb","spanId":"69d2c14205f229eb"}
{"@timestamp":"2021-07-26T10:00:39.844+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"69d2c14205f229eb","spanId":"69d2c14205f229eb"}
{"@timestamp":"2021-07-26T10:00:39.855+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"69d2c14205f229eb","spanId":"69d2c14205f229eb"}
{"@timestamp":"2021-07-26T10:00:39.937+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dc16a8c553164e3d","spanId":"dc16a8c553164e3d"}
{"@timestamp":"2021-07-26T10:00:39.938+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dc16a8c553164e3d","spanId":"dc16a8c553164e3d"}
{"@timestamp":"2021-07-26T10:00:39.939+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dc16a8c553164e3d","spanId":"dc16a8c553164e3d"}
{"@timestamp":"2021-07-26T10:00:39.939+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dc16a8c553164e3d","spanId":"dc16a8c553164e3d"}
{"@timestamp":"2021-07-26T10:00:39.941+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dc16a8c553164e3d","spanId":"dc16a8c553164e3d"}
{"@timestamp":"2021-07-26T10:00:39.941+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"dc16a8c553164e3d","spanId":"dc16a8c553164e3d"}
{"@timestamp":"2021-07-26T10:00:39.952+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"dc16a8c553164e3d","spanId":"dc16a8c553164e3d"}
{"@timestamp":"2021-07-26T10:00:40.039+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6491d78cbb1cc7ec","spanId":"6491d78cbb1cc7ec"}
{"@timestamp":"2021-07-26T10:00:40.040+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6491d78cbb1cc7ec","spanId":"6491d78cbb1cc7ec"}
{"@timestamp":"2021-07-26T10:00:40.040+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6491d78cbb1cc7ec","spanId":"6491d78cbb1cc7ec"}
{"@timestamp":"2021-07-26T10:00:40.040+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6491d78cbb1cc7ec","spanId":"6491d78cbb1cc7ec"}
{"@timestamp":"2021-07-26T10:00:40.042+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6491d78cbb1cc7ec","spanId":"6491d78cbb1cc7ec"}
{"@timestamp":"2021-07-26T10:00:40.043+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6491d78cbb1cc7ec","spanId":"6491d78cbb1cc7ec"}
{"@timestamp":"2021-07-26T10:00:40.054+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-2","level":"INFO","level_value":20000,"traceId":"6491d78cbb1cc7ec","spanId":"6491d78cbb1cc7ec"}
{"@timestamp":"2021-07-26T10:00:40.139+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"fc7bf9530d765694","spanId":"fc7bf9530d765694"}
{"@timestamp":"2021-07-26T10:00:40.139+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"fc7bf9530d765694","spanId":"fc7bf9530d765694"}
{"@timestamp":"2021-07-26T10:00:40.139+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"fc7bf9530d765694","spanId":"fc7bf9530d765694"}
{"@timestamp":"2021-07-26T10:00:40.139+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"fc7bf9530d765694","spanId":"fc7bf9530d765694"}
{"@timestamp":"2021-07-26T10:00:40.141+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"fc7bf9530d765694","spanId":"fc7bf9530d765694"}
{"@timestamp":"2021-07-26T10:00:40.141+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"fc7bf9530d765694","spanId":"fc7bf9530d765694"}
{"@timestamp":"2021-07-26T10:00:40.152+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"fc7bf9530d765694","spanId":"fc7bf9530d765694"}
{"@timestamp":"2021-07-26T10:00:40.239+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc95a1c9311f2949","spanId":"cc95a1c9311f2949"}
{"@timestamp":"2021-07-26T10:00:40.240+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc95a1c9311f2949","spanId":"cc95a1c9311f2949"}
{"@timestamp":"2021-07-26T10:00:40.240+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc95a1c9311f2949","spanId":"cc95a1c9311f2949"}
{"@timestamp":"2021-07-26T10:00:40.240+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc95a1c9311f2949","spanId":"cc95a1c9311f2949"}
{"@timestamp":"2021-07-26T10:00:40.242+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc95a1c9311f2949","spanId":"cc95a1c9311f2949"}
{"@timestamp":"2021-07-26T10:00:40.242+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"cc95a1c9311f2949","spanId":"cc95a1c9311f2949"}
{"@timestamp":"2021-07-26T10:00:40.253+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-16","level":"INFO","level_value":20000,"traceId":"cc95a1c9311f2949","spanId":"cc95a1c9311f2949"}
{"@timestamp":"2021-07-26T10:00:40.339+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d59cec57ee153f1a","spanId":"d59cec57ee153f1a"}
{"@timestamp":"2021-07-26T10:00:40.341+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d59cec57ee153f1a","spanId":"d59cec57ee153f1a"}
{"@timestamp":"2021-07-26T10:00:40.342+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d59cec57ee153f1a","spanId":"d59cec57ee153f1a"}
{"@timestamp":"2021-07-26T10:00:40.343+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d59cec57ee153f1a","spanId":"d59cec57ee153f1a"}
{"@timestamp":"2021-07-26T10:00:40.345+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d59cec57ee153f1a","spanId":"d59cec57ee153f1a"}
{"@timestamp":"2021-07-26T10:00:40.345+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d59cec57ee153f1a","spanId":"d59cec57ee153f1a"}
{"@timestamp":"2021-07-26T10:00:40.358+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"d59cec57ee153f1a","spanId":"d59cec57ee153f1a"}
{"@timestamp":"2021-07-26T10:00:40.438+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2fa5b0aa27492b82","spanId":"2fa5b0aa27492b82"}
{"@timestamp":"2021-07-26T10:00:40.439+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2fa5b0aa27492b82","spanId":"2fa5b0aa27492b82"}
{"@timestamp":"2021-07-26T10:00:40.440+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2fa5b0aa27492b82","spanId":"2fa5b0aa27492b82"}
{"@timestamp":"2021-07-26T10:00:40.440+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2fa5b0aa27492b82","spanId":"2fa5b0aa27492b82"}
{"@timestamp":"2021-07-26T10:00:40.442+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2fa5b0aa27492b82","spanId":"2fa5b0aa27492b82"}
{"@timestamp":"2021-07-26T10:00:40.442+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"2fa5b0aa27492b82","spanId":"2fa5b0aa27492b82"}
{"@timestamp":"2021-07-26T10:00:40.458+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"2fa5b0aa27492b82","spanId":"2fa5b0aa27492b82"}
{"@timestamp":"2021-07-26T10:00:56.626+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"025f4eca58760407","spanId":"025f4eca58760407"}
{"@timestamp":"2021-07-26T10:00:56.627+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"025f4eca58760407","spanId":"025f4eca58760407"}
{"@timestamp":"2021-07-26T10:00:56.627+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"025f4eca58760407","spanId":"025f4eca58760407"}
{"@timestamp":"2021-07-26T10:00:56.627+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"025f4eca58760407","spanId":"025f4eca58760407"}
{"@timestamp":"2021-07-26T10:00:56.629+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"025f4eca58760407","spanId":"025f4eca58760407"}
{"@timestamp":"2021-07-26T10:00:56.630+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"025f4eca58760407","spanId":"025f4eca58760407"}
{"@timestamp":"2021-07-26T10:00:56.726+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1df3852f9382b342","spanId":"1df3852f9382b342"}
{"@timestamp":"2021-07-26T10:00:56.726+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1df3852f9382b342","spanId":"1df3852f9382b342"}
{"@timestamp":"2021-07-26T10:00:56.726+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1df3852f9382b342","spanId":"1df3852f9382b342"}
{"@timestamp":"2021-07-26T10:00:56.726+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1df3852f9382b342","spanId":"1df3852f9382b342"}
{"@timestamp":"2021-07-26T10:00:56.728+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1df3852f9382b342","spanId":"1df3852f9382b342"}
{"@timestamp":"2021-07-26T10:00:56.729+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1df3852f9382b342","spanId":"1df3852f9382b342"}
{"@timestamp":"2021-07-26T10:00:56.827+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"38e2843c34f52e87","spanId":"38e2843c34f52e87"}
{"@timestamp":"2021-07-26T10:00:56.828+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"38e2843c34f52e87","spanId":"38e2843c34f52e87"}
{"@timestamp":"2021-07-26T10:00:56.828+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"38e2843c34f52e87","spanId":"38e2843c34f52e87"}
{"@timestamp":"2021-07-26T10:00:56.828+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"38e2843c34f52e87","spanId":"38e2843c34f52e87"}
{"@timestamp":"2021-07-26T10:00:56.830+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"38e2843c34f52e87","spanId":"38e2843c34f52e87"}
{"@timestamp":"2021-07-26T10:00:56.830+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"38e2843c34f52e87","spanId":"38e2843c34f52e87"}
{"@timestamp":"2021-07-26T10:00:56.926+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"92da35d94995c8de","spanId":"92da35d94995c8de"}
{"@timestamp":"2021-07-26T10:00:56.927+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"92da35d94995c8de","spanId":"92da35d94995c8de"}
{"@timestamp":"2021-07-26T10:00:56.927+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"92da35d94995c8de","spanId":"92da35d94995c8de"}
{"@timestamp":"2021-07-26T10:00:56.927+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"92da35d94995c8de","spanId":"92da35d94995c8de"}
{"@timestamp":"2021-07-26T10:00:56.928+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"92da35d94995c8de","spanId":"92da35d94995c8de"}
{"@timestamp":"2021-07-26T10:00:56.928+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"92da35d94995c8de","spanId":"92da35d94995c8de"}
{"@timestamp":"2021-07-26T10:00:57.027+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"642d03ff145f5912","spanId":"642d03ff145f5912"}
{"@timestamp":"2021-07-26T10:00:57.028+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"642d03ff145f5912","spanId":"642d03ff145f5912"}
{"@timestamp":"2021-07-26T10:00:57.028+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"642d03ff145f5912","spanId":"642d03ff145f5912"}
{"@timestamp":"2021-07-26T10:00:57.029+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"642d03ff145f5912","spanId":"642d03ff145f5912"}
{"@timestamp":"2021-07-26T10:00:57.032+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"642d03ff145f5912","spanId":"642d03ff145f5912"}
{"@timestamp":"2021-07-26T10:00:57.032+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"642d03ff145f5912","spanId":"642d03ff145f5912"}
{"@timestamp":"2021-07-26T10:00:57.127+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"3f43b747f003339e","spanId":"3f43b747f003339e"}
{"@timestamp":"2021-07-26T10:00:57.127+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"3f43b747f003339e","spanId":"3f43b747f003339e"}
{"@timestamp":"2021-07-26T10:00:57.127+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"3f43b747f003339e","spanId":"3f43b747f003339e"}
{"@timestamp":"2021-07-26T10:00:57.127+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"3f43b747f003339e","spanId":"3f43b747f003339e"}
{"@timestamp":"2021-07-26T10:00:57.129+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"3f43b747f003339e","spanId":"3f43b747f003339e"}
{"@timestamp":"2021-07-26T10:00:57.129+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"3f43b747f003339e","spanId":"3f43b747f003339e"}
{"@timestamp":"2021-07-26T10:00:57.227+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c5285ae56af42c85","spanId":"c5285ae56af42c85"}
{"@timestamp":"2021-07-26T10:00:57.227+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c5285ae56af42c85","spanId":"c5285ae56af42c85"}
{"@timestamp":"2021-07-26T10:00:57.228+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c5285ae56af42c85","spanId":"c5285ae56af42c85"}
{"@timestamp":"2021-07-26T10:00:57.228+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c5285ae56af42c85","spanId":"c5285ae56af42c85"}
{"@timestamp":"2021-07-26T10:00:57.230+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c5285ae56af42c85","spanId":"c5285ae56af42c85"}
{"@timestamp":"2021-07-26T10:00:57.230+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"c5285ae56af42c85","spanId":"c5285ae56af42c85"}
{"@timestamp":"2021-07-26T10:00:57.327+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a18304514d0542ab","spanId":"a18304514d0542ab"}
{"@timestamp":"2021-07-26T10:00:57.327+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a18304514d0542ab","spanId":"a18304514d0542ab"}
{"@timestamp":"2021-07-26T10:00:57.327+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a18304514d0542ab","spanId":"a18304514d0542ab"}
{"@timestamp":"2021-07-26T10:00:57.327+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a18304514d0542ab","spanId":"a18304514d0542ab"}
{"@timestamp":"2021-07-26T10:00:57.329+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a18304514d0542ab","spanId":"a18304514d0542ab"}
{"@timestamp":"2021-07-26T10:00:57.329+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"a18304514d0542ab","spanId":"a18304514d0542ab"}
{"@timestamp":"2021-07-26T10:00:57.427+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"81fbfa00f9940562","spanId":"81fbfa00f9940562"}
{"@timestamp":"2021-07-26T10:00:57.428+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"81fbfa00f9940562","spanId":"81fbfa00f9940562"}
{"@timestamp":"2021-07-26T10:00:57.428+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"81fbfa00f9940562","spanId":"81fbfa00f9940562"}
{"@timestamp":"2021-07-26T10:00:57.429+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"81fbfa00f9940562","spanId":"81fbfa00f9940562"}
{"@timestamp":"2021-07-26T10:00:57.430+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"81fbfa00f9940562","spanId":"81fbfa00f9940562"}
{"@timestamp":"2021-07-26T10:00:57.430+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"81fbfa00f9940562","spanId":"81fbfa00f9940562"}
{"@timestamp":"2021-07-26T10:00:57.527+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8aaa36b4a0877c6f","spanId":"8aaa36b4a0877c6f"}
{"@timestamp":"2021-07-26T10:00:57.527+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8aaa36b4a0877c6f","spanId":"8aaa36b4a0877c6f"}
{"@timestamp":"2021-07-26T10:00:57.527+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8aaa36b4a0877c6f","spanId":"8aaa36b4a0877c6f"}
{"@timestamp":"2021-07-26T10:00:57.527+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8aaa36b4a0877c6f","spanId":"8aaa36b4a0877c6f"}
{"@timestamp":"2021-07-26T10:00:57.529+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8aaa36b4a0877c6f","spanId":"8aaa36b4a0877c6f"}
{"@timestamp":"2021-07-26T10:00:57.529+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"8aaa36b4a0877c6f","spanId":"8aaa36b4a0877c6f"}
{"@timestamp":"2021-07-26T10:00:57.646+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:57.646+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:57.734+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:57.735+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:57.844+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:57.845+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:57.936+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:57.937+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.043+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.044+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.134+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.135+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.242+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.243+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.331+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.331+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.437+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.438+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.545+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:00:58.546+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:15.442+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c6eda8df96c4955","spanId":"1c6eda8df96c4955"}
{"@timestamp":"2021-07-26T10:01:15.443+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c6eda8df96c4955","spanId":"1c6eda8df96c4955"}
{"@timestamp":"2021-07-26T10:01:15.443+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c6eda8df96c4955","spanId":"1c6eda8df96c4955"}
{"@timestamp":"2021-07-26T10:01:15.443+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c6eda8df96c4955","spanId":"1c6eda8df96c4955"}
{"@timestamp":"2021-07-26T10:01:15.445+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c6eda8df96c4955","spanId":"1c6eda8df96c4955"}
{"@timestamp":"2021-07-26T10:01:15.445+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1c6eda8df96c4955","spanId":"1c6eda8df96c4955"}
{"@timestamp":"2021-07-26T10:01:15.544+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"25ec0e89fb4e84c6","spanId":"25ec0e89fb4e84c6"}
{"@timestamp":"2021-07-26T10:01:15.545+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"25ec0e89fb4e84c6","spanId":"25ec0e89fb4e84c6"}
{"@timestamp":"2021-07-26T10:01:15.545+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"25ec0e89fb4e84c6","spanId":"25ec0e89fb4e84c6"}
{"@timestamp":"2021-07-26T10:01:15.545+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"25ec0e89fb4e84c6","spanId":"25ec0e89fb4e84c6"}
{"@timestamp":"2021-07-26T10:01:15.547+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"25ec0e89fb4e84c6","spanId":"25ec0e89fb4e84c6"}
{"@timestamp":"2021-07-26T10:01:15.548+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"25ec0e89fb4e84c6","spanId":"25ec0e89fb4e84c6"}
{"@timestamp":"2021-07-26T10:01:15.644+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b83e5a84666bed46","spanId":"b83e5a84666bed46"}
{"@timestamp":"2021-07-26T10:01:15.644+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b83e5a84666bed46","spanId":"b83e5a84666bed46"}
{"@timestamp":"2021-07-26T10:01:15.644+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b83e5a84666bed46","spanId":"b83e5a84666bed46"}
{"@timestamp":"2021-07-26T10:01:15.644+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b83e5a84666bed46","spanId":"b83e5a84666bed46"}
{"@timestamp":"2021-07-26T10:01:15.647+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b83e5a84666bed46","spanId":"b83e5a84666bed46"}
{"@timestamp":"2021-07-26T10:01:15.647+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b83e5a84666bed46","spanId":"b83e5a84666bed46"}
{"@timestamp":"2021-07-26T10:01:15.743+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"3734ed0898024463","spanId":"3734ed0898024463"}
{"@timestamp":"2021-07-26T10:01:15.743+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"3734ed0898024463","spanId":"3734ed0898024463"}
{"@timestamp":"2021-07-26T10:01:15.743+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"3734ed0898024463","spanId":"3734ed0898024463"}
{"@timestamp":"2021-07-26T10:01:15.743+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"3734ed0898024463","spanId":"3734ed0898024463"}
{"@timestamp":"2021-07-26T10:01:15.744+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"3734ed0898024463","spanId":"3734ed0898024463"}
{"@timestamp":"2021-07-26T10:01:15.744+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"3734ed0898024463","spanId":"3734ed0898024463"}
{"@timestamp":"2021-07-26T10:01:15.844+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"adb02d959bd65a40","spanId":"adb02d959bd65a40"}
{"@timestamp":"2021-07-26T10:01:15.844+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"adb02d959bd65a40","spanId":"adb02d959bd65a40"}
{"@timestamp":"2021-07-26T10:01:15.844+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"adb02d959bd65a40","spanId":"adb02d959bd65a40"}
{"@timestamp":"2021-07-26T10:01:15.844+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"adb02d959bd65a40","spanId":"adb02d959bd65a40"}
{"@timestamp":"2021-07-26T10:01:15.846+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"adb02d959bd65a40","spanId":"adb02d959bd65a40"}
{"@timestamp":"2021-07-26T10:01:15.846+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"adb02d959bd65a40","spanId":"adb02d959bd65a40"}
{"@timestamp":"2021-07-26T10:01:15.943+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"38426302d4424baa","spanId":"38426302d4424baa"}
{"@timestamp":"2021-07-26T10:01:15.943+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"38426302d4424baa","spanId":"38426302d4424baa"}
{"@timestamp":"2021-07-26T10:01:15.943+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"38426302d4424baa","spanId":"38426302d4424baa"}
{"@timestamp":"2021-07-26T10:01:15.944+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"38426302d4424baa","spanId":"38426302d4424baa"}
{"@timestamp":"2021-07-26T10:01:15.945+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"38426302d4424baa","spanId":"38426302d4424baa"}
{"@timestamp":"2021-07-26T10:01:15.946+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"38426302d4424baa","spanId":"38426302d4424baa"}
{"@timestamp":"2021-07-26T10:01:16.043+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"01a0cdb272026b82","spanId":"01a0cdb272026b82"}
{"@timestamp":"2021-07-26T10:01:16.044+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"01a0cdb272026b82","spanId":"01a0cdb272026b82"}
{"@timestamp":"2021-07-26T10:01:16.044+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"01a0cdb272026b82","spanId":"01a0cdb272026b82"}
{"@timestamp":"2021-07-26T10:01:16.044+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"01a0cdb272026b82","spanId":"01a0cdb272026b82"}
{"@timestamp":"2021-07-26T10:01:16.046+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"01a0cdb272026b82","spanId":"01a0cdb272026b82"}
{"@timestamp":"2021-07-26T10:01:16.046+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"01a0cdb272026b82","spanId":"01a0cdb272026b82"}
{"@timestamp":"2021-07-26T10:01:16.143+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"dcd26a7d3bd70d41","spanId":"dcd26a7d3bd70d41"}
{"@timestamp":"2021-07-26T10:01:16.143+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"dcd26a7d3bd70d41","spanId":"dcd26a7d3bd70d41"}
{"@timestamp":"2021-07-26T10:01:16.144+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"dcd26a7d3bd70d41","spanId":"dcd26a7d3bd70d41"}
{"@timestamp":"2021-07-26T10:01:16.144+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"dcd26a7d3bd70d41","spanId":"dcd26a7d3bd70d41"}
{"@timestamp":"2021-07-26T10:01:16.146+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"dcd26a7d3bd70d41","spanId":"dcd26a7d3bd70d41"}
{"@timestamp":"2021-07-26T10:01:16.146+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"dcd26a7d3bd70d41","spanId":"dcd26a7d3bd70d41"}
{"@timestamp":"2021-07-26T10:01:16.242+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"12369d779f5bf718","spanId":"12369d779f5bf718"}
{"@timestamp":"2021-07-26T10:01:16.242+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"12369d779f5bf718","spanId":"12369d779f5bf718"}
{"@timestamp":"2021-07-26T10:01:16.242+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"12369d779f5bf718","spanId":"12369d779f5bf718"}
{"@timestamp":"2021-07-26T10:01:16.242+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"12369d779f5bf718","spanId":"12369d779f5bf718"}
{"@timestamp":"2021-07-26T10:01:16.244+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"12369d779f5bf718","spanId":"12369d779f5bf718"}
{"@timestamp":"2021-07-26T10:01:16.244+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"12369d779f5bf718","spanId":"12369d779f5bf718"}
{"@timestamp":"2021-07-26T10:01:16.342+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"04624f8491b26406","spanId":"04624f8491b26406"}
{"@timestamp":"2021-07-26T10:01:16.342+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"04624f8491b26406","spanId":"04624f8491b26406"}
{"@timestamp":"2021-07-26T10:01:16.342+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"04624f8491b26406","spanId":"04624f8491b26406"}
{"@timestamp":"2021-07-26T10:01:16.342+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"04624f8491b26406","spanId":"04624f8491b26406"}
{"@timestamp":"2021-07-26T10:01:16.344+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"04624f8491b26406","spanId":"04624f8491b26406"}
{"@timestamp":"2021-07-26T10:01:16.345+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"04624f8491b26406","spanId":"04624f8491b26406"}
{"@timestamp":"2021-07-26T10:01:16.462+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.462+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.552+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.553+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.659+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.660+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.752+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.753+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.859+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.860+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.949+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:16.949+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:17.057+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:17.058+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:17.163+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:17.164+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:17.253+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:17.254+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:17.361+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:17.362+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:29.538+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"737411dec72b1634","spanId":"737411dec72b1634"}
{"@timestamp":"2021-07-26T10:01:29.538+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"737411dec72b1634","spanId":"737411dec72b1634"}
{"@timestamp":"2021-07-26T10:01:29.538+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"737411dec72b1634","spanId":"737411dec72b1634"}
{"@timestamp":"2021-07-26T10:01:29.539+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"737411dec72b1634","spanId":"737411dec72b1634"}
{"@timestamp":"2021-07-26T10:01:29.539+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"737411dec72b1634","spanId":"737411dec72b1634"}
{"@timestamp":"2021-07-26T10:01:29.541+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"737411dec72b1634","spanId":"737411dec72b1634"}
{"@timestamp":"2021-07-26T10:01:29.636+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"493c0cf485d40519","spanId":"493c0cf485d40519"}
{"@timestamp":"2021-07-26T10:01:29.636+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"493c0cf485d40519","spanId":"493c0cf485d40519"}
{"@timestamp":"2021-07-26T10:01:29.637+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"493c0cf485d40519","spanId":"493c0cf485d40519"}
{"@timestamp":"2021-07-26T10:01:29.637+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"493c0cf485d40519","spanId":"493c0cf485d40519"}
{"@timestamp":"2021-07-26T10:01:29.638+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"493c0cf485d40519","spanId":"493c0cf485d40519"}
{"@timestamp":"2021-07-26T10:01:29.639+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"493c0cf485d40519","spanId":"493c0cf485d40519"}
{"@timestamp":"2021-07-26T10:01:29.737+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a0dffd034b5c8fb9","spanId":"a0dffd034b5c8fb9"}
{"@timestamp":"2021-07-26T10:01:29.737+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a0dffd034b5c8fb9","spanId":"a0dffd034b5c8fb9"}
{"@timestamp":"2021-07-26T10:01:29.737+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a0dffd034b5c8fb9","spanId":"a0dffd034b5c8fb9"}
{"@timestamp":"2021-07-26T10:01:29.737+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a0dffd034b5c8fb9","spanId":"a0dffd034b5c8fb9"}
{"@timestamp":"2021-07-26T10:01:29.740+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a0dffd034b5c8fb9","spanId":"a0dffd034b5c8fb9"}
{"@timestamp":"2021-07-26T10:01:29.741+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"a0dffd034b5c8fb9","spanId":"a0dffd034b5c8fb9"}
{"@timestamp":"2021-07-26T10:01:29.839+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"c7a3b83625351c89","spanId":"c7a3b83625351c89"}
{"@timestamp":"2021-07-26T10:01:29.839+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"c7a3b83625351c89","spanId":"c7a3b83625351c89"}
{"@timestamp":"2021-07-26T10:01:29.839+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"c7a3b83625351c89","spanId":"c7a3b83625351c89"}
{"@timestamp":"2021-07-26T10:01:29.840+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"c7a3b83625351c89","spanId":"c7a3b83625351c89"}
{"@timestamp":"2021-07-26T10:01:29.841+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"c7a3b83625351c89","spanId":"c7a3b83625351c89"}
{"@timestamp":"2021-07-26T10:01:29.842+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"c7a3b83625351c89","spanId":"c7a3b83625351c89"}
{"@timestamp":"2021-07-26T10:01:29.937+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9ae85585298cad09","spanId":"9ae85585298cad09"}
{"@timestamp":"2021-07-26T10:01:29.937+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9ae85585298cad09","spanId":"9ae85585298cad09"}
{"@timestamp":"2021-07-26T10:01:29.937+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9ae85585298cad09","spanId":"9ae85585298cad09"}
{"@timestamp":"2021-07-26T10:01:29.938+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9ae85585298cad09","spanId":"9ae85585298cad09"}
{"@timestamp":"2021-07-26T10:01:29.939+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9ae85585298cad09","spanId":"9ae85585298cad09"}
{"@timestamp":"2021-07-26T10:01:29.940+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9ae85585298cad09","spanId":"9ae85585298cad09"}
{"@timestamp":"2021-07-26T10:01:30.037+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"68a788b171424ef5","spanId":"68a788b171424ef5"}
{"@timestamp":"2021-07-26T10:01:30.038+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"68a788b171424ef5","spanId":"68a788b171424ef5"}
{"@timestamp":"2021-07-26T10:01:30.038+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"68a788b171424ef5","spanId":"68a788b171424ef5"}
{"@timestamp":"2021-07-26T10:01:30.038+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"68a788b171424ef5","spanId":"68a788b171424ef5"}
{"@timestamp":"2021-07-26T10:01:30.040+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"68a788b171424ef5","spanId":"68a788b171424ef5"}
{"@timestamp":"2021-07-26T10:01:30.040+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"68a788b171424ef5","spanId":"68a788b171424ef5"}
{"@timestamp":"2021-07-26T10:01:30.139+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9f58d3d5e5d76368","spanId":"9f58d3d5e5d76368"}
{"@timestamp":"2021-07-26T10:01:30.139+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9f58d3d5e5d76368","spanId":"9f58d3d5e5d76368"}
{"@timestamp":"2021-07-26T10:01:30.139+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9f58d3d5e5d76368","spanId":"9f58d3d5e5d76368"}
{"@timestamp":"2021-07-26T10:01:30.139+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9f58d3d5e5d76368","spanId":"9f58d3d5e5d76368"}
{"@timestamp":"2021-07-26T10:01:30.140+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9f58d3d5e5d76368","spanId":"9f58d3d5e5d76368"}
{"@timestamp":"2021-07-26T10:01:30.141+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"9f58d3d5e5d76368","spanId":"9f58d3d5e5d76368"}
{"@timestamp":"2021-07-26T10:01:30.240+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"24b697177624cf0e","spanId":"24b697177624cf0e"}
{"@timestamp":"2021-07-26T10:01:30.240+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"24b697177624cf0e","spanId":"24b697177624cf0e"}
{"@timestamp":"2021-07-26T10:01:30.241+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"24b697177624cf0e","spanId":"24b697177624cf0e"}
{"@timestamp":"2021-07-26T10:01:30.241+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"24b697177624cf0e","spanId":"24b697177624cf0e"}
{"@timestamp":"2021-07-26T10:01:30.242+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"24b697177624cf0e","spanId":"24b697177624cf0e"}
{"@timestamp":"2021-07-26T10:01:30.242+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"24b697177624cf0e","spanId":"24b697177624cf0e"}
{"@timestamp":"2021-07-26T10:01:30.339+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"63ab9073d443c3f9","spanId":"63ab9073d443c3f9"}
{"@timestamp":"2021-07-26T10:01:30.340+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"63ab9073d443c3f9","spanId":"63ab9073d443c3f9"}
{"@timestamp":"2021-07-26T10:01:30.340+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"63ab9073d443c3f9","spanId":"63ab9073d443c3f9"}
{"@timestamp":"2021-07-26T10:01:30.340+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"63ab9073d443c3f9","spanId":"63ab9073d443c3f9"}
{"@timestamp":"2021-07-26T10:01:30.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"63ab9073d443c3f9","spanId":"63ab9073d443c3f9"}
{"@timestamp":"2021-07-26T10:01:30.342+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"63ab9073d443c3f9","spanId":"63ab9073d443c3f9"}
{"@timestamp":"2021-07-26T10:01:30.437+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"44db8900e559c1e9","spanId":"44db8900e559c1e9"}
{"@timestamp":"2021-07-26T10:01:30.438+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"44db8900e559c1e9","spanId":"44db8900e559c1e9"}
{"@timestamp":"2021-07-26T10:01:30.438+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"44db8900e559c1e9","spanId":"44db8900e559c1e9"}
{"@timestamp":"2021-07-26T10:01:30.439+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"44db8900e559c1e9","spanId":"44db8900e559c1e9"}
{"@timestamp":"2021-07-26T10:01:30.440+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"44db8900e559c1e9","spanId":"44db8900e559c1e9"}
{"@timestamp":"2021-07-26T10:01:30.440+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"44db8900e559c1e9","spanId":"44db8900e559c1e9"}
{"@timestamp":"2021-07-26T10:01:30.544+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.544+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.651+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.652+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.757+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.758+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.848+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.849+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.955+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:30.955+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.046+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.046+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.151+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.152+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.259+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.260+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.350+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.350+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.458+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:31.459+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.238+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"486b6573170de516","spanId":"486b6573170de516"}
{"@timestamp":"2021-07-26T10:01:38.238+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"486b6573170de516","spanId":"486b6573170de516"}
{"@timestamp":"2021-07-26T10:01:38.239+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"486b6573170de516","spanId":"486b6573170de516"}
{"@timestamp":"2021-07-26T10:01:38.239+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"486b6573170de516","spanId":"486b6573170de516"}
{"@timestamp":"2021-07-26T10:01:38.242+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.243+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.340+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4bdc3e57308a3e39","spanId":"4bdc3e57308a3e39"}
{"@timestamp":"2021-07-26T10:01:38.340+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4bdc3e57308a3e39","spanId":"4bdc3e57308a3e39"}
{"@timestamp":"2021-07-26T10:01:38.341+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4bdc3e57308a3e39","spanId":"4bdc3e57308a3e39"}
{"@timestamp":"2021-07-26T10:01:38.341+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"4bdc3e57308a3e39","spanId":"4bdc3e57308a3e39"}
{"@timestamp":"2021-07-26T10:01:38.345+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.346+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.439+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"310f76b58e2f5315","spanId":"310f76b58e2f5315"}
{"@timestamp":"2021-07-26T10:01:38.440+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"310f76b58e2f5315","spanId":"310f76b58e2f5315"}
{"@timestamp":"2021-07-26T10:01:38.440+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"310f76b58e2f5315","spanId":"310f76b58e2f5315"}
{"@timestamp":"2021-07-26T10:01:38.440+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"310f76b58e2f5315","spanId":"310f76b58e2f5315"}
{"@timestamp":"2021-07-26T10:01:38.443+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.444+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.540+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7b39c9ba3c570bb6","spanId":"7b39c9ba3c570bb6"}
{"@timestamp":"2021-07-26T10:01:38.540+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7b39c9ba3c570bb6","spanId":"7b39c9ba3c570bb6"}
{"@timestamp":"2021-07-26T10:01:38.540+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7b39c9ba3c570bb6","spanId":"7b39c9ba3c570bb6"}
{"@timestamp":"2021-07-26T10:01:38.540+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"7b39c9ba3c570bb6","spanId":"7b39c9ba3c570bb6"}
{"@timestamp":"2021-07-26T10:01:38.543+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.544+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.639+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b03a41c70fa59efe","spanId":"b03a41c70fa59efe"}
{"@timestamp":"2021-07-26T10:01:38.641+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b03a41c70fa59efe","spanId":"b03a41c70fa59efe"}
{"@timestamp":"2021-07-26T10:01:38.641+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b03a41c70fa59efe","spanId":"b03a41c70fa59efe"}
{"@timestamp":"2021-07-26T10:01:38.641+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"b03a41c70fa59efe","spanId":"b03a41c70fa59efe"}
{"@timestamp":"2021-07-26T10:01:38.644+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.645+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.740+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2f5507526938c86a","spanId":"2f5507526938c86a"}
{"@timestamp":"2021-07-26T10:01:38.740+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2f5507526938c86a","spanId":"2f5507526938c86a"}
{"@timestamp":"2021-07-26T10:01:38.741+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2f5507526938c86a","spanId":"2f5507526938c86a"}
{"@timestamp":"2021-07-26T10:01:38.741+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2f5507526938c86a","spanId":"2f5507526938c86a"}
{"@timestamp":"2021-07-26T10:01:38.743+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.743+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.839+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"303f56a29a54eca2","spanId":"303f56a29a54eca2"}
{"@timestamp":"2021-07-26T10:01:38.840+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"303f56a29a54eca2","spanId":"303f56a29a54eca2"}
{"@timestamp":"2021-07-26T10:01:38.840+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"303f56a29a54eca2","spanId":"303f56a29a54eca2"}
{"@timestamp":"2021-07-26T10:01:38.841+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"303f56a29a54eca2","spanId":"303f56a29a54eca2"}
{"@timestamp":"2021-07-26T10:01:38.842+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.843+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.940+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cb95cb4643877b48","spanId":"cb95cb4643877b48"}
{"@timestamp":"2021-07-26T10:01:38.940+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cb95cb4643877b48","spanId":"cb95cb4643877b48"}
{"@timestamp":"2021-07-26T10:01:38.940+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cb95cb4643877b48","spanId":"cb95cb4643877b48"}
{"@timestamp":"2021-07-26T10:01:38.940+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"cb95cb4643877b48","spanId":"cb95cb4643877b48"}
{"@timestamp":"2021-07-26T10:01:38.943+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:38.943+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:39.038+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"93ec6a6dc0331949","spanId":"93ec6a6dc0331949"}
{"@timestamp":"2021-07-26T10:01:39.039+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"93ec6a6dc0331949","spanId":"93ec6a6dc0331949"}
{"@timestamp":"2021-07-26T10:01:39.039+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"93ec6a6dc0331949","spanId":"93ec6a6dc0331949"}
{"@timestamp":"2021-07-26T10:01:39.039+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"93ec6a6dc0331949","spanId":"93ec6a6dc0331949"}
{"@timestamp":"2021-07-26T10:01:39.042+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:39.043+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:39.140+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2599143df501a212","spanId":"2599143df501a212"}
{"@timestamp":"2021-07-26T10:01:39.141+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2599143df501a212","spanId":"2599143df501a212"}
{"@timestamp":"2021-07-26T10:01:39.141+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2599143df501a212","spanId":"2599143df501a212"}
{"@timestamp":"2021-07-26T10:01:39.141+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2599143df501a212","spanId":"2599143df501a212"}
{"@timestamp":"2021-07-26T10:01:39.144+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:01:39.145+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:07.063+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d68114c0948ae4c","spanId":"4d68114c0948ae4c"}
{"@timestamp":"2021-07-26T10:02:07.063+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d68114c0948ae4c","spanId":"4d68114c0948ae4c"}
{"@timestamp":"2021-07-26T10:02:07.064+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d68114c0948ae4c","spanId":"4d68114c0948ae4c"}
{"@timestamp":"2021-07-26T10:02:07.064+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d68114c0948ae4c","spanId":"4d68114c0948ae4c"}
{"@timestamp":"2021-07-26T10:02:07.064+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d68114c0948ae4c","spanId":"4d68114c0948ae4c"}
{"@timestamp":"2021-07-26T10:02:07.065+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4d68114c0948ae4c","spanId":"4d68114c0948ae4c"}
{"@timestamp":"2021-07-26T10:02:07.070+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"4d68114c0948ae4c","spanId":"4d68114c0948ae4c"}
{"@timestamp":"2021-07-26T10:02:07.164+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"25f998597efcb3f6","spanId":"25f998597efcb3f6"}
{"@timestamp":"2021-07-26T10:02:07.164+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"25f998597efcb3f6","spanId":"25f998597efcb3f6"}
{"@timestamp":"2021-07-26T10:02:07.164+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"25f998597efcb3f6","spanId":"25f998597efcb3f6"}
{"@timestamp":"2021-07-26T10:02:07.164+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"25f998597efcb3f6","spanId":"25f998597efcb3f6"}
{"@timestamp":"2021-07-26T10:02:07.165+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"25f998597efcb3f6","spanId":"25f998597efcb3f6"}
{"@timestamp":"2021-07-26T10:02:07.165+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"25f998597efcb3f6","spanId":"25f998597efcb3f6"}
{"@timestamp":"2021-07-26T10:02:07.173+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"25f998597efcb3f6","spanId":"25f998597efcb3f6"}
{"@timestamp":"2021-07-26T10:02:07.264+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"409e5f616a0d0dbc","spanId":"409e5f616a0d0dbc"}
{"@timestamp":"2021-07-26T10:02:07.264+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"409e5f616a0d0dbc","spanId":"409e5f616a0d0dbc"}
{"@timestamp":"2021-07-26T10:02:07.264+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"409e5f616a0d0dbc","spanId":"409e5f616a0d0dbc"}
{"@timestamp":"2021-07-26T10:02:07.264+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"409e5f616a0d0dbc","spanId":"409e5f616a0d0dbc"}
{"@timestamp":"2021-07-26T10:02:07.265+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"409e5f616a0d0dbc","spanId":"409e5f616a0d0dbc"}
{"@timestamp":"2021-07-26T10:02:07.265+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"409e5f616a0d0dbc","spanId":"409e5f616a0d0dbc"}
{"@timestamp":"2021-07-26T10:02:07.271+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"409e5f616a0d0dbc","spanId":"409e5f616a0d0dbc"}
{"@timestamp":"2021-07-26T10:02:07.365+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e20007e3f6893054","spanId":"e20007e3f6893054"}
{"@timestamp":"2021-07-26T10:02:07.365+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e20007e3f6893054","spanId":"e20007e3f6893054"}
{"@timestamp":"2021-07-26T10:02:07.365+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e20007e3f6893054","spanId":"e20007e3f6893054"}
{"@timestamp":"2021-07-26T10:02:07.365+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e20007e3f6893054","spanId":"e20007e3f6893054"}
{"@timestamp":"2021-07-26T10:02:07.367+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e20007e3f6893054","spanId":"e20007e3f6893054"}
{"@timestamp":"2021-07-26T10:02:07.367+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"e20007e3f6893054","spanId":"e20007e3f6893054"}
{"@timestamp":"2021-07-26T10:02:07.373+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"e20007e3f6893054","spanId":"e20007e3f6893054"}
{"@timestamp":"2021-07-26T10:02:07.464+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"895af567b953937e","spanId":"895af567b953937e"}
{"@timestamp":"2021-07-26T10:02:07.464+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"895af567b953937e","spanId":"895af567b953937e"}
{"@timestamp":"2021-07-26T10:02:07.464+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"895af567b953937e","spanId":"895af567b953937e"}
{"@timestamp":"2021-07-26T10:02:07.464+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"895af567b953937e","spanId":"895af567b953937e"}
{"@timestamp":"2021-07-26T10:02:07.465+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"895af567b953937e","spanId":"895af567b953937e"}
{"@timestamp":"2021-07-26T10:02:07.465+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"895af567b953937e","spanId":"895af567b953937e"}
{"@timestamp":"2021-07-26T10:02:07.471+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"895af567b953937e","spanId":"895af567b953937e"}
{"@timestamp":"2021-07-26T10:02:07.564+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"89e26eca585db4a3","spanId":"89e26eca585db4a3"}
{"@timestamp":"2021-07-26T10:02:07.564+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"89e26eca585db4a3","spanId":"89e26eca585db4a3"}
{"@timestamp":"2021-07-26T10:02:07.564+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"89e26eca585db4a3","spanId":"89e26eca585db4a3"}
{"@timestamp":"2021-07-26T10:02:07.564+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"89e26eca585db4a3","spanId":"89e26eca585db4a3"}
{"@timestamp":"2021-07-26T10:02:07.565+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"89e26eca585db4a3","spanId":"89e26eca585db4a3"}
{"@timestamp":"2021-07-26T10:02:07.565+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"89e26eca585db4a3","spanId":"89e26eca585db4a3"}
{"@timestamp":"2021-07-26T10:02:07.571+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"89e26eca585db4a3","spanId":"89e26eca585db4a3"}
{"@timestamp":"2021-07-26T10:02:07.664+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"79e06248abb90855","spanId":"79e06248abb90855"}
{"@timestamp":"2021-07-26T10:02:07.665+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"79e06248abb90855","spanId":"79e06248abb90855"}
{"@timestamp":"2021-07-26T10:02:07.665+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"79e06248abb90855","spanId":"79e06248abb90855"}
{"@timestamp":"2021-07-26T10:02:07.665+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"79e06248abb90855","spanId":"79e06248abb90855"}
{"@timestamp":"2021-07-26T10:02:07.666+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"79e06248abb90855","spanId":"79e06248abb90855"}
{"@timestamp":"2021-07-26T10:02:07.666+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"79e06248abb90855","spanId":"79e06248abb90855"}
{"@timestamp":"2021-07-26T10:02:07.672+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"79e06248abb90855","spanId":"79e06248abb90855"}
{"@timestamp":"2021-07-26T10:02:07.765+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d9de87d0ab7f10fd","spanId":"d9de87d0ab7f10fd"}
{"@timestamp":"2021-07-26T10:02:07.765+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d9de87d0ab7f10fd","spanId":"d9de87d0ab7f10fd"}
{"@timestamp":"2021-07-26T10:02:07.765+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d9de87d0ab7f10fd","spanId":"d9de87d0ab7f10fd"}
{"@timestamp":"2021-07-26T10:02:07.765+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d9de87d0ab7f10fd","spanId":"d9de87d0ab7f10fd"}
{"@timestamp":"2021-07-26T10:02:07.766+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d9de87d0ab7f10fd","spanId":"d9de87d0ab7f10fd"}
{"@timestamp":"2021-07-26T10:02:07.766+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d9de87d0ab7f10fd","spanId":"d9de87d0ab7f10fd"}
{"@timestamp":"2021-07-26T10:02:07.778+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"d9de87d0ab7f10fd","spanId":"d9de87d0ab7f10fd"}
{"@timestamp":"2021-07-26T10:02:07.865+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2021da50bb9e880e","spanId":"2021da50bb9e880e"}
{"@timestamp":"2021-07-26T10:02:07.865+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2021da50bb9e880e","spanId":"2021da50bb9e880e"}
{"@timestamp":"2021-07-26T10:02:07.867+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2021da50bb9e880e","spanId":"2021da50bb9e880e"}
{"@timestamp":"2021-07-26T10:02:07.867+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2021da50bb9e880e","spanId":"2021da50bb9e880e"}
{"@timestamp":"2021-07-26T10:02:07.868+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2021da50bb9e880e","spanId":"2021da50bb9e880e"}
{"@timestamp":"2021-07-26T10:02:07.869+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"2021da50bb9e880e","spanId":"2021da50bb9e880e"}
{"@timestamp":"2021-07-26T10:02:07.877+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"2021da50bb9e880e","spanId":"2021da50bb9e880e"}
{"@timestamp":"2021-07-26T10:02:07.964+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e254e913b957ef91","spanId":"e254e913b957ef91"}
{"@timestamp":"2021-07-26T10:02:07.965+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e254e913b957ef91","spanId":"e254e913b957ef91"}
{"@timestamp":"2021-07-26T10:02:07.965+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e254e913b957ef91","spanId":"e254e913b957ef91"}
{"@timestamp":"2021-07-26T10:02:07.965+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e254e913b957ef91","spanId":"e254e913b957ef91"}
{"@timestamp":"2021-07-26T10:02:07.966+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e254e913b957ef91","spanId":"e254e913b957ef91"}
{"@timestamp":"2021-07-26T10:02:07.967+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e254e913b957ef91","spanId":"e254e913b957ef91"}
{"@timestamp":"2021-07-26T10:02:07.975+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"reactor-http-nio-6","level":"INFO","level_value":20000,"traceId":"e254e913b957ef91","spanId":"e254e913b957ef91"}
{"@timestamp":"2021-07-26T10:02:27.548+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a90ff92c8b0a3392","spanId":"a90ff92c8b0a3392"}
{"@timestamp":"2021-07-26T10:02:27.548+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a90ff92c8b0a3392","spanId":"a90ff92c8b0a3392"}
{"@timestamp":"2021-07-26T10:02:27.549+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a90ff92c8b0a3392","spanId":"a90ff92c8b0a3392"}
{"@timestamp":"2021-07-26T10:02:27.549+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a90ff92c8b0a3392","spanId":"a90ff92c8b0a3392"}
{"@timestamp":"2021-07-26T10:02:27.550+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a90ff92c8b0a3392","spanId":"a90ff92c8b0a3392"}
{"@timestamp":"2021-07-26T10:02:27.550+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"a90ff92c8b0a3392","spanId":"a90ff92c8b0a3392"}
{"@timestamp":"2021-07-26T10:02:28.557+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:28.558+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:33.388+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"393e64118a7f51b1","spanId":"393e64118a7f51b1"}
{"@timestamp":"2021-07-26T10:02:33.388+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"393e64118a7f51b1","spanId":"393e64118a7f51b1"}
{"@timestamp":"2021-07-26T10:02:33.388+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"393e64118a7f51b1","spanId":"393e64118a7f51b1"}
{"@timestamp":"2021-07-26T10:02:33.388+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"393e64118a7f51b1","spanId":"393e64118a7f51b1"}
{"@timestamp":"2021-07-26T10:02:33.389+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"393e64118a7f51b1","spanId":"393e64118a7f51b1"}
{"@timestamp":"2021-07-26T10:02:33.389+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"393e64118a7f51b1","spanId":"393e64118a7f51b1"}
{"@timestamp":"2021-07-26T10:02:34.393+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:34.393+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:39.117+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5562d2080683091b","spanId":"5562d2080683091b"}
{"@timestamp":"2021-07-26T10:02:39.117+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5562d2080683091b","spanId":"5562d2080683091b"}
{"@timestamp":"2021-07-26T10:02:39.117+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5562d2080683091b","spanId":"5562d2080683091b"}
{"@timestamp":"2021-07-26T10:02:39.117+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5562d2080683091b","spanId":"5562d2080683091b"}
{"@timestamp":"2021-07-26T10:02:39.118+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5562d2080683091b","spanId":"5562d2080683091b"}
{"@timestamp":"2021-07-26T10:02:39.118+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"5562d2080683091b","spanId":"5562d2080683091b"}
{"@timestamp":"2021-07-26T10:02:40.121+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:40.122+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:44.712+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a44f5b9b127bb007","spanId":"a44f5b9b127bb007"}
{"@timestamp":"2021-07-26T10:02:44.712+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a44f5b9b127bb007","spanId":"a44f5b9b127bb007"}
{"@timestamp":"2021-07-26T10:02:44.713+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a44f5b9b127bb007","spanId":"a44f5b9b127bb007"}
{"@timestamp":"2021-07-26T10:02:44.713+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a44f5b9b127bb007","spanId":"a44f5b9b127bb007"}
{"@timestamp":"2021-07-26T10:02:44.714+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a44f5b9b127bb007","spanId":"a44f5b9b127bb007"}
{"@timestamp":"2021-07-26T10:02:44.714+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"a44f5b9b127bb007","spanId":"a44f5b9b127bb007"}
{"@timestamp":"2021-07-26T10:02:45.722+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:45.723+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:52.046+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0563282fe69024b6","spanId":"0563282fe69024b6"}
{"@timestamp":"2021-07-26T10:02:52.046+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0563282fe69024b6","spanId":"0563282fe69024b6"}
{"@timestamp":"2021-07-26T10:02:52.046+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0563282fe69024b6","spanId":"0563282fe69024b6"}
{"@timestamp":"2021-07-26T10:02:52.046+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0563282fe69024b6","spanId":"0563282fe69024b6"}
{"@timestamp":"2021-07-26T10:02:52.048+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0563282fe69024b6","spanId":"0563282fe69024b6"}
{"@timestamp":"2021-07-26T10:02:52.048+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0563282fe69024b6","spanId":"0563282fe69024b6"}
{"@timestamp":"2021-07-26T10:02:53.065+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:53.066+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:57.777+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e02e4043e895f07c","spanId":"e02e4043e895f07c"}
{"@timestamp":"2021-07-26T10:02:57.777+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e02e4043e895f07c","spanId":"e02e4043e895f07c"}
{"@timestamp":"2021-07-26T10:02:57.777+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e02e4043e895f07c","spanId":"e02e4043e895f07c"}
{"@timestamp":"2021-07-26T10:02:57.777+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e02e4043e895f07c","spanId":"e02e4043e895f07c"}
{"@timestamp":"2021-07-26T10:02:57.779+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e02e4043e895f07c","spanId":"e02e4043e895f07c"}
{"@timestamp":"2021-07-26T10:02:57.779+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"e02e4043e895f07c","spanId":"e02e4043e895f07c"}
{"@timestamp":"2021-07-26T10:02:58.793+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:02:58.794+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:03.443+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"31c6d8a4ddd38dbe","spanId":"31c6d8a4ddd38dbe"}
{"@timestamp":"2021-07-26T10:03:03.443+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"31c6d8a4ddd38dbe","spanId":"31c6d8a4ddd38dbe"}
{"@timestamp":"2021-07-26T10:03:03.443+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"31c6d8a4ddd38dbe","spanId":"31c6d8a4ddd38dbe"}
{"@timestamp":"2021-07-26T10:03:03.444+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"31c6d8a4ddd38dbe","spanId":"31c6d8a4ddd38dbe"}
{"@timestamp":"2021-07-26T10:03:03.445+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"31c6d8a4ddd38dbe","spanId":"31c6d8a4ddd38dbe"}
{"@timestamp":"2021-07-26T10:03:03.445+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"31c6d8a4ddd38dbe","spanId":"31c6d8a4ddd38dbe"}
{"@timestamp":"2021-07-26T10:03:04.452+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:04.452+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:09.192+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"98c1877223ca9847","spanId":"98c1877223ca9847"}
{"@timestamp":"2021-07-26T10:03:09.192+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"98c1877223ca9847","spanId":"98c1877223ca9847"}
{"@timestamp":"2021-07-26T10:03:09.192+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"98c1877223ca9847","spanId":"98c1877223ca9847"}
{"@timestamp":"2021-07-26T10:03:09.192+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"98c1877223ca9847","spanId":"98c1877223ca9847"}
{"@timestamp":"2021-07-26T10:03:09.195+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:09.195+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:14.869+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"98794c27c83ec288","spanId":"98794c27c83ec288"}
{"@timestamp":"2021-07-26T10:03:14.870+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"98794c27c83ec288","spanId":"98794c27c83ec288"}
{"@timestamp":"2021-07-26T10:03:14.870+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"98794c27c83ec288","spanId":"98794c27c83ec288"}
{"@timestamp":"2021-07-26T10:03:14.870+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"98794c27c83ec288","spanId":"98794c27c83ec288"}
{"@timestamp":"2021-07-26T10:03:14.871+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"98794c27c83ec288","spanId":"98794c27c83ec288"}
{"@timestamp":"2021-07-26T10:03:14.872+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"98794c27c83ec288","spanId":"98794c27c83ec288"}
{"@timestamp":"2021-07-26T10:03:15.877+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:15.877+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:22.271+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e4c690a116d10030","spanId":"e4c690a116d10030"}
{"@timestamp":"2021-07-26T10:03:22.272+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e4c690a116d10030","spanId":"e4c690a116d10030"}
{"@timestamp":"2021-07-26T10:03:22.272+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e4c690a116d10030","spanId":"e4c690a116d10030"}
{"@timestamp":"2021-07-26T10:03:22.272+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e4c690a116d10030","spanId":"e4c690a116d10030"}
{"@timestamp":"2021-07-26T10:03:22.274+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e4c690a116d10030","spanId":"e4c690a116d10030"}
{"@timestamp":"2021-07-26T10:03:22.274+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e4c690a116d10030","spanId":"e4c690a116d10030"}
{"@timestamp":"2021-07-26T10:03:23.291+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:23.292+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:42.252+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"362f6c68803fab43","spanId":"362f6c68803fab43"}
{"@timestamp":"2021-07-26T10:03:42.252+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"362f6c68803fab43","spanId":"362f6c68803fab43"}
{"@timestamp":"2021-07-26T10:03:42.252+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"362f6c68803fab43","spanId":"362f6c68803fab43"}
{"@timestamp":"2021-07-26T10:03:42.252+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"362f6c68803fab43","spanId":"362f6c68803fab43"}
{"@timestamp":"2021-07-26T10:03:42.255+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"362f6c68803fab43","spanId":"362f6c68803fab43"}
{"@timestamp":"2021-07-26T10:03:42.255+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"362f6c68803fab43","spanId":"362f6c68803fab43"}
{"@timestamp":"2021-07-26T10:03:43.260+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:43.261+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:48.257+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"799897e8c633bfd3","spanId":"799897e8c633bfd3"}
{"@timestamp":"2021-07-26T10:03:48.258+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"799897e8c633bfd3","spanId":"799897e8c633bfd3"}
{"@timestamp":"2021-07-26T10:03:48.258+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"799897e8c633bfd3","spanId":"799897e8c633bfd3"}
{"@timestamp":"2021-07-26T10:03:48.259+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"799897e8c633bfd3","spanId":"799897e8c633bfd3"}
{"@timestamp":"2021-07-26T10:03:48.260+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"799897e8c633bfd3","spanId":"799897e8c633bfd3"}
{"@timestamp":"2021-07-26T10:03:48.260+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"799897e8c633bfd3","spanId":"799897e8c633bfd3"}
{"@timestamp":"2021-07-26T10:03:49.264+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:49.265+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:54.167+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"079191be2c5dbec1","spanId":"079191be2c5dbec1"}
{"@timestamp":"2021-07-26T10:03:54.167+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"079191be2c5dbec1","spanId":"079191be2c5dbec1"}
{"@timestamp":"2021-07-26T10:03:54.167+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"079191be2c5dbec1","spanId":"079191be2c5dbec1"}
{"@timestamp":"2021-07-26T10:03:54.167+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"079191be2c5dbec1","spanId":"079191be2c5dbec1"}
{"@timestamp":"2021-07-26T10:03:54.170+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:03:54.171+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:00.073+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"2d42538593428cab","spanId":"2d42538593428cab"}
{"@timestamp":"2021-07-26T10:04:00.074+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"2d42538593428cab","spanId":"2d42538593428cab"}
{"@timestamp":"2021-07-26T10:04:00.074+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"2d42538593428cab","spanId":"2d42538593428cab"}
{"@timestamp":"2021-07-26T10:04:00.074+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"2d42538593428cab","spanId":"2d42538593428cab"}
{"@timestamp":"2021-07-26T10:04:00.076+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"2d42538593428cab","spanId":"2d42538593428cab"}
{"@timestamp":"2021-07-26T10:04:00.076+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"2d42538593428cab","spanId":"2d42538593428cab"}
{"@timestamp":"2021-07-26T10:04:01.085+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:01.086+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:06.573+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bfb1da87f66d87e4","spanId":"bfb1da87f66d87e4"}
{"@timestamp":"2021-07-26T10:04:06.574+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bfb1da87f66d87e4","spanId":"bfb1da87f66d87e4"}
{"@timestamp":"2021-07-26T10:04:06.574+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bfb1da87f66d87e4","spanId":"bfb1da87f66d87e4"}
{"@timestamp":"2021-07-26T10:04:06.575+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bfb1da87f66d87e4","spanId":"bfb1da87f66d87e4"}
{"@timestamp":"2021-07-26T10:04:06.576+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bfb1da87f66d87e4","spanId":"bfb1da87f66d87e4"}
{"@timestamp":"2021-07-26T10:04:06.577+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bfb1da87f66d87e4","spanId":"bfb1da87f66d87e4"}
{"@timestamp":"2021-07-26T10:04:07.581+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:07.582+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:12.614+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0d304deb4c10b5a2","spanId":"0d304deb4c10b5a2"}
{"@timestamp":"2021-07-26T10:04:12.615+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0d304deb4c10b5a2","spanId":"0d304deb4c10b5a2"}
{"@timestamp":"2021-07-26T10:04:12.615+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0d304deb4c10b5a2","spanId":"0d304deb4c10b5a2"}
{"@timestamp":"2021-07-26T10:04:12.615+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"0d304deb4c10b5a2","spanId":"0d304deb4c10b5a2"}
{"@timestamp":"2021-07-26T10:04:12.616+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:12.618+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:18.639+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e86c26dbc1740ff7","spanId":"e86c26dbc1740ff7"}
{"@timestamp":"2021-07-26T10:04:18.639+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e86c26dbc1740ff7","spanId":"e86c26dbc1740ff7"}
{"@timestamp":"2021-07-26T10:04:18.640+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e86c26dbc1740ff7","spanId":"e86c26dbc1740ff7"}
{"@timestamp":"2021-07-26T10:04:18.641+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e86c26dbc1740ff7","spanId":"e86c26dbc1740ff7"}
{"@timestamp":"2021-07-26T10:04:18.643+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e86c26dbc1740ff7","spanId":"e86c26dbc1740ff7"}
{"@timestamp":"2021-07-26T10:04:18.644+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e86c26dbc1740ff7","spanId":"e86c26dbc1740ff7"}
{"@timestamp":"2021-07-26T10:04:19.645+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:19.647+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:27.324+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:27.922+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:27.922+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:27.922+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:27.922+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:27.922+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:27.922+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:27.922+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:27.927+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:04:48.170+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"0f37c374d22ada61","spanId":"0f37c374d22ada61"}
{"@timestamp":"2021-07-26T10:04:48.170+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"0f37c374d22ada61","spanId":"0f37c374d22ada61"}
{"@timestamp":"2021-07-26T10:04:48.170+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"0f37c374d22ada61","spanId":"0f37c374d22ada61"}
{"@timestamp":"2021-07-26T10:04:48.170+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"0f37c374d22ada61","spanId":"0f37c374d22ada61"}
{"@timestamp":"2021-07-26T10:04:48.172+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"0f37c374d22ada61","spanId":"0f37c374d22ada61"}
{"@timestamp":"2021-07-26T10:04:48.172+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"0f37c374d22ada61","spanId":"0f37c374d22ada61"}
{"@timestamp":"2021-07-26T10:04:49.178+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:49.179+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:54.855+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"123ac58e91830fb3","spanId":"123ac58e91830fb3"}
{"@timestamp":"2021-07-26T10:04:54.855+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"123ac58e91830fb3","spanId":"123ac58e91830fb3"}
{"@timestamp":"2021-07-26T10:04:54.855+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"123ac58e91830fb3","spanId":"123ac58e91830fb3"}
{"@timestamp":"2021-07-26T10:04:54.855+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"123ac58e91830fb3","spanId":"123ac58e91830fb3"}
{"@timestamp":"2021-07-26T10:04:54.857+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:04:54.858+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:05:04.814+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3f751b64fe9625ac","spanId":"3f751b64fe9625ac"}
{"@timestamp":"2021-07-26T10:05:04.814+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3f751b64fe9625ac","spanId":"3f751b64fe9625ac"}
{"@timestamp":"2021-07-26T10:05:04.815+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3f751b64fe9625ac","spanId":"3f751b64fe9625ac"}
{"@timestamp":"2021-07-26T10:05:04.815+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3f751b64fe9625ac","spanId":"3f751b64fe9625ac"}
{"@timestamp":"2021-07-26T10:05:04.817+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3f751b64fe9625ac","spanId":"3f751b64fe9625ac"}
{"@timestamp":"2021-07-26T10:05:04.817+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3f751b64fe9625ac","spanId":"3f751b64fe9625ac"}
{"@timestamp":"2021-07-26T10:05:05.829+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:05:05.829+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:05:12.635+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"578e87ac46a39121","spanId":"578e87ac46a39121"}
{"@timestamp":"2021-07-26T10:05:12.635+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"578e87ac46a39121","spanId":"578e87ac46a39121"}
{"@timestamp":"2021-07-26T10:05:12.635+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"578e87ac46a39121","spanId":"578e87ac46a39121"}
{"@timestamp":"2021-07-26T10:05:12.636+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"578e87ac46a39121","spanId":"578e87ac46a39121"}
{"@timestamp":"2021-07-26T10:05:12.637+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"578e87ac46a39121","spanId":"578e87ac46a39121"}
{"@timestamp":"2021-07-26T10:05:12.637+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"578e87ac46a39121","spanId":"578e87ac46a39121"}
{"@timestamp":"2021-07-26T10:05:13.643+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:05:13.645+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:05:18.921+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8e7ddd61d5d82c00","spanId":"8e7ddd61d5d82c00"}
{"@timestamp":"2021-07-26T10:05:18.921+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8e7ddd61d5d82c00","spanId":"8e7ddd61d5d82c00"}
{"@timestamp":"2021-07-26T10:05:18.921+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8e7ddd61d5d82c00","spanId":"8e7ddd61d5d82c00"}
{"@timestamp":"2021-07-26T10:05:18.922+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"8e7ddd61d5d82c00","spanId":"8e7ddd61d5d82c00"}
{"@timestamp":"2021-07-26T10:05:18.926+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:05:18.928+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:05:25.102+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e49155f2bcbfc3e0","spanId":"e49155f2bcbfc3e0"}
{"@timestamp":"2021-07-26T10:05:25.103+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e49155f2bcbfc3e0","spanId":"e49155f2bcbfc3e0"}
{"@timestamp":"2021-07-26T10:05:25.103+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e49155f2bcbfc3e0","spanId":"e49155f2bcbfc3e0"}
{"@timestamp":"2021-07-26T10:05:25.103+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@68cde4a1","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e49155f2bcbfc3e0","spanId":"e49155f2bcbfc3e0"}
{"@timestamp":"2021-07-26T10:05:25.106+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e49155f2bcbfc3e0","spanId":"e49155f2bcbfc3e0"}
{"@timestamp":"2021-07-26T10:05:25.106+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$5eae72bb","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"e49155f2bcbfc3e0","spanId":"e49155f2bcbfc3e0"}
{"@timestamp":"2021-07-26T10:05:26.108+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:05:26.109+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:03.564+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 24596 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:03.556+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:03.569+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:03.616+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:03.616+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:05.453+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:05.844+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:05.851+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:05.856+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:08.367+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:08.383+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:08.384+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:08.384+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:08.741+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:08.742+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 5126 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:10.238+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:07:17.254+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:07:20.954+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:21.083+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:26.978+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:31.742+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:35.794+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:07:36.046+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.208+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.408+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.420+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.484+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.485+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.486+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.486+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.487+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.487+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:36.488+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.007+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.016+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.021+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.034+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627261657031 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.076+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.078+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627261657078, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.083+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.087+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.154+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.155+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:37.192+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:41.918+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:43.687+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:43.688+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:43.695+09:00","@version":"1","message":"Completed initialization in 6 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:43.900+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9dcaa572e045dd4a","spanId":"9dcaa572e045dd4a"}
{"@timestamp":"2021-07-26T10:07:43.899+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"24b64b7dfdbd053b","spanId":"24b64b7dfdbd053b"}
{"@timestamp":"2021-07-26T10:07:43.899+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"87b150b68dcd01e7","spanId":"87b150b68dcd01e7"}
{"@timestamp":"2021-07-26T10:07:43.897+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"620248e0128418a6","spanId":"620248e0128418a6"}
{"@timestamp":"2021-07-26T10:07:43.903+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9dcaa572e045dd4a","spanId":"9dcaa572e045dd4a"}
{"@timestamp":"2021-07-26T10:07:43.903+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"87b150b68dcd01e7","spanId":"87b150b68dcd01e7"}
{"@timestamp":"2021-07-26T10:07:43.897+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ce7420fe7b595d2","spanId":"8ce7420fe7b595d2"}
{"@timestamp":"2021-07-26T10:07:43.903+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"24b64b7dfdbd053b","spanId":"24b64b7dfdbd053b"}
{"@timestamp":"2021-07-26T10:07:43.903+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"24b64b7dfdbd053b","spanId":"24b64b7dfdbd053b"}
{"@timestamp":"2021-07-26T10:07:43.904+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"620248e0128418a6","spanId":"620248e0128418a6"}
{"@timestamp":"2021-07-26T10:07:43.903+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"87b150b68dcd01e7","spanId":"87b150b68dcd01e7"}
{"@timestamp":"2021-07-26T10:07:43.904+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"24b64b7dfdbd053b","spanId":"24b64b7dfdbd053b"}
{"@timestamp":"2021-07-26T10:07:43.904+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"620248e0128418a6","spanId":"620248e0128418a6"}
{"@timestamp":"2021-07-26T10:07:43.904+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ce7420fe7b595d2","spanId":"8ce7420fe7b595d2"}
{"@timestamp":"2021-07-26T10:07:43.904+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"620248e0128418a6","spanId":"620248e0128418a6"}
{"@timestamp":"2021-07-26T10:07:43.903+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9dcaa572e045dd4a","spanId":"9dcaa572e045dd4a"}
{"@timestamp":"2021-07-26T10:07:43.904+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"87b150b68dcd01e7","spanId":"87b150b68dcd01e7"}
{"@timestamp":"2021-07-26T10:07:43.905+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ce7420fe7b595d2","spanId":"8ce7420fe7b595d2"}
{"@timestamp":"2021-07-26T10:07:43.906+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9dcaa572e045dd4a","spanId":"9dcaa572e045dd4a"}
{"@timestamp":"2021-07-26T10:07:43.906+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ce7420fe7b595d2","spanId":"8ce7420fe7b595d2"}
{"@timestamp":"2021-07-26T10:07:43.981+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"844d8122cfe47be5","spanId":"844d8122cfe47be5"}
{"@timestamp":"2021-07-26T10:07:43.981+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"844d8122cfe47be5","spanId":"844d8122cfe47be5"}
{"@timestamp":"2021-07-26T10:07:43.982+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"844d8122cfe47be5","spanId":"844d8122cfe47be5"}
{"@timestamp":"2021-07-26T10:07:43.983+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"844d8122cfe47be5","spanId":"844d8122cfe47be5"}
{"@timestamp":"2021-07-26T10:07:44.086+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"3780f9dc58cbaf41","spanId":"3780f9dc58cbaf41"}
{"@timestamp":"2021-07-26T10:07:44.087+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"3780f9dc58cbaf41","spanId":"3780f9dc58cbaf41"}
{"@timestamp":"2021-07-26T10:07:44.088+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"3780f9dc58cbaf41","spanId":"3780f9dc58cbaf41"}
{"@timestamp":"2021-07-26T10:07:44.089+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"3780f9dc58cbaf41","spanId":"3780f9dc58cbaf41"}
{"@timestamp":"2021-07-26T10:07:44.179+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1dde246602819a18","spanId":"1dde246602819a18"}
{"@timestamp":"2021-07-26T10:07:44.180+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1dde246602819a18","spanId":"1dde246602819a18"}
{"@timestamp":"2021-07-26T10:07:44.181+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1dde246602819a18","spanId":"1dde246602819a18"}
{"@timestamp":"2021-07-26T10:07:44.182+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1dde246602819a18","spanId":"1dde246602819a18"}
{"@timestamp":"2021-07-26T10:07:44.280+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"55abc76ad0d9a0f3","spanId":"55abc76ad0d9a0f3"}
{"@timestamp":"2021-07-26T10:07:44.281+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"55abc76ad0d9a0f3","spanId":"55abc76ad0d9a0f3"}
{"@timestamp":"2021-07-26T10:07:44.281+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"55abc76ad0d9a0f3","spanId":"55abc76ad0d9a0f3"}
{"@timestamp":"2021-07-26T10:07:44.282+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"55abc76ad0d9a0f3","spanId":"55abc76ad0d9a0f3"}
{"@timestamp":"2021-07-26T10:07:44.383+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"5964e7d4330f6ebe","spanId":"5964e7d4330f6ebe"}
{"@timestamp":"2021-07-26T10:07:44.383+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"5964e7d4330f6ebe","spanId":"5964e7d4330f6ebe"}
{"@timestamp":"2021-07-26T10:07:44.384+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"5964e7d4330f6ebe","spanId":"5964e7d4330f6ebe"}
{"@timestamp":"2021-07-26T10:07:44.385+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"5964e7d4330f6ebe","spanId":"5964e7d4330f6ebe"}
{"@timestamp":"2021-07-26T10:07:44.395+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"55abc76ad0d9a0f3","spanId":"55abc76ad0d9a0f3"}
{"@timestamp":"2021-07-26T10:07:44.395+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"5964e7d4330f6ebe","spanId":"5964e7d4330f6ebe"}
{"@timestamp":"2021-07-26T10:07:44.396+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"5964e7d4330f6ebe","spanId":"5964e7d4330f6ebe"}
{"@timestamp":"2021-07-26T10:07:44.396+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"55abc76ad0d9a0f3","spanId":"55abc76ad0d9a0f3"}
{"@timestamp":"2021-07-26T10:07:44.398+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9dcaa572e045dd4a","spanId":"9dcaa572e045dd4a"}
{"@timestamp":"2021-07-26T10:07:44.399+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"3780f9dc58cbaf41","spanId":"3780f9dc58cbaf41"}
{"@timestamp":"2021-07-26T10:07:44.401+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"9dcaa572e045dd4a","spanId":"9dcaa572e045dd4a"}
{"@timestamp":"2021-07-26T10:07:44.401+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"3780f9dc58cbaf41","spanId":"3780f9dc58cbaf41"}
{"@timestamp":"2021-07-26T10:07:44.403+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"620248e0128418a6","spanId":"620248e0128418a6"}
{"@timestamp":"2021-07-26T10:07:44.403+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"87b150b68dcd01e7","spanId":"87b150b68dcd01e7"}
{"@timestamp":"2021-07-26T10:07:44.403+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"87b150b68dcd01e7","spanId":"87b150b68dcd01e7"}
{"@timestamp":"2021-07-26T10:07:44.402+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"24b64b7dfdbd053b","spanId":"24b64b7dfdbd053b"}
{"@timestamp":"2021-07-26T10:07:44.404+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ce7420fe7b595d2","spanId":"8ce7420fe7b595d2"}
{"@timestamp":"2021-07-26T10:07:44.404+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"24b64b7dfdbd053b","spanId":"24b64b7dfdbd053b"}
{"@timestamp":"2021-07-26T10:07:44.405+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"620248e0128418a6","spanId":"620248e0128418a6"}
{"@timestamp":"2021-07-26T10:07:44.406+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1dde246602819a18","spanId":"1dde246602819a18"}
{"@timestamp":"2021-07-26T10:07:44.406+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"1dde246602819a18","spanId":"1dde246602819a18"}
{"@timestamp":"2021-07-26T10:07:44.404+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"8ce7420fe7b595d2","spanId":"8ce7420fe7b595d2"}
{"@timestamp":"2021-07-26T10:07:44.412+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"844d8122cfe47be5","spanId":"844d8122cfe47be5"}
{"@timestamp":"2021-07-26T10:07:44.414+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"844d8122cfe47be5","spanId":"844d8122cfe47be5"}
{"@timestamp":"2021-07-26T10:07:47.981+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.005+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.008+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.008+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.008+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.008+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.008+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.008+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.011+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.011+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.011+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.014+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:48.060+09:00","@version":"1","message":"Started DemoApplication in 48.808 seconds (JVM running for 50.076)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:07:49.626+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:07:49.628+09:00","@version":"1","message":"Dropped 7 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T10:07:56.842+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"1fe5f407ffe603e6","spanId":"1fe5f407ffe603e6"}
{"@timestamp":"2021-07-26T10:07:56.843+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"1fe5f407ffe603e6","spanId":"1fe5f407ffe603e6"}
{"@timestamp":"2021-07-26T10:07:56.843+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"1fe5f407ffe603e6","spanId":"1fe5f407ffe603e6"}
{"@timestamp":"2021-07-26T10:07:56.844+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"1fe5f407ffe603e6","spanId":"1fe5f407ffe603e6"}
{"@timestamp":"2021-07-26T10:07:56.852+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:56.854+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:56.940+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f77eab021c5d429c","spanId":"f77eab021c5d429c"}
{"@timestamp":"2021-07-26T10:07:56.940+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f77eab021c5d429c","spanId":"f77eab021c5d429c"}
{"@timestamp":"2021-07-26T10:07:56.940+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f77eab021c5d429c","spanId":"f77eab021c5d429c"}
{"@timestamp":"2021-07-26T10:07:56.941+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"f77eab021c5d429c","spanId":"f77eab021c5d429c"}
{"@timestamp":"2021-07-26T10:07:56.946+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:56.947+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.040+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8660ef2bc710b1eb","spanId":"8660ef2bc710b1eb"}
{"@timestamp":"2021-07-26T10:07:57.042+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8660ef2bc710b1eb","spanId":"8660ef2bc710b1eb"}
{"@timestamp":"2021-07-26T10:07:57.042+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8660ef2bc710b1eb","spanId":"8660ef2bc710b1eb"}
{"@timestamp":"2021-07-26T10:07:57.042+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"8660ef2bc710b1eb","spanId":"8660ef2bc710b1eb"}
{"@timestamp":"2021-07-26T10:07:57.046+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.047+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.141+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e66aa4be1ce85da","spanId":"0e66aa4be1ce85da"}
{"@timestamp":"2021-07-26T10:07:57.141+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e66aa4be1ce85da","spanId":"0e66aa4be1ce85da"}
{"@timestamp":"2021-07-26T10:07:57.142+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e66aa4be1ce85da","spanId":"0e66aa4be1ce85da"}
{"@timestamp":"2021-07-26T10:07:57.142+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"0e66aa4be1ce85da","spanId":"0e66aa4be1ce85da"}
{"@timestamp":"2021-07-26T10:07:57.147+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.148+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.243+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c36b874c300149b","spanId":"9c36b874c300149b"}
{"@timestamp":"2021-07-26T10:07:57.244+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c36b874c300149b","spanId":"9c36b874c300149b"}
{"@timestamp":"2021-07-26T10:07:57.244+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c36b874c300149b","spanId":"9c36b874c300149b"}
{"@timestamp":"2021-07-26T10:07:57.244+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"9c36b874c300149b","spanId":"9c36b874c300149b"}
{"@timestamp":"2021-07-26T10:07:57.249+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.250+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.344+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"983b59aafbc2ec93","spanId":"983b59aafbc2ec93"}
{"@timestamp":"2021-07-26T10:07:57.345+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"983b59aafbc2ec93","spanId":"983b59aafbc2ec93"}
{"@timestamp":"2021-07-26T10:07:57.345+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"983b59aafbc2ec93","spanId":"983b59aafbc2ec93"}
{"@timestamp":"2021-07-26T10:07:57.345+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"983b59aafbc2ec93","spanId":"983b59aafbc2ec93"}
{"@timestamp":"2021-07-26T10:07:57.350+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.351+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.443+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2a15ba0fed6d4ec9","spanId":"2a15ba0fed6d4ec9"}
{"@timestamp":"2021-07-26T10:07:57.444+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2a15ba0fed6d4ec9","spanId":"2a15ba0fed6d4ec9"}
{"@timestamp":"2021-07-26T10:07:57.444+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2a15ba0fed6d4ec9","spanId":"2a15ba0fed6d4ec9"}
{"@timestamp":"2021-07-26T10:07:57.445+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"2a15ba0fed6d4ec9","spanId":"2a15ba0fed6d4ec9"}
{"@timestamp":"2021-07-26T10:07:57.449+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.450+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6cfa399a47ac49ad","spanId":"6cfa399a47ac49ad"}
{"@timestamp":"2021-07-26T10:07:57.541+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6cfa399a47ac49ad","spanId":"6cfa399a47ac49ad"}
{"@timestamp":"2021-07-26T10:07:57.542+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6cfa399a47ac49ad","spanId":"6cfa399a47ac49ad"}
{"@timestamp":"2021-07-26T10:07:57.542+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"6cfa399a47ac49ad","spanId":"6cfa399a47ac49ad"}
{"@timestamp":"2021-07-26T10:07:57.546+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.547+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.641+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8c9dda3843767403","spanId":"8c9dda3843767403"}
{"@timestamp":"2021-07-26T10:07:57.641+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8c9dda3843767403","spanId":"8c9dda3843767403"}
{"@timestamp":"2021-07-26T10:07:57.641+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8c9dda3843767403","spanId":"8c9dda3843767403"}
{"@timestamp":"2021-07-26T10:07:57.642+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"8c9dda3843767403","spanId":"8c9dda3843767403"}
{"@timestamp":"2021-07-26T10:07:57.647+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.648+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.743+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6c446051a7cdcad5","spanId":"6c446051a7cdcad5"}
{"@timestamp":"2021-07-26T10:07:57.744+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6c446051a7cdcad5","spanId":"6c446051a7cdcad5"}
{"@timestamp":"2021-07-26T10:07:57.744+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6c446051a7cdcad5","spanId":"6c446051a7cdcad5"}
{"@timestamp":"2021-07-26T10:07:57.744+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"6c446051a7cdcad5","spanId":"6c446051a7cdcad5"}
{"@timestamp":"2021-07-26T10:07:57.750+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:07:57.751+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.008+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"626c38b4b21833e4","spanId":"626c38b4b21833e4"}
{"@timestamp":"2021-07-26T10:08:10.009+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"626c38b4b21833e4","spanId":"626c38b4b21833e4"}
{"@timestamp":"2021-07-26T10:08:10.009+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"626c38b4b21833e4","spanId":"626c38b4b21833e4"}
{"@timestamp":"2021-07-26T10:08:10.009+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"626c38b4b21833e4","spanId":"626c38b4b21833e4"}
{"@timestamp":"2021-07-26T10:08:10.014+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.015+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.108+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"873e7a872f08fcab","spanId":"873e7a872f08fcab"}
{"@timestamp":"2021-07-26T10:08:10.108+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"873e7a872f08fcab","spanId":"873e7a872f08fcab"}
{"@timestamp":"2021-07-26T10:08:10.109+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"873e7a872f08fcab","spanId":"873e7a872f08fcab"}
{"@timestamp":"2021-07-26T10:08:10.109+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"873e7a872f08fcab","spanId":"873e7a872f08fcab"}
{"@timestamp":"2021-07-26T10:08:10.114+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.115+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.208+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3ce6582fef24bcfe","spanId":"3ce6582fef24bcfe"}
{"@timestamp":"2021-07-26T10:08:10.208+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3ce6582fef24bcfe","spanId":"3ce6582fef24bcfe"}
{"@timestamp":"2021-07-26T10:08:10.208+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3ce6582fef24bcfe","spanId":"3ce6582fef24bcfe"}
{"@timestamp":"2021-07-26T10:08:10.208+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"3ce6582fef24bcfe","spanId":"3ce6582fef24bcfe"}
{"@timestamp":"2021-07-26T10:08:10.212+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.213+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.309+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d84961d972235e6a","spanId":"d84961d972235e6a"}
{"@timestamp":"2021-07-26T10:08:10.309+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d84961d972235e6a","spanId":"d84961d972235e6a"}
{"@timestamp":"2021-07-26T10:08:10.310+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d84961d972235e6a","spanId":"d84961d972235e6a"}
{"@timestamp":"2021-07-26T10:08:10.311+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d84961d972235e6a","spanId":"d84961d972235e6a"}
{"@timestamp":"2021-07-26T10:08:10.316+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.317+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.408+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d7fed71c134de3dc","spanId":"d7fed71c134de3dc"}
{"@timestamp":"2021-07-26T10:08:10.408+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d7fed71c134de3dc","spanId":"d7fed71c134de3dc"}
{"@timestamp":"2021-07-26T10:08:10.409+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d7fed71c134de3dc","spanId":"d7fed71c134de3dc"}
{"@timestamp":"2021-07-26T10:08:10.409+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"d7fed71c134de3dc","spanId":"d7fed71c134de3dc"}
{"@timestamp":"2021-07-26T10:08:10.416+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.417+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.507+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"31004a4587042578","spanId":"31004a4587042578"}
{"@timestamp":"2021-07-26T10:08:10.508+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"31004a4587042578","spanId":"31004a4587042578"}
{"@timestamp":"2021-07-26T10:08:10.508+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"31004a4587042578","spanId":"31004a4587042578"}
{"@timestamp":"2021-07-26T10:08:10.508+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"31004a4587042578","spanId":"31004a4587042578"}
{"@timestamp":"2021-07-26T10:08:10.514+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.515+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.607+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"fc913a0de772f229","spanId":"fc913a0de772f229"}
{"@timestamp":"2021-07-26T10:08:10.608+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"fc913a0de772f229","spanId":"fc913a0de772f229"}
{"@timestamp":"2021-07-26T10:08:10.608+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"fc913a0de772f229","spanId":"fc913a0de772f229"}
{"@timestamp":"2021-07-26T10:08:10.609+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"fc913a0de772f229","spanId":"fc913a0de772f229"}
{"@timestamp":"2021-07-26T10:08:10.613+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.615+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.708+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e378ea3edbfcfe0b","spanId":"e378ea3edbfcfe0b"}
{"@timestamp":"2021-07-26T10:08:10.709+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e378ea3edbfcfe0b","spanId":"e378ea3edbfcfe0b"}
{"@timestamp":"2021-07-26T10:08:10.709+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e378ea3edbfcfe0b","spanId":"e378ea3edbfcfe0b"}
{"@timestamp":"2021-07-26T10:08:10.711+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e378ea3edbfcfe0b","spanId":"e378ea3edbfcfe0b"}
{"@timestamp":"2021-07-26T10:08:10.715+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.717+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.808+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48918f2a62102b6e","spanId":"48918f2a62102b6e"}
{"@timestamp":"2021-07-26T10:08:10.808+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48918f2a62102b6e","spanId":"48918f2a62102b6e"}
{"@timestamp":"2021-07-26T10:08:10.808+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48918f2a62102b6e","spanId":"48918f2a62102b6e"}
{"@timestamp":"2021-07-26T10:08:10.809+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"48918f2a62102b6e","spanId":"48918f2a62102b6e"}
{"@timestamp":"2021-07-26T10:08:10.815+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.816+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.909+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"503efc2d59bfa948","spanId":"503efc2d59bfa948"}
{"@timestamp":"2021-07-26T10:08:10.910+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"503efc2d59bfa948","spanId":"503efc2d59bfa948"}
{"@timestamp":"2021-07-26T10:08:10.912+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"503efc2d59bfa948","spanId":"503efc2d59bfa948"}
{"@timestamp":"2021-07-26T10:08:10.912+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"503efc2d59bfa948","spanId":"503efc2d59bfa948"}
{"@timestamp":"2021-07-26T10:08:10.917+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:08:10.918+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:39.876+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"14632f7ccda76fb5","spanId":"14632f7ccda76fb5"}
{"@timestamp":"2021-07-26T10:09:39.876+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"14632f7ccda76fb5","spanId":"14632f7ccda76fb5"}
{"@timestamp":"2021-07-26T10:09:39.876+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"14632f7ccda76fb5","spanId":"14632f7ccda76fb5"}
{"@timestamp":"2021-07-26T10:09:39.876+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"14632f7ccda76fb5","spanId":"14632f7ccda76fb5"}
{"@timestamp":"2021-07-26T10:09:39.881+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"14632f7ccda76fb5","spanId":"14632f7ccda76fb5"}
{"@timestamp":"2021-07-26T10:09:39.882+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"14632f7ccda76fb5","spanId":"14632f7ccda76fb5"}
{"@timestamp":"2021-07-26T10:09:39.976+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5c477198fc422a31","spanId":"5c477198fc422a31"}
{"@timestamp":"2021-07-26T10:09:39.976+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5c477198fc422a31","spanId":"5c477198fc422a31"}
{"@timestamp":"2021-07-26T10:09:39.976+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5c477198fc422a31","spanId":"5c477198fc422a31"}
{"@timestamp":"2021-07-26T10:09:39.976+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5c477198fc422a31","spanId":"5c477198fc422a31"}
{"@timestamp":"2021-07-26T10:09:39.980+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5c477198fc422a31","spanId":"5c477198fc422a31"}
{"@timestamp":"2021-07-26T10:09:39.980+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"5c477198fc422a31","spanId":"5c477198fc422a31"}
{"@timestamp":"2021-07-26T10:09:40.078+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1b0d9d0acf8cdbb2","spanId":"1b0d9d0acf8cdbb2"}
{"@timestamp":"2021-07-26T10:09:40.079+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1b0d9d0acf8cdbb2","spanId":"1b0d9d0acf8cdbb2"}
{"@timestamp":"2021-07-26T10:09:40.080+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1b0d9d0acf8cdbb2","spanId":"1b0d9d0acf8cdbb2"}
{"@timestamp":"2021-07-26T10:09:40.080+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1b0d9d0acf8cdbb2","spanId":"1b0d9d0acf8cdbb2"}
{"@timestamp":"2021-07-26T10:09:40.082+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1b0d9d0acf8cdbb2","spanId":"1b0d9d0acf8cdbb2"}
{"@timestamp":"2021-07-26T10:09:40.082+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1b0d9d0acf8cdbb2","spanId":"1b0d9d0acf8cdbb2"}
{"@timestamp":"2021-07-26T10:09:40.178+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d1d143007af3931f","spanId":"d1d143007af3931f"}
{"@timestamp":"2021-07-26T10:09:40.178+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d1d143007af3931f","spanId":"d1d143007af3931f"}
{"@timestamp":"2021-07-26T10:09:40.179+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d1d143007af3931f","spanId":"d1d143007af3931f"}
{"@timestamp":"2021-07-26T10:09:40.179+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d1d143007af3931f","spanId":"d1d143007af3931f"}
{"@timestamp":"2021-07-26T10:09:40.181+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d1d143007af3931f","spanId":"d1d143007af3931f"}
{"@timestamp":"2021-07-26T10:09:40.182+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d1d143007af3931f","spanId":"d1d143007af3931f"}
{"@timestamp":"2021-07-26T10:09:40.276+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"70fdbb1e18221f49","spanId":"70fdbb1e18221f49"}
{"@timestamp":"2021-07-26T10:09:40.276+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"70fdbb1e18221f49","spanId":"70fdbb1e18221f49"}
{"@timestamp":"2021-07-26T10:09:40.277+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"70fdbb1e18221f49","spanId":"70fdbb1e18221f49"}
{"@timestamp":"2021-07-26T10:09:40.277+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"70fdbb1e18221f49","spanId":"70fdbb1e18221f49"}
{"@timestamp":"2021-07-26T10:09:40.280+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"70fdbb1e18221f49","spanId":"70fdbb1e18221f49"}
{"@timestamp":"2021-07-26T10:09:40.280+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"70fdbb1e18221f49","spanId":"70fdbb1e18221f49"}
{"@timestamp":"2021-07-26T10:09:40.378+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"dc832455886fbe0e","spanId":"dc832455886fbe0e"}
{"@timestamp":"2021-07-26T10:09:40.379+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"dc832455886fbe0e","spanId":"dc832455886fbe0e"}
{"@timestamp":"2021-07-26T10:09:40.379+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"dc832455886fbe0e","spanId":"dc832455886fbe0e"}
{"@timestamp":"2021-07-26T10:09:40.380+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"dc832455886fbe0e","spanId":"dc832455886fbe0e"}
{"@timestamp":"2021-07-26T10:09:40.381+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"dc832455886fbe0e","spanId":"dc832455886fbe0e"}
{"@timestamp":"2021-07-26T10:09:40.381+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"dc832455886fbe0e","spanId":"dc832455886fbe0e"}
{"@timestamp":"2021-07-26T10:09:40.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b432e86cc0708081","spanId":"b432e86cc0708081"}
{"@timestamp":"2021-07-26T10:09:40.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b432e86cc0708081","spanId":"b432e86cc0708081"}
{"@timestamp":"2021-07-26T10:09:40.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b432e86cc0708081","spanId":"b432e86cc0708081"}
{"@timestamp":"2021-07-26T10:09:40.478+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b432e86cc0708081","spanId":"b432e86cc0708081"}
{"@timestamp":"2021-07-26T10:09:40.481+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b432e86cc0708081","spanId":"b432e86cc0708081"}
{"@timestamp":"2021-07-26T10:09:40.481+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b432e86cc0708081","spanId":"b432e86cc0708081"}
{"@timestamp":"2021-07-26T10:09:40.577+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e66c33956ed1d573","spanId":"e66c33956ed1d573"}
{"@timestamp":"2021-07-26T10:09:40.578+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e66c33956ed1d573","spanId":"e66c33956ed1d573"}
{"@timestamp":"2021-07-26T10:09:40.578+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e66c33956ed1d573","spanId":"e66c33956ed1d573"}
{"@timestamp":"2021-07-26T10:09:40.578+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e66c33956ed1d573","spanId":"e66c33956ed1d573"}
{"@timestamp":"2021-07-26T10:09:40.581+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e66c33956ed1d573","spanId":"e66c33956ed1d573"}
{"@timestamp":"2021-07-26T10:09:40.581+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"e66c33956ed1d573","spanId":"e66c33956ed1d573"}
{"@timestamp":"2021-07-26T10:09:40.677+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"766af2813972c1d2","spanId":"766af2813972c1d2"}
{"@timestamp":"2021-07-26T10:09:40.678+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"766af2813972c1d2","spanId":"766af2813972c1d2"}
{"@timestamp":"2021-07-26T10:09:40.678+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"766af2813972c1d2","spanId":"766af2813972c1d2"}
{"@timestamp":"2021-07-26T10:09:40.678+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"766af2813972c1d2","spanId":"766af2813972c1d2"}
{"@timestamp":"2021-07-26T10:09:40.680+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"766af2813972c1d2","spanId":"766af2813972c1d2"}
{"@timestamp":"2021-07-26T10:09:40.681+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"766af2813972c1d2","spanId":"766af2813972c1d2"}
{"@timestamp":"2021-07-26T10:09:40.778+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"63199f0678f2c10b","spanId":"63199f0678f2c10b"}
{"@timestamp":"2021-07-26T10:09:40.779+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"63199f0678f2c10b","spanId":"63199f0678f2c10b"}
{"@timestamp":"2021-07-26T10:09:40.779+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"63199f0678f2c10b","spanId":"63199f0678f2c10b"}
{"@timestamp":"2021-07-26T10:09:40.779+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"63199f0678f2c10b","spanId":"63199f0678f2c10b"}
{"@timestamp":"2021-07-26T10:09:40.782+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"63199f0678f2c10b","spanId":"63199f0678f2c10b"}
{"@timestamp":"2021-07-26T10:09:40.782+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$114d4d48","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"63199f0678f2c10b","spanId":"63199f0678f2c10b"}
{"@timestamp":"2021-07-26T10:09:42.721+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.721+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.723+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.723+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.723+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.721+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.721+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.724+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.721+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.723+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.724+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.724+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.724+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.725+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.729+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.729+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.733+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:42.733+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:45.509+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:45.510+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 1000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:54.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"fc6eeaf082d0f699","spanId":"fc6eeaf082d0f699"}
{"@timestamp":"2021-07-26T10:09:54.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"fc6eeaf082d0f699","spanId":"fc6eeaf082d0f699"}
{"@timestamp":"2021-07-26T10:09:54.814+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"fc6eeaf082d0f699","spanId":"fc6eeaf082d0f699"}
{"@timestamp":"2021-07-26T10:09:54.814+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"fc6eeaf082d0f699","spanId":"fc6eeaf082d0f699"}
{"@timestamp":"2021-07-26T10:09:54.818+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:54.819+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:54.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"3cf11fbafda35eda","spanId":"3cf11fbafda35eda"}
{"@timestamp":"2021-07-26T10:09:54.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"3cf11fbafda35eda","spanId":"3cf11fbafda35eda"}
{"@timestamp":"2021-07-26T10:09:54.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"3cf11fbafda35eda","spanId":"3cf11fbafda35eda"}
{"@timestamp":"2021-07-26T10:09:54.913+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"3cf11fbafda35eda","spanId":"3cf11fbafda35eda"}
{"@timestamp":"2021-07-26T10:09:54.917+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:54.918+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.013+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"37c3c6e37b4cef2d","spanId":"37c3c6e37b4cef2d"}
{"@timestamp":"2021-07-26T10:09:55.013+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"37c3c6e37b4cef2d","spanId":"37c3c6e37b4cef2d"}
{"@timestamp":"2021-07-26T10:09:55.013+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"37c3c6e37b4cef2d","spanId":"37c3c6e37b4cef2d"}
{"@timestamp":"2021-07-26T10:09:55.014+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"37c3c6e37b4cef2d","spanId":"37c3c6e37b4cef2d"}
{"@timestamp":"2021-07-26T10:09:55.017+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.018+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"c276e03d97a5b39e","spanId":"c276e03d97a5b39e"}
{"@timestamp":"2021-07-26T10:09:55.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"c276e03d97a5b39e","spanId":"c276e03d97a5b39e"}
{"@timestamp":"2021-07-26T10:09:55.113+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"c276e03d97a5b39e","spanId":"c276e03d97a5b39e"}
{"@timestamp":"2021-07-26T10:09:55.113+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"c276e03d97a5b39e","spanId":"c276e03d97a5b39e"}
{"@timestamp":"2021-07-26T10:09:55.117+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.118+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.213+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"f76061ffde6d663c","spanId":"f76061ffde6d663c"}
{"@timestamp":"2021-07-26T10:09:55.213+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"f76061ffde6d663c","spanId":"f76061ffde6d663c"}
{"@timestamp":"2021-07-26T10:09:55.214+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"f76061ffde6d663c","spanId":"f76061ffde6d663c"}
{"@timestamp":"2021-07-26T10:09:55.214+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"f76061ffde6d663c","spanId":"f76061ffde6d663c"}
{"@timestamp":"2021-07-26T10:09:55.216+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.218+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.313+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"a1061b443c84831a","spanId":"a1061b443c84831a"}
{"@timestamp":"2021-07-26T10:09:55.313+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"a1061b443c84831a","spanId":"a1061b443c84831a"}
{"@timestamp":"2021-07-26T10:09:55.313+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"a1061b443c84831a","spanId":"a1061b443c84831a"}
{"@timestamp":"2021-07-26T10:09:55.313+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"a1061b443c84831a","spanId":"a1061b443c84831a"}
{"@timestamp":"2021-07-26T10:09:55.316+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.317+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.414+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b31354b54711ca35","spanId":"b31354b54711ca35"}
{"@timestamp":"2021-07-26T10:09:55.414+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b31354b54711ca35","spanId":"b31354b54711ca35"}
{"@timestamp":"2021-07-26T10:09:55.414+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b31354b54711ca35","spanId":"b31354b54711ca35"}
{"@timestamp":"2021-07-26T10:09:55.414+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"b31354b54711ca35","spanId":"b31354b54711ca35"}
{"@timestamp":"2021-07-26T10:09:55.418+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.420+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.513+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1ed50210729f55f7","spanId":"1ed50210729f55f7"}
{"@timestamp":"2021-07-26T10:09:55.513+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1ed50210729f55f7","spanId":"1ed50210729f55f7"}
{"@timestamp":"2021-07-26T10:09:55.513+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1ed50210729f55f7","spanId":"1ed50210729f55f7"}
{"@timestamp":"2021-07-26T10:09:55.513+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"1ed50210729f55f7","spanId":"1ed50210729f55f7"}
{"@timestamp":"2021-07-26T10:09:55.516+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.517+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.613+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e83065d04b8237fd","spanId":"e83065d04b8237fd"}
{"@timestamp":"2021-07-26T10:09:55.614+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e83065d04b8237fd","spanId":"e83065d04b8237fd"}
{"@timestamp":"2021-07-26T10:09:55.614+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e83065d04b8237fd","spanId":"e83065d04b8237fd"}
{"@timestamp":"2021-07-26T10:09:55.614+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"e83065d04b8237fd","spanId":"e83065d04b8237fd"}
{"@timestamp":"2021-07-26T10:09:55.616+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.618+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.712+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4cfb67b096c58ef1","spanId":"4cfb67b096c58ef1"}
{"@timestamp":"2021-07-26T10:09:55.713+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4cfb67b096c58ef1","spanId":"4cfb67b096c58ef1"}
{"@timestamp":"2021-07-26T10:09:55.714+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4cfb67b096c58ef1","spanId":"4cfb67b096c58ef1"}
{"@timestamp":"2021-07-26T10:09:55.715+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@574d0910","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4cfb67b096c58ef1","spanId":"4cfb67b096c58ef1"}
{"@timestamp":"2021-07-26T10:09:55.717+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:09:55.718+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:10:46.392+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 21188 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:46.384+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:46.395+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:46.447+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:46.447+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:48.973+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:49.832+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:49.850+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:49.867+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:54.486+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:54.510+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:54.511+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:54.512+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:55.081+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:55.082+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 8634 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:10:57.432+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:11:08.503+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:11:14.390+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:14.905+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:20.565+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:24.504+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:27.656+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:11:27.866+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:27.994+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.143+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.153+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.192+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.193+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.193+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.193+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.194+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.194+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.194+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.553+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.559+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.565+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.573+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627261888572 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.601+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.601+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627261888601, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.604+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.609+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.656+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.657+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:28.686+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:32.711+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:38.371+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:38.441+09:00","@version":"1","message":"Started DemoApplication in 56.158 seconds (JVM running for 57.806)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:38.837+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:38.838+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:38.844+09:00","@version":"1","message":"Completed initialization in 6 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:11:38.985+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2011f6e427f8002b","spanId":"2011f6e427f8002b"}
{"@timestamp":"2021-07-26T10:11:38.985+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bf76ecc77af0d0ce","spanId":"bf76ecc77af0d0ce"}
{"@timestamp":"2021-07-26T10:11:38.985+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a48bbdcddb7189e3","spanId":"a48bbdcddb7189e3"}
{"@timestamp":"2021-07-26T10:11:38.985+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"aa054da603002d8d","spanId":"aa054da603002d8d"}
{"@timestamp":"2021-07-26T10:11:38.987+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bf76ecc77af0d0ce","spanId":"bf76ecc77af0d0ce"}
{"@timestamp":"2021-07-26T10:11:38.987+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"aa054da603002d8d","spanId":"aa054da603002d8d"}
{"@timestamp":"2021-07-26T10:11:38.987+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2011f6e427f8002b","spanId":"2011f6e427f8002b"}
{"@timestamp":"2021-07-26T10:11:38.988+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"aa054da603002d8d","spanId":"aa054da603002d8d"}
{"@timestamp":"2021-07-26T10:11:38.987+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a48bbdcddb7189e3","spanId":"a48bbdcddb7189e3"}
{"@timestamp":"2021-07-26T10:11:38.988+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bf76ecc77af0d0ce","spanId":"bf76ecc77af0d0ce"}
{"@timestamp":"2021-07-26T10:11:38.988+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"aa054da603002d8d","spanId":"aa054da603002d8d"}
{"@timestamp":"2021-07-26T10:11:38.988+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2011f6e427f8002b","spanId":"2011f6e427f8002b"}
{"@timestamp":"2021-07-26T10:11:38.988+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a48bbdcddb7189e3","spanId":"a48bbdcddb7189e3"}
{"@timestamp":"2021-07-26T10:11:38.989+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a48bbdcddb7189e3","spanId":"a48bbdcddb7189e3"}
{"@timestamp":"2021-07-26T10:11:38.989+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bf76ecc77af0d0ce","spanId":"bf76ecc77af0d0ce"}
{"@timestamp":"2021-07-26T10:11:38.989+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2011f6e427f8002b","spanId":"2011f6e427f8002b"}
{"@timestamp":"2021-07-26T10:11:39.077+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4a87345a07ce66ec","spanId":"4a87345a07ce66ec"}
{"@timestamp":"2021-07-26T10:11:39.078+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4a87345a07ce66ec","spanId":"4a87345a07ce66ec"}
{"@timestamp":"2021-07-26T10:11:39.079+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4a87345a07ce66ec","spanId":"4a87345a07ce66ec"}
{"@timestamp":"2021-07-26T10:11:39.079+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4a87345a07ce66ec","spanId":"4a87345a07ce66ec"}
{"@timestamp":"2021-07-26T10:11:39.176+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b9ba438fb80a44f8","spanId":"b9ba438fb80a44f8"}
{"@timestamp":"2021-07-26T10:11:39.177+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b9ba438fb80a44f8","spanId":"b9ba438fb80a44f8"}
{"@timestamp":"2021-07-26T10:11:39.177+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b9ba438fb80a44f8","spanId":"b9ba438fb80a44f8"}
{"@timestamp":"2021-07-26T10:11:39.177+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b9ba438fb80a44f8","spanId":"b9ba438fb80a44f8"}
{"@timestamp":"2021-07-26T10:11:39.279+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"91945ef371adbb1c","spanId":"91945ef371adbb1c"}
{"@timestamp":"2021-07-26T10:11:39.281+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"91945ef371adbb1c","spanId":"91945ef371adbb1c"}
{"@timestamp":"2021-07-26T10:11:39.281+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"91945ef371adbb1c","spanId":"91945ef371adbb1c"}
{"@timestamp":"2021-07-26T10:11:39.282+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"91945ef371adbb1c","spanId":"91945ef371adbb1c"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"aa054da603002d8d","spanId":"aa054da603002d8d"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b9ba438fb80a44f8","spanId":"b9ba438fb80a44f8"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4a87345a07ce66ec","spanId":"4a87345a07ce66ec"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a48bbdcddb7189e3","spanId":"a48bbdcddb7189e3"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2011f6e427f8002b","spanId":"2011f6e427f8002b"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"4a87345a07ce66ec","spanId":"4a87345a07ce66ec"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"91945ef371adbb1c","spanId":"91945ef371adbb1c"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"2011f6e427f8002b","spanId":"2011f6e427f8002b"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bf76ecc77af0d0ce","spanId":"bf76ecc77af0d0ce"}
{"@timestamp":"2021-07-26T10:11:39.342+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"91945ef371adbb1c","spanId":"91945ef371adbb1c"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"b9ba438fb80a44f8","spanId":"b9ba438fb80a44f8"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"aa054da603002d8d","spanId":"aa054da603002d8d"}
{"@timestamp":"2021-07-26T10:11:39.341+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"a48bbdcddb7189e3","spanId":"a48bbdcddb7189e3"}
{"@timestamp":"2021-07-26T10:11:39.342+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"bf76ecc77af0d0ce","spanId":"bf76ecc77af0d0ce"}
{"@timestamp":"2021-07-26T10:11:39.378+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"458ced87f072c768","spanId":"458ced87f072c768"}
{"@timestamp":"2021-07-26T10:11:39.378+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"458ced87f072c768","spanId":"458ced87f072c768"}
{"@timestamp":"2021-07-26T10:11:39.379+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"458ced87f072c768","spanId":"458ced87f072c768"}
{"@timestamp":"2021-07-26T10:11:39.379+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"458ced87f072c768","spanId":"458ced87f072c768"}
{"@timestamp":"2021-07-26T10:11:39.386+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"458ced87f072c768","spanId":"458ced87f072c768"}
{"@timestamp":"2021-07-26T10:11:39.386+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"458ced87f072c768","spanId":"458ced87f072c768"}
{"@timestamp":"2021-07-26T10:11:39.476+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ee7c7569836f7c9b","spanId":"ee7c7569836f7c9b"}
{"@timestamp":"2021-07-26T10:11:39.477+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ee7c7569836f7c9b","spanId":"ee7c7569836f7c9b"}
{"@timestamp":"2021-07-26T10:11:39.478+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ee7c7569836f7c9b","spanId":"ee7c7569836f7c9b"}
{"@timestamp":"2021-07-26T10:11:39.478+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ee7c7569836f7c9b","spanId":"ee7c7569836f7c9b"}
{"@timestamp":"2021-07-26T10:11:39.481+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ee7c7569836f7c9b","spanId":"ee7c7569836f7c9b"}
{"@timestamp":"2021-07-26T10:11:39.482+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"ee7c7569836f7c9b","spanId":"ee7c7569836f7c9b"}
{"@timestamp":"2021-07-26T10:11:39.577+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"098b0e89edbf0cc2","spanId":"098b0e89edbf0cc2"}
{"@timestamp":"2021-07-26T10:11:39.578+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"098b0e89edbf0cc2","spanId":"098b0e89edbf0cc2"}
{"@timestamp":"2021-07-26T10:11:39.578+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"098b0e89edbf0cc2","spanId":"098b0e89edbf0cc2"}
{"@timestamp":"2021-07-26T10:11:39.578+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"098b0e89edbf0cc2","spanId":"098b0e89edbf0cc2"}
{"@timestamp":"2021-07-26T10:11:39.582+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"098b0e89edbf0cc2","spanId":"098b0e89edbf0cc2"}
{"@timestamp":"2021-07-26T10:11:39.582+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$cfc9c24c","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"098b0e89edbf0cc2","spanId":"098b0e89edbf0cc2"}
{"@timestamp":"2021-07-26T10:11:42.591+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.590+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.591+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.590+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.590+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.590+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.590+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.591+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.590+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.591+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.593+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.593+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.593+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.593+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.593+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.593+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.598+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.598+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.603+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:42.603+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:11:44.186+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:11:44.187+09:00","@version":"1","message":"Dropped 9 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T10:12:25.553+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"ec3528ebd65f2963","spanId":"ec3528ebd65f2963"}
{"@timestamp":"2021-07-26T10:12:25.554+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"ec3528ebd65f2963","spanId":"ec3528ebd65f2963"}
{"@timestamp":"2021-07-26T10:12:25.554+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"ec3528ebd65f2963","spanId":"ec3528ebd65f2963"}
{"@timestamp":"2021-07-26T10:12:25.555+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"ec3528ebd65f2963","spanId":"ec3528ebd65f2963"}
{"@timestamp":"2021-07-26T10:12:25.560+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.561+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.653+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"286519b9b44b8dbf","spanId":"286519b9b44b8dbf"}
{"@timestamp":"2021-07-26T10:12:25.653+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"286519b9b44b8dbf","spanId":"286519b9b44b8dbf"}
{"@timestamp":"2021-07-26T10:12:25.653+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"286519b9b44b8dbf","spanId":"286519b9b44b8dbf"}
{"@timestamp":"2021-07-26T10:12:25.654+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"286519b9b44b8dbf","spanId":"286519b9b44b8dbf"}
{"@timestamp":"2021-07-26T10:12:25.657+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.660+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.754+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"24b8b4caecef31a7","spanId":"24b8b4caecef31a7"}
{"@timestamp":"2021-07-26T10:12:25.755+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"24b8b4caecef31a7","spanId":"24b8b4caecef31a7"}
{"@timestamp":"2021-07-26T10:12:25.755+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"24b8b4caecef31a7","spanId":"24b8b4caecef31a7"}
{"@timestamp":"2021-07-26T10:12:25.756+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"24b8b4caecef31a7","spanId":"24b8b4caecef31a7"}
{"@timestamp":"2021-07-26T10:12:25.760+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.763+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.853+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"59f060aee618c58f","spanId":"59f060aee618c58f"}
{"@timestamp":"2021-07-26T10:12:25.853+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"59f060aee618c58f","spanId":"59f060aee618c58f"}
{"@timestamp":"2021-07-26T10:12:25.854+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"59f060aee618c58f","spanId":"59f060aee618c58f"}
{"@timestamp":"2021-07-26T10:12:25.854+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"59f060aee618c58f","spanId":"59f060aee618c58f"}
{"@timestamp":"2021-07-26T10:12:25.857+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.858+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.953+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d785b697455f2032","spanId":"d785b697455f2032"}
{"@timestamp":"2021-07-26T10:12:25.953+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d785b697455f2032","spanId":"d785b697455f2032"}
{"@timestamp":"2021-07-26T10:12:25.954+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d785b697455f2032","spanId":"d785b697455f2032"}
{"@timestamp":"2021-07-26T10:12:25.954+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"d785b697455f2032","spanId":"d785b697455f2032"}
{"@timestamp":"2021-07-26T10:12:25.957+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:25.959+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.053+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"4f68b53d84f5da15","spanId":"4f68b53d84f5da15"}
{"@timestamp":"2021-07-26T10:12:26.055+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"4f68b53d84f5da15","spanId":"4f68b53d84f5da15"}
{"@timestamp":"2021-07-26T10:12:26.055+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"4f68b53d84f5da15","spanId":"4f68b53d84f5da15"}
{"@timestamp":"2021-07-26T10:12:26.055+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"4f68b53d84f5da15","spanId":"4f68b53d84f5da15"}
{"@timestamp":"2021-07-26T10:12:26.059+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.060+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.153+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b424510f77db603e","spanId":"b424510f77db603e"}
{"@timestamp":"2021-07-26T10:12:26.153+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b424510f77db603e","spanId":"b424510f77db603e"}
{"@timestamp":"2021-07-26T10:12:26.153+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b424510f77db603e","spanId":"b424510f77db603e"}
{"@timestamp":"2021-07-26T10:12:26.154+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"b424510f77db603e","spanId":"b424510f77db603e"}
{"@timestamp":"2021-07-26T10:12:26.156+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.157+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.254+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7967bf556d83d0a7","spanId":"7967bf556d83d0a7"}
{"@timestamp":"2021-07-26T10:12:26.254+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7967bf556d83d0a7","spanId":"7967bf556d83d0a7"}
{"@timestamp":"2021-07-26T10:12:26.254+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7967bf556d83d0a7","spanId":"7967bf556d83d0a7"}
{"@timestamp":"2021-07-26T10:12:26.254+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"7967bf556d83d0a7","spanId":"7967bf556d83d0a7"}
{"@timestamp":"2021-07-26T10:12:26.258+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.260+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.354+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c129ef3e2f1b0fa4","spanId":"c129ef3e2f1b0fa4"}
{"@timestamp":"2021-07-26T10:12:26.357+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c129ef3e2f1b0fa4","spanId":"c129ef3e2f1b0fa4"}
{"@timestamp":"2021-07-26T10:12:26.358+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c129ef3e2f1b0fa4","spanId":"c129ef3e2f1b0fa4"}
{"@timestamp":"2021-07-26T10:12:26.358+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"c129ef3e2f1b0fa4","spanId":"c129ef3e2f1b0fa4"}
{"@timestamp":"2021-07-26T10:12:26.362+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.363+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.452+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1e93a213a18ee16c","spanId":"1e93a213a18ee16c"}
{"@timestamp":"2021-07-26T10:12:26.453+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1e93a213a18ee16c","spanId":"1e93a213a18ee16c"}
{"@timestamp":"2021-07-26T10:12:26.453+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1e93a213a18ee16c","spanId":"1e93a213a18ee16c"}
{"@timestamp":"2021-07-26T10:12:26.453+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@2d7fa4c0","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"1e93a213a18ee16c","spanId":"1e93a213a18ee16c"}
{"@timestamp":"2021-07-26T10:12:26.456+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:12:26.458+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:13:15.060+09:00","@version":"1","message":"Starting DemoApplication using Java 1.8.0_241 on DESKTOP-KD3CH20 with PID 22236 (D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01\\build\\classes\\java\\main started by kwons in D:\\티맥스소프트\\00. 프로젝트\\03. 농협 OSS 프로젝트\\07. workspace\\02. MS Workspace\\microservice-01)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:15.047+09:00","@version":"1","message":"HV000001: Hibernate Validator 6.2.0.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:15.069+09:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:15.177+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:15.178+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:17.982+09:00","@version":"1","message":"BeanFactory id=1c9f10b0-fb30-39a8-9ea3-5564e3e26d2c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:18.455+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:18.464+09:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:18.474+09:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:21.645+09:00","@version":"1","message":"Tomcat initialized with port(s): 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:21.666+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:21.669+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:21.670+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.46]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:22.074+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:22.075+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 6895 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:23.915+09:00","@version":"1","message":"Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]","logger_name":"org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:13:33.266+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:13:38.018+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:38.159+09:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:42.630+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:47.854+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:51.966+09:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:13:52.239+09:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.404+09:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.569+09:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.579+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.627+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.628+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.629+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.629+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.630+09:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.630+09:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:52.630+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.125+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.133+09:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 300","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.139+09:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.152+09:00","@version":"1","message":"Discovery Client initialized at timestamp 1627262033150 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.195+09:00","@version":"1","message":"Registering application MICROSERVICE-01 with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.196+09:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1627262033196, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.200+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.207+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.261+09:00","@version":"1","message":"Tomcat started on port(s): 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.262+09:00","@version":"1","message":"Updating port to 8081","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:53.303+09:00","@version":"1","message":"DiscoveryClient_MICROSERVICE-01/localhost:microservice-01:8081 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:13:58.072+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:14:02.616+09:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:14:02.664+09:00","@version":"1","message":"Started DemoApplication in 52.459 seconds (JVM running for 54.216)","logger_name":"com.example.demo.DemoApplication","thread_name":"restartedMain","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:14:06.440+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:14:06.440+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:14:06.445+09:00","@version":"1","message":"Completed initialization in 4 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:14:06.555+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"abb0c23b467efe33","spanId":"abb0c23b467efe33"}
{"@timestamp":"2021-07-26T10:14:06.555+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"314ffd39970c5799","spanId":"314ffd39970c5799"}
{"@timestamp":"2021-07-26T10:14:06.555+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"138dce2c73ba61e8","spanId":"138dce2c73ba61e8"}
{"@timestamp":"2021-07-26T10:14:06.557+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"abb0c23b467efe33","spanId":"abb0c23b467efe33"}
{"@timestamp":"2021-07-26T10:14:06.557+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"314ffd39970c5799","spanId":"314ffd39970c5799"}
{"@timestamp":"2021-07-26T10:14:06.557+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"138dce2c73ba61e8","spanId":"138dce2c73ba61e8"}
{"@timestamp":"2021-07-26T10:14:06.557+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"abb0c23b467efe33","spanId":"abb0c23b467efe33"}
{"@timestamp":"2021-07-26T10:14:06.557+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"314ffd39970c5799","spanId":"314ffd39970c5799"}
{"@timestamp":"2021-07-26T10:14:06.557+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"138dce2c73ba61e8","spanId":"138dce2c73ba61e8"}
{"@timestamp":"2021-07-26T10:14:06.558+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"abb0c23b467efe33","spanId":"abb0c23b467efe33"}
{"@timestamp":"2021-07-26T10:14:06.558+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"314ffd39970c5799","spanId":"314ffd39970c5799"}
{"@timestamp":"2021-07-26T10:14:06.558+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"138dce2c73ba61e8","spanId":"138dce2c73ba61e8"}
{"@timestamp":"2021-07-26T10:14:06.609+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"64b64b610fd72f74","spanId":"64b64b610fd72f74"}
{"@timestamp":"2021-07-26T10:14:06.610+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"64b64b610fd72f74","spanId":"64b64b610fd72f74"}
{"@timestamp":"2021-07-26T10:14:06.610+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"64b64b610fd72f74","spanId":"64b64b610fd72f74"}
{"@timestamp":"2021-07-26T10:14:06.611+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"64b64b610fd72f74","spanId":"64b64b610fd72f74"}
{"@timestamp":"2021-07-26T10:14:06.707+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"34523eb79b1a802b","spanId":"34523eb79b1a802b"}
{"@timestamp":"2021-07-26T10:14:06.708+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"34523eb79b1a802b","spanId":"34523eb79b1a802b"}
{"@timestamp":"2021-07-26T10:14:06.708+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"34523eb79b1a802b","spanId":"34523eb79b1a802b"}
{"@timestamp":"2021-07-26T10:14:06.708+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"34523eb79b1a802b","spanId":"34523eb79b1a802b"}
{"@timestamp":"2021-07-26T10:14:06.810+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8c20eeea9b29154e","spanId":"8c20eeea9b29154e"}
{"@timestamp":"2021-07-26T10:14:06.810+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8c20eeea9b29154e","spanId":"8c20eeea9b29154e"}
{"@timestamp":"2021-07-26T10:14:06.811+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8c20eeea9b29154e","spanId":"8c20eeea9b29154e"}
{"@timestamp":"2021-07-26T10:14:06.811+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8c20eeea9b29154e","spanId":"8c20eeea9b29154e"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"34523eb79b1a802b","spanId":"34523eb79b1a802b"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"abb0c23b467efe33","spanId":"abb0c23b467efe33"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"64b64b610fd72f74","spanId":"64b64b610fd72f74"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8c20eeea9b29154e","spanId":"8c20eeea9b29154e"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"314ffd39970c5799","spanId":"314ffd39970c5799"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"138dce2c73ba61e8","spanId":"138dce2c73ba61e8"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"8c20eeea9b29154e","spanId":"8c20eeea9b29154e"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"314ffd39970c5799","spanId":"314ffd39970c5799"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"abb0c23b467efe33","spanId":"abb0c23b467efe33"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"64b64b610fd72f74","spanId":"64b64b610fd72f74"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"34523eb79b1a802b","spanId":"34523eb79b1a802b"}
{"@timestamp":"2021-07-26T10:14:06.852+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"138dce2c73ba61e8","spanId":"138dce2c73ba61e8"}
{"@timestamp":"2021-07-26T10:14:06.909+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6adfa3abf2556a9b","spanId":"6adfa3abf2556a9b"}
{"@timestamp":"2021-07-26T10:14:06.909+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6adfa3abf2556a9b","spanId":"6adfa3abf2556a9b"}
{"@timestamp":"2021-07-26T10:14:06.910+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6adfa3abf2556a9b","spanId":"6adfa3abf2556a9b"}
{"@timestamp":"2021-07-26T10:14:06.910+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6adfa3abf2556a9b","spanId":"6adfa3abf2556a9b"}
{"@timestamp":"2021-07-26T10:14:06.915+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6adfa3abf2556a9b","spanId":"6adfa3abf2556a9b"}
{"@timestamp":"2021-07-26T10:14:06.915+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"6adfa3abf2556a9b","spanId":"6adfa3abf2556a9b"}
{"@timestamp":"2021-07-26T10:14:07.008+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e0a4985991e2dfb4","spanId":"e0a4985991e2dfb4"}
{"@timestamp":"2021-07-26T10:14:07.009+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e0a4985991e2dfb4","spanId":"e0a4985991e2dfb4"}
{"@timestamp":"2021-07-26T10:14:07.009+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e0a4985991e2dfb4","spanId":"e0a4985991e2dfb4"}
{"@timestamp":"2021-07-26T10:14:07.009+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e0a4985991e2dfb4","spanId":"e0a4985991e2dfb4"}
{"@timestamp":"2021-07-26T10:14:07.012+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e0a4985991e2dfb4","spanId":"e0a4985991e2dfb4"}
{"@timestamp":"2021-07-26T10:14:07.012+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"e0a4985991e2dfb4","spanId":"e0a4985991e2dfb4"}
{"@timestamp":"2021-07-26T10:14:07.109+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8a19463e8f740c60","spanId":"8a19463e8f740c60"}
{"@timestamp":"2021-07-26T10:14:07.109+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8a19463e8f740c60","spanId":"8a19463e8f740c60"}
{"@timestamp":"2021-07-26T10:14:07.110+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8a19463e8f740c60","spanId":"8a19463e8f740c60"}
{"@timestamp":"2021-07-26T10:14:07.110+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8a19463e8f740c60","spanId":"8a19463e8f740c60"}
{"@timestamp":"2021-07-26T10:14:07.112+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8a19463e8f740c60","spanId":"8a19463e8f740c60"}
{"@timestamp":"2021-07-26T10:14:07.113+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"8a19463e8f740c60","spanId":"8a19463e8f740c60"}
{"@timestamp":"2021-07-26T10:14:07.208+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"97f568ee951c67f6","spanId":"97f568ee951c67f6"}
{"@timestamp":"2021-07-26T10:14:07.209+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"97f568ee951c67f6","spanId":"97f568ee951c67f6"}
{"@timestamp":"2021-07-26T10:14:07.209+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"97f568ee951c67f6","spanId":"97f568ee951c67f6"}
{"@timestamp":"2021-07-26T10:14:07.210+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"97f568ee951c67f6","spanId":"97f568ee951c67f6"}
{"@timestamp":"2021-07-26T10:14:07.212+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"97f568ee951c67f6","spanId":"97f568ee951c67f6"}
{"@timestamp":"2021-07-26T10:14:07.213+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"97f568ee951c67f6","spanId":"97f568ee951c67f6"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.224+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.224+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.220+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.225+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.223+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.224+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.227+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.232+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.236+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:10.244+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:14:11.885+09:00","@version":"1","message":"Spans were dropped due to exceptions. All subsequent errors will be logged at FINE level.","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000}
{"@timestamp":"2021-07-26T10:14:11.892+09:00","@version":"1","message":"Dropped 8 spans due to ResourceAccessException(I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out)","logger_name":"zipkin2.reporter.AsyncReporter$BoundedAsyncReporter","thread_name":"AsyncReporter{RestTemplateSender{http://localhost:9411/api/v2/spans}}","level":"WARN","level_value":30000,"stack_trace":"org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.cloud.sleuth.zipkin2.ZipkinRestTemplateWrapper.doExecute(ZipkinRestTemplateWrapper.java:69)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:660)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender.post(RestTemplateSender.java:151)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:169)\r\n\tat org.springframework.cloud.sleuth.zipkin2.RestTemplateSender$HttpPostCall.doExecute(RestTemplateSender.java:159)\r\n\tat zipkin2.Call$Base.execute(Call.java:391)\r\n\tat zipkin2.reporter.AsyncReporter$BoundedAsyncReporter.flush(AsyncReporter.java:299)\r\n\tat zipkin2.reporter.AsyncReporter$Flusher.run(AsyncReporter.java:378)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:606)\r\n\tat sun.net.NetworkClient.doConnect(NetworkClient.java:175)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:463)\r\n\tat sun.net.www.http.HttpClient.openServer(HttpClient.java:558)\r\n\tat sun.net.www.http.HttpClient.<init>(HttpClient.java:242)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:339)\r\n\tat sun.net.www.http.HttpClient.New(HttpClient.java:357)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)\r\n\tat sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)\r\n\tat org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 9 common frames omitted\r\n"}
{"@timestamp":"2021-07-26T10:15:27.742+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"874325954392a3ba","spanId":"874325954392a3ba"}
{"@timestamp":"2021-07-26T10:15:27.743+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"874325954392a3ba","spanId":"874325954392a3ba"}
{"@timestamp":"2021-07-26T10:15:27.743+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"874325954392a3ba","spanId":"874325954392a3ba"}
{"@timestamp":"2021-07-26T10:15:27.743+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"874325954392a3ba","spanId":"874325954392a3ba"}
{"@timestamp":"2021-07-26T10:15:27.749+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"874325954392a3ba","spanId":"874325954392a3ba"}
{"@timestamp":"2021-07-26T10:15:27.750+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"874325954392a3ba","spanId":"874325954392a3ba"}
{"@timestamp":"2021-07-26T10:15:27.840+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d9d2ab6d6d3c6a47","spanId":"d9d2ab6d6d3c6a47"}
{"@timestamp":"2021-07-26T10:15:27.841+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d9d2ab6d6d3c6a47","spanId":"d9d2ab6d6d3c6a47"}
{"@timestamp":"2021-07-26T10:15:27.841+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d9d2ab6d6d3c6a47","spanId":"d9d2ab6d6d3c6a47"}
{"@timestamp":"2021-07-26T10:15:27.841+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d9d2ab6d6d3c6a47","spanId":"d9d2ab6d6d3c6a47"}
{"@timestamp":"2021-07-26T10:15:27.844+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d9d2ab6d6d3c6a47","spanId":"d9d2ab6d6d3c6a47"}
{"@timestamp":"2021-07-26T10:15:27.845+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-2","level":"INFO","level_value":20000,"traceId":"d9d2ab6d6d3c6a47","spanId":"d9d2ab6d6d3c6a47"}
{"@timestamp":"2021-07-26T10:15:27.973+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"793a1ca4fbccab46","spanId":"793a1ca4fbccab46"}
{"@timestamp":"2021-07-26T10:15:27.973+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"793a1ca4fbccab46","spanId":"793a1ca4fbccab46"}
{"@timestamp":"2021-07-26T10:15:27.974+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"793a1ca4fbccab46","spanId":"793a1ca4fbccab46"}
{"@timestamp":"2021-07-26T10:15:27.974+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"793a1ca4fbccab46","spanId":"793a1ca4fbccab46"}
{"@timestamp":"2021-07-26T10:15:27.977+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"793a1ca4fbccab46","spanId":"793a1ca4fbccab46"}
{"@timestamp":"2021-07-26T10:15:27.978+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"793a1ca4fbccab46","spanId":"793a1ca4fbccab46"}
{"@timestamp":"2021-07-26T10:15:28.044+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1af440a98c2ec6c","spanId":"b1af440a98c2ec6c"}
{"@timestamp":"2021-07-26T10:15:28.044+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1af440a98c2ec6c","spanId":"b1af440a98c2ec6c"}
{"@timestamp":"2021-07-26T10:15:28.045+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1af440a98c2ec6c","spanId":"b1af440a98c2ec6c"}
{"@timestamp":"2021-07-26T10:15:28.045+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1af440a98c2ec6c","spanId":"b1af440a98c2ec6c"}
{"@timestamp":"2021-07-26T10:15:28.048+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1af440a98c2ec6c","spanId":"b1af440a98c2ec6c"}
{"@timestamp":"2021-07-26T10:15:28.048+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"b1af440a98c2ec6c","spanId":"b1af440a98c2ec6c"}
{"@timestamp":"2021-07-26T10:15:28.144+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"96f02d91b0319579","spanId":"96f02d91b0319579"}
{"@timestamp":"2021-07-26T10:15:28.145+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"96f02d91b0319579","spanId":"96f02d91b0319579"}
{"@timestamp":"2021-07-26T10:15:28.146+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"96f02d91b0319579","spanId":"96f02d91b0319579"}
{"@timestamp":"2021-07-26T10:15:28.147+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"96f02d91b0319579","spanId":"96f02d91b0319579"}
{"@timestamp":"2021-07-26T10:15:28.156+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"96f02d91b0319579","spanId":"96f02d91b0319579"}
{"@timestamp":"2021-07-26T10:15:28.156+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"96f02d91b0319579","spanId":"96f02d91b0319579"}
{"@timestamp":"2021-07-26T10:15:28.245+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"db9efd4ccd90a92d","spanId":"db9efd4ccd90a92d"}
{"@timestamp":"2021-07-26T10:15:28.245+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"db9efd4ccd90a92d","spanId":"db9efd4ccd90a92d"}
{"@timestamp":"2021-07-26T10:15:28.246+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"db9efd4ccd90a92d","spanId":"db9efd4ccd90a92d"}
{"@timestamp":"2021-07-26T10:15:28.246+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"db9efd4ccd90a92d","spanId":"db9efd4ccd90a92d"}
{"@timestamp":"2021-07-26T10:15:28.249+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"db9efd4ccd90a92d","spanId":"db9efd4ccd90a92d"}
{"@timestamp":"2021-07-26T10:15:28.250+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"db9efd4ccd90a92d","spanId":"db9efd4ccd90a92d"}
{"@timestamp":"2021-07-26T10:15:28.347+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a71b5e88d117d35c","spanId":"a71b5e88d117d35c"}
{"@timestamp":"2021-07-26T10:15:28.347+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a71b5e88d117d35c","spanId":"a71b5e88d117d35c"}
{"@timestamp":"2021-07-26T10:15:28.348+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a71b5e88d117d35c","spanId":"a71b5e88d117d35c"}
{"@timestamp":"2021-07-26T10:15:28.348+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a71b5e88d117d35c","spanId":"a71b5e88d117d35c"}
{"@timestamp":"2021-07-26T10:15:28.351+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a71b5e88d117d35c","spanId":"a71b5e88d117d35c"}
{"@timestamp":"2021-07-26T10:15:28.354+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"traceId":"a71b5e88d117d35c","spanId":"a71b5e88d117d35c"}
{"@timestamp":"2021-07-26T10:15:28.446+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b37f4db93a1b8673","spanId":"b37f4db93a1b8673"}
{"@timestamp":"2021-07-26T10:15:28.446+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b37f4db93a1b8673","spanId":"b37f4db93a1b8673"}
{"@timestamp":"2021-07-26T10:15:28.446+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b37f4db93a1b8673","spanId":"b37f4db93a1b8673"}
{"@timestamp":"2021-07-26T10:15:28.446+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b37f4db93a1b8673","spanId":"b37f4db93a1b8673"}
{"@timestamp":"2021-07-26T10:15:28.450+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b37f4db93a1b8673","spanId":"b37f4db93a1b8673"}
{"@timestamp":"2021-07-26T10:15:28.451+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"b37f4db93a1b8673","spanId":"b37f4db93a1b8673"}
{"@timestamp":"2021-07-26T10:15:28.543+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"bbb33ae0033f97c3","spanId":"bbb33ae0033f97c3"}
{"@timestamp":"2021-07-26T10:15:28.544+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"bbb33ae0033f97c3","spanId":"bbb33ae0033f97c3"}
{"@timestamp":"2021-07-26T10:15:28.545+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"bbb33ae0033f97c3","spanId":"bbb33ae0033f97c3"}
{"@timestamp":"2021-07-26T10:15:28.545+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"bbb33ae0033f97c3","spanId":"bbb33ae0033f97c3"}
{"@timestamp":"2021-07-26T10:15:28.548+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"bbb33ae0033f97c3","spanId":"bbb33ae0033f97c3"}
{"@timestamp":"2021-07-26T10:15:28.549+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"bbb33ae0033f97c3","spanId":"bbb33ae0033f97c3"}
{"@timestamp":"2021-07-26T10:15:28.644+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b8d77f594a0922e1","spanId":"b8d77f594a0922e1"}
{"@timestamp":"2021-07-26T10:15:28.645+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b8d77f594a0922e1","spanId":"b8d77f594a0922e1"}
{"@timestamp":"2021-07-26T10:15:28.645+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b8d77f594a0922e1","spanId":"b8d77f594a0922e1"}
{"@timestamp":"2021-07-26T10:15:28.646+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b8d77f594a0922e1","spanId":"b8d77f594a0922e1"}
{"@timestamp":"2021-07-26T10:15:28.649+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b8d77f594a0922e1","spanId":"b8d77f594a0922e1"}
{"@timestamp":"2021-07-26T10:15:28.650+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000,"traceId":"b8d77f594a0922e1","spanId":"b8d77f594a0922e1"}
{"@timestamp":"2021-07-26T10:15:31.223+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.224+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.224+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.225+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.225+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.226+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.226+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-5","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.226+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.224+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.224+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.224+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-4","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.225+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.226+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.227+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.225+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.231+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.235+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:31.239+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-6","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:33.963+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:15:33.964+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:16:38.312+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"82ab57b3d68065fb","spanId":"82ab57b3d68065fb"}
{"@timestamp":"2021-07-26T10:16:38.313+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"82ab57b3d68065fb","spanId":"82ab57b3d68065fb"}
{"@timestamp":"2021-07-26T10:16:38.314+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"82ab57b3d68065fb","spanId":"82ab57b3d68065fb"}
{"@timestamp":"2021-07-26T10:16:38.314+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"82ab57b3d68065fb","spanId":"82ab57b3d68065fb"}
{"@timestamp":"2021-07-26T10:16:38.320+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"82ab57b3d68065fb","spanId":"82ab57b3d68065fb"}
{"@timestamp":"2021-07-26T10:16:38.320+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"82ab57b3d68065fb","spanId":"82ab57b3d68065fb"}
{"@timestamp":"2021-07-26T10:16:38.410+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8df98340121173c9","spanId":"8df98340121173c9"}
{"@timestamp":"2021-07-26T10:16:38.410+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8df98340121173c9","spanId":"8df98340121173c9"}
{"@timestamp":"2021-07-26T10:16:38.411+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8df98340121173c9","spanId":"8df98340121173c9"}
{"@timestamp":"2021-07-26T10:16:38.411+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8df98340121173c9","spanId":"8df98340121173c9"}
{"@timestamp":"2021-07-26T10:16:38.413+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8df98340121173c9","spanId":"8df98340121173c9"}
{"@timestamp":"2021-07-26T10:16:38.414+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-3","level":"INFO","level_value":20000,"traceId":"8df98340121173c9","spanId":"8df98340121173c9"}
{"@timestamp":"2021-07-26T10:16:38.432+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"82ab57b3d68065fb","spanId":"82ab57b3d68065fb"}
{"@timestamp":"2021-07-26T10:16:38.510+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"238e03f794ee86b3","spanId":"238e03f794ee86b3"}
{"@timestamp":"2021-07-26T10:16:38.510+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"238e03f794ee86b3","spanId":"238e03f794ee86b3"}
{"@timestamp":"2021-07-26T10:16:38.510+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"238e03f794ee86b3","spanId":"238e03f794ee86b3"}
{"@timestamp":"2021-07-26T10:16:38.511+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"238e03f794ee86b3","spanId":"238e03f794ee86b3"}
{"@timestamp":"2021-07-26T10:16:38.514+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"238e03f794ee86b3","spanId":"238e03f794ee86b3"}
{"@timestamp":"2021-07-26T10:16:38.516+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"238e03f794ee86b3","spanId":"238e03f794ee86b3"}
{"@timestamp":"2021-07-26T10:16:38.538+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"238e03f794ee86b3","spanId":"238e03f794ee86b3"}
{"@timestamp":"2021-07-26T10:16:38.539+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"8df98340121173c9","spanId":"8df98340121173c9"}
{"@timestamp":"2021-07-26T10:16:38.611+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1804509b44540684","spanId":"1804509b44540684"}
{"@timestamp":"2021-07-26T10:16:38.611+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1804509b44540684","spanId":"1804509b44540684"}
{"@timestamp":"2021-07-26T10:16:38.612+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1804509b44540684","spanId":"1804509b44540684"}
{"@timestamp":"2021-07-26T10:16:38.612+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1804509b44540684","spanId":"1804509b44540684"}
{"@timestamp":"2021-07-26T10:16:38.616+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1804509b44540684","spanId":"1804509b44540684"}
{"@timestamp":"2021-07-26T10:16:38.616+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1804509b44540684","spanId":"1804509b44540684"}
{"@timestamp":"2021-07-26T10:16:38.628+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"1804509b44540684","spanId":"1804509b44540684"}
{"@timestamp":"2021-07-26T10:16:38.711+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"29fe25c7c38788ad","spanId":"29fe25c7c38788ad"}
{"@timestamp":"2021-07-26T10:16:38.712+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"29fe25c7c38788ad","spanId":"29fe25c7c38788ad"}
{"@timestamp":"2021-07-26T10:16:38.712+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"29fe25c7c38788ad","spanId":"29fe25c7c38788ad"}
{"@timestamp":"2021-07-26T10:16:38.712+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"29fe25c7c38788ad","spanId":"29fe25c7c38788ad"}
{"@timestamp":"2021-07-26T10:16:38.715+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"29fe25c7c38788ad","spanId":"29fe25c7c38788ad"}
{"@timestamp":"2021-07-26T10:16:38.716+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"29fe25c7c38788ad","spanId":"29fe25c7c38788ad"}
{"@timestamp":"2021-07-26T10:16:38.726+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"29fe25c7c38788ad","spanId":"29fe25c7c38788ad"}
{"@timestamp":"2021-07-26T10:16:38.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9d90674fda727f27","spanId":"9d90674fda727f27"}
{"@timestamp":"2021-07-26T10:16:38.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9d90674fda727f27","spanId":"9d90674fda727f27"}
{"@timestamp":"2021-07-26T10:16:38.813+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9d90674fda727f27","spanId":"9d90674fda727f27"}
{"@timestamp":"2021-07-26T10:16:38.814+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9d90674fda727f27","spanId":"9d90674fda727f27"}
{"@timestamp":"2021-07-26T10:16:38.816+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9d90674fda727f27","spanId":"9d90674fda727f27"}
{"@timestamp":"2021-07-26T10:16:38.817+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"9d90674fda727f27","spanId":"9d90674fda727f27"}
{"@timestamp":"2021-07-26T10:16:38.827+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"9d90674fda727f27","spanId":"9d90674fda727f27"}
{"@timestamp":"2021-07-26T10:16:38.911+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bca3e43eccc9be5a","spanId":"bca3e43eccc9be5a"}
{"@timestamp":"2021-07-26T10:16:38.912+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bca3e43eccc9be5a","spanId":"bca3e43eccc9be5a"}
{"@timestamp":"2021-07-26T10:16:38.913+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bca3e43eccc9be5a","spanId":"bca3e43eccc9be5a"}
{"@timestamp":"2021-07-26T10:16:38.913+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bca3e43eccc9be5a","spanId":"bca3e43eccc9be5a"}
{"@timestamp":"2021-07-26T10:16:38.915+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bca3e43eccc9be5a","spanId":"bca3e43eccc9be5a"}
{"@timestamp":"2021-07-26T10:16:38.915+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"bca3e43eccc9be5a","spanId":"bca3e43eccc9be5a"}
{"@timestamp":"2021-07-26T10:16:38.928+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"bca3e43eccc9be5a","spanId":"bca3e43eccc9be5a"}
{"@timestamp":"2021-07-26T10:16:39.011+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"fcdb316455fe8b85","spanId":"fcdb316455fe8b85"}
{"@timestamp":"2021-07-26T10:16:39.012+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"fcdb316455fe8b85","spanId":"fcdb316455fe8b85"}
{"@timestamp":"2021-07-26T10:16:39.013+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"fcdb316455fe8b85","spanId":"fcdb316455fe8b85"}
{"@timestamp":"2021-07-26T10:16:39.013+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"fcdb316455fe8b85","spanId":"fcdb316455fe8b85"}
{"@timestamp":"2021-07-26T10:16:39.016+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"fcdb316455fe8b85","spanId":"fcdb316455fe8b85"}
{"@timestamp":"2021-07-26T10:16:39.016+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"fcdb316455fe8b85","spanId":"fcdb316455fe8b85"}
{"@timestamp":"2021-07-26T10:16:39.027+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-14","level":"INFO","level_value":20000,"traceId":"fcdb316455fe8b85","spanId":"fcdb316455fe8b85"}
{"@timestamp":"2021-07-26T10:16:39.111+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1a5670fc48fd58bb","spanId":"1a5670fc48fd58bb"}
{"@timestamp":"2021-07-26T10:16:39.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1a5670fc48fd58bb","spanId":"1a5670fc48fd58bb"}
{"@timestamp":"2021-07-26T10:16:39.112+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1a5670fc48fd58bb","spanId":"1a5670fc48fd58bb"}
{"@timestamp":"2021-07-26T10:16:39.112+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1a5670fc48fd58bb","spanId":"1a5670fc48fd58bb"}
{"@timestamp":"2021-07-26T10:16:39.115+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1a5670fc48fd58bb","spanId":"1a5670fc48fd58bb"}
{"@timestamp":"2021-07-26T10:16:39.116+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"1a5670fc48fd58bb","spanId":"1a5670fc48fd58bb"}
{"@timestamp":"2021-07-26T10:16:39.126+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-12","level":"INFO","level_value":20000,"traceId":"1a5670fc48fd58bb","spanId":"1a5670fc48fd58bb"}
{"@timestamp":"2021-07-26T10:16:39.213+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"946b4a0f34cbbe9b","spanId":"946b4a0f34cbbe9b"}
{"@timestamp":"2021-07-26T10:16:39.214+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"946b4a0f34cbbe9b","spanId":"946b4a0f34cbbe9b"}
{"@timestamp":"2021-07-26T10:16:39.214+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"946b4a0f34cbbe9b","spanId":"946b4a0f34cbbe9b"}
{"@timestamp":"2021-07-26T10:16:39.214+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"946b4a0f34cbbe9b","spanId":"946b4a0f34cbbe9b"}
{"@timestamp":"2021-07-26T10:16:39.217+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"946b4a0f34cbbe9b","spanId":"946b4a0f34cbbe9b"}
{"@timestamp":"2021-07-26T10:16:39.217+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/success","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"946b4a0f34cbbe9b","spanId":"946b4a0f34cbbe9b"}
{"@timestamp":"2021-07-26T10:16:39.232+09:00","@version":"1","message":">>>>>>>>>> RESPONSE <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"reactor-http-nio-10","level":"INFO","level_value":20000,"traceId":"946b4a0f34cbbe9b","spanId":"946b4a0f34cbbe9b"}
{"@timestamp":"2021-07-26T10:16:56.463+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d932dc3795c1fdc8","spanId":"d932dc3795c1fdc8"}
{"@timestamp":"2021-07-26T10:16:56.463+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d932dc3795c1fdc8","spanId":"d932dc3795c1fdc8"}
{"@timestamp":"2021-07-26T10:16:56.463+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d932dc3795c1fdc8","spanId":"d932dc3795c1fdc8"}
{"@timestamp":"2021-07-26T10:16:56.464+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d932dc3795c1fdc8","spanId":"d932dc3795c1fdc8"}
{"@timestamp":"2021-07-26T10:16:56.465+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d932dc3795c1fdc8","spanId":"d932dc3795c1fdc8"}
{"@timestamp":"2021-07-26T10:16:56.466+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"d932dc3795c1fdc8","spanId":"d932dc3795c1fdc8"}
{"@timestamp":"2021-07-26T10:16:58.482+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:16:58.483+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:03.054+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"9e35470346877b83","spanId":"9e35470346877b83"}
{"@timestamp":"2021-07-26T10:17:03.054+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"9e35470346877b83","spanId":"9e35470346877b83"}
{"@timestamp":"2021-07-26T10:17:03.054+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"9e35470346877b83","spanId":"9e35470346877b83"}
{"@timestamp":"2021-07-26T10:17:03.054+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"9e35470346877b83","spanId":"9e35470346877b83"}
{"@timestamp":"2021-07-26T10:17:03.055+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"9e35470346877b83","spanId":"9e35470346877b83"}
{"@timestamp":"2021-07-26T10:17:03.056+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"9e35470346877b83","spanId":"9e35470346877b83"}
{"@timestamp":"2021-07-26T10:17:05.066+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:05.067+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:12.345+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"21fe8b5c188169fa","spanId":"21fe8b5c188169fa"}
{"@timestamp":"2021-07-26T10:17:12.345+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"21fe8b5c188169fa","spanId":"21fe8b5c188169fa"}
{"@timestamp":"2021-07-26T10:17:12.346+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"21fe8b5c188169fa","spanId":"21fe8b5c188169fa"}
{"@timestamp":"2021-07-26T10:17:12.346+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"21fe8b5c188169fa","spanId":"21fe8b5c188169fa"}
{"@timestamp":"2021-07-26T10:17:12.348+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"21fe8b5c188169fa","spanId":"21fe8b5c188169fa"}
{"@timestamp":"2021-07-26T10:17:12.348+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"21fe8b5c188169fa","spanId":"21fe8b5c188169fa"}
{"@timestamp":"2021-07-26T10:17:14.366+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:14.367+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:18.087+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f128505165939425","spanId":"f128505165939425"}
{"@timestamp":"2021-07-26T10:17:18.088+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f128505165939425","spanId":"f128505165939425"}
{"@timestamp":"2021-07-26T10:17:18.088+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f128505165939425","spanId":"f128505165939425"}
{"@timestamp":"2021-07-26T10:17:18.088+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f128505165939425","spanId":"f128505165939425"}
{"@timestamp":"2021-07-26T10:17:18.091+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f128505165939425","spanId":"f128505165939425"}
{"@timestamp":"2021-07-26T10:17:18.091+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"f128505165939425","spanId":"f128505165939425"}
{"@timestamp":"2021-07-26T10:17:20.095+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:20.095+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:23.767+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"73d97a82e7c11bac","spanId":"73d97a82e7c11bac"}
{"@timestamp":"2021-07-26T10:17:23.767+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"73d97a82e7c11bac","spanId":"73d97a82e7c11bac"}
{"@timestamp":"2021-07-26T10:17:23.767+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"73d97a82e7c11bac","spanId":"73d97a82e7c11bac"}
{"@timestamp":"2021-07-26T10:17:23.767+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"73d97a82e7c11bac","spanId":"73d97a82e7c11bac"}
{"@timestamp":"2021-07-26T10:17:23.770+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"73d97a82e7c11bac","spanId":"73d97a82e7c11bac"}
{"@timestamp":"2021-07-26T10:17:23.770+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-6","level":"INFO","level_value":20000,"traceId":"73d97a82e7c11bac","spanId":"73d97a82e7c11bac"}
{"@timestamp":"2021-07-26T10:17:25.777+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:25.777+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:29.415+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b436e8209cf2dcb","spanId":"4b436e8209cf2dcb"}
{"@timestamp":"2021-07-26T10:17:29.416+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b436e8209cf2dcb","spanId":"4b436e8209cf2dcb"}
{"@timestamp":"2021-07-26T10:17:29.416+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b436e8209cf2dcb","spanId":"4b436e8209cf2dcb"}
{"@timestamp":"2021-07-26T10:17:29.416+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b436e8209cf2dcb","spanId":"4b436e8209cf2dcb"}
{"@timestamp":"2021-07-26T10:17:29.418+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b436e8209cf2dcb","spanId":"4b436e8209cf2dcb"}
{"@timestamp":"2021-07-26T10:17:29.418+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000,"traceId":"4b436e8209cf2dcb","spanId":"4b436e8209cf2dcb"}
{"@timestamp":"2021-07-26T10:17:31.423+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:31.424+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:35.128+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7885a6dc74ca7f99","spanId":"7885a6dc74ca7f99"}
{"@timestamp":"2021-07-26T10:17:35.129+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7885a6dc74ca7f99","spanId":"7885a6dc74ca7f99"}
{"@timestamp":"2021-07-26T10:17:35.129+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7885a6dc74ca7f99","spanId":"7885a6dc74ca7f99"}
{"@timestamp":"2021-07-26T10:17:35.129+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7885a6dc74ca7f99","spanId":"7885a6dc74ca7f99"}
{"@timestamp":"2021-07-26T10:17:35.131+09:00","@version":"1","message":">>>>>>>>>> REQUEST <<<<<<<<<<","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7885a6dc74ca7f99","spanId":"7885a6dc74ca7f99"}
{"@timestamp":"2021-07-26T10:17:35.131+09:00","@version":"1","message":"Request: GET http://localhost:8082/microservice/server/test/fail","logger_name":"com.example.demo.config.WebClientConfig$$EnhancerBySpringCGLIB$$bdb339b3","thread_name":"http-nio-8081-exec-5","level":"INFO","level_value":20000,"traceId":"7885a6dc74ca7f99","spanId":"7885a6dc74ca7f99"}
{"@timestamp":"2021-07-26T10:17:37.140+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:37.141+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-10","level":"ERROR","level_value":40000,"stack_trace":"java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 2000ms in 'flatMap' (and no fallback has been configured)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279)\r\n\tat reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:88)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270)\r\n\tat reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth.lambda$null$6(ReactorSleuth.java:309)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\r\n\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:41.114+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e8a0dd44a85451b5","spanId":"e8a0dd44a85451b5"}
{"@timestamp":"2021-07-26T10:17:41.115+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e8a0dd44a85451b5","spanId":"e8a0dd44a85451b5"}
{"@timestamp":"2021-07-26T10:17:41.115+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e8a0dd44a85451b5","spanId":"e8a0dd44a85451b5"}
{"@timestamp":"2021-07-26T10:17:41.115+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"traceId":"e8a0dd44a85451b5","spanId":"e8a0dd44a85451b5"}
{"@timestamp":"2021-07-26T10:17:41.120+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:41.121+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-7","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:47.206+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cc074e7fe4d95b37","spanId":"cc074e7fe4d95b37"}
{"@timestamp":"2021-07-26T10:17:47.207+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cc074e7fe4d95b37","spanId":"cc074e7fe4d95b37"}
{"@timestamp":"2021-07-26T10:17:47.207+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cc074e7fe4d95b37","spanId":"cc074e7fe4d95b37"}
{"@timestamp":"2021-07-26T10:17:47.207+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-8","level":"INFO","level_value":20000,"traceId":"cc074e7fe4d95b37","spanId":"cc074e7fe4d95b37"}
{"@timestamp":"2021-07-26T10:17:47.210+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:47.211+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-8","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:53.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : connection, VALUE : [keep-alive]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bad7aecff5c5324b","spanId":"bad7aecff5c5324b"}
{"@timestamp":"2021-07-26T10:17:53.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : host, VALUE : [localhost:8081]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bad7aecff5c5324b","spanId":"bad7aecff5c5324b"}
{"@timestamp":"2021-07-26T10:17:53.165+09:00","@version":"1","message":"[MICROSERVICE-01] KEY : user-agent, VALUE : [Apache-HttpClient/4.5.12 (Java/1.8.0_241)]","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bad7aecff5c5324b","spanId":"bad7aecff5c5324b"}
{"@timestamp":"2021-07-26T10:17:53.165+09:00","@version":"1","message":"### microservice-01 Called, webClient : org.springframework.web.reactive.function.client.DefaultWebClient@23757dcc","logger_name":"com.example.demo.service.HealthCheckService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"traceId":"bad7aecff5c5324b","spanId":"bad7aecff5c5324b"}
{"@timestamp":"2021-07-26T10:17:53.167+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] threw exception","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:17:53.168+09:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8081-exec-9","level":"ERROR","level_value":40000,"stack_trace":"io.github.resilience4j.circuitbreaker.CallNotPermittedException: CircuitBreaker 'nhCircuitBreaker' is OPEN and does not permit further calls\r\n\tat io.github.resilience4j.circuitbreaker.CallNotPermittedException.createCallNotPermittedException(CallNotPermittedException.java:48)\r\n\tat io.github.resilience4j.reactor.circuitbreaker.operator.MonoCircuitBreaker.subscribe(MonoCircuitBreaker.java:40)\r\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\r\n\tat org.springframework.cloud.sleuth.instrument.reactor.SleuthMonoLift.subscribe(ReactorHooksHelper.java:225)\r\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4150)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$DeferredResultSubscriber.connect(ReactiveTypeHandler.java:451)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler.handleValue(ReactiveTypeHandler.java:166)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler.handleReturnValue(ResponseBodyEmitterReturnValueHandler.java:154)\r\n\tat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1063)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:89)\r\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:114)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-07-26T10:18:52.634+09:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:18:53.140+09:00","@version":"1","message":"Disable delta property : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:18:53.140+09:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:18:53.140+09:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:18:53.141+09:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:18:53.141+09:00","@version":"1","message":"Registered Applications size is zero : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:18:53.141+09:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:18:53.141+09:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-07-26T10:18:53.151+09:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
